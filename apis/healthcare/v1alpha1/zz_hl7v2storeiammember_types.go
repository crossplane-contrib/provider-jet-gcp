/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HL7V2StoreIAMMemberConditionObservation struct {
}

type HL7V2StoreIAMMemberConditionParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Required
	Expression *string `json:"expression" tf:"expression,omitempty"`

	// +kubebuilder:validation:Required
	Title *string `json:"title" tf:"title,omitempty"`
}

type HL7V2StoreIAMMemberObservation struct {
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type HL7V2StoreIAMMemberParameters struct {

	// +kubebuilder:validation:Optional
	Condition []HL7V2StoreIAMMemberConditionParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// +kubebuilder:validation:Required
	HL7V2StoreID *string `json:"hl7V2StoreId" tf:"hl7_v2_store_id,omitempty"`

	// +kubebuilder:validation:Required
	Member *string `json:"member" tf:"member,omitempty"`

	// +kubebuilder:validation:Required
	Role *string `json:"role" tf:"role,omitempty"`
}

// HL7V2StoreIAMMemberSpec defines the desired state of HL7V2StoreIAMMember
type HL7V2StoreIAMMemberSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HL7V2StoreIAMMemberParameters `json:"forProvider"`
}

// HL7V2StoreIAMMemberStatus defines the observed state of HL7V2StoreIAMMember.
type HL7V2StoreIAMMemberStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HL7V2StoreIAMMemberObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HL7V2StoreIAMMember is the Schema for the HL7V2StoreIAMMembers API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcpjet}
type HL7V2StoreIAMMember struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HL7V2StoreIAMMemberSpec   `json:"spec"`
	Status            HL7V2StoreIAMMemberStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HL7V2StoreIAMMemberList contains a list of HL7V2StoreIAMMembers
type HL7V2StoreIAMMemberList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HL7V2StoreIAMMember `json:"items"`
}

// Repository type metadata.
var (
	HL7V2StoreIAMMember_Kind             = "HL7V2StoreIAMMember"
	HL7V2StoreIAMMember_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HL7V2StoreIAMMember_Kind}.String()
	HL7V2StoreIAMMember_KindAPIVersion   = HL7V2StoreIAMMember_Kind + "." + CRDGroupVersion.String()
	HL7V2StoreIAMMember_GroupVersionKind = CRDGroupVersion.WithKind(HL7V2StoreIAMMember_Kind)
)

func init() {
	SchemeBuilder.Register(&HL7V2StoreIAMMember{}, &HL7V2StoreIAMMemberList{})
}
