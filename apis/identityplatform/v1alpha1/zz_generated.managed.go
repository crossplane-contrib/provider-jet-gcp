/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this DefaultSupportedIdPConfig.
func (mg *DefaultSupportedIdPConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DefaultSupportedIdPConfig.
func (mg *DefaultSupportedIdPConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DefaultSupportedIdPConfig.
func (mg *DefaultSupportedIdPConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DefaultSupportedIdPConfig.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DefaultSupportedIdPConfig) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DefaultSupportedIdPConfig.
func (mg *DefaultSupportedIdPConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DefaultSupportedIdPConfig.
func (mg *DefaultSupportedIdPConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DefaultSupportedIdPConfig.
func (mg *DefaultSupportedIdPConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DefaultSupportedIdPConfig.
func (mg *DefaultSupportedIdPConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DefaultSupportedIdPConfig.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DefaultSupportedIdPConfig) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DefaultSupportedIdPConfig.
func (mg *DefaultSupportedIdPConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this InboundSAMLConfig.
func (mg *InboundSAMLConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this InboundSAMLConfig.
func (mg *InboundSAMLConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this InboundSAMLConfig.
func (mg *InboundSAMLConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this InboundSAMLConfig.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *InboundSAMLConfig) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this InboundSAMLConfig.
func (mg *InboundSAMLConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this InboundSAMLConfig.
func (mg *InboundSAMLConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this InboundSAMLConfig.
func (mg *InboundSAMLConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this InboundSAMLConfig.
func (mg *InboundSAMLConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this InboundSAMLConfig.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *InboundSAMLConfig) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this InboundSAMLConfig.
func (mg *InboundSAMLConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this OAuthIdPConfig.
func (mg *OAuthIdPConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this OAuthIdPConfig.
func (mg *OAuthIdPConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this OAuthIdPConfig.
func (mg *OAuthIdPConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this OAuthIdPConfig.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *OAuthIdPConfig) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this OAuthIdPConfig.
func (mg *OAuthIdPConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this OAuthIdPConfig.
func (mg *OAuthIdPConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this OAuthIdPConfig.
func (mg *OAuthIdPConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this OAuthIdPConfig.
func (mg *OAuthIdPConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this OAuthIdPConfig.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *OAuthIdPConfig) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this OAuthIdPConfig.
func (mg *OAuthIdPConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this Tenant.
func (mg *Tenant) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this Tenant.
func (mg *Tenant) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this Tenant.
func (mg *Tenant) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this Tenant.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *Tenant) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this Tenant.
func (mg *Tenant) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this Tenant.
func (mg *Tenant) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this Tenant.
func (mg *Tenant) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this Tenant.
func (mg *Tenant) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this Tenant.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *Tenant) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this Tenant.
func (mg *Tenant) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this TenantDefaultSupportedIdPConfig.
func (mg *TenantDefaultSupportedIdPConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this TenantDefaultSupportedIdPConfig.
func (mg *TenantDefaultSupportedIdPConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this TenantDefaultSupportedIdPConfig.
func (mg *TenantDefaultSupportedIdPConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this TenantDefaultSupportedIdPConfig.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *TenantDefaultSupportedIdPConfig) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this TenantDefaultSupportedIdPConfig.
func (mg *TenantDefaultSupportedIdPConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this TenantDefaultSupportedIdPConfig.
func (mg *TenantDefaultSupportedIdPConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this TenantDefaultSupportedIdPConfig.
func (mg *TenantDefaultSupportedIdPConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this TenantDefaultSupportedIdPConfig.
func (mg *TenantDefaultSupportedIdPConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this TenantDefaultSupportedIdPConfig.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *TenantDefaultSupportedIdPConfig) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this TenantDefaultSupportedIdPConfig.
func (mg *TenantDefaultSupportedIdPConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this TenantInboundSAMLConfig.
func (mg *TenantInboundSAMLConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this TenantInboundSAMLConfig.
func (mg *TenantInboundSAMLConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this TenantInboundSAMLConfig.
func (mg *TenantInboundSAMLConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this TenantInboundSAMLConfig.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *TenantInboundSAMLConfig) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this TenantInboundSAMLConfig.
func (mg *TenantInboundSAMLConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this TenantInboundSAMLConfig.
func (mg *TenantInboundSAMLConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this TenantInboundSAMLConfig.
func (mg *TenantInboundSAMLConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this TenantInboundSAMLConfig.
func (mg *TenantInboundSAMLConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this TenantInboundSAMLConfig.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *TenantInboundSAMLConfig) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this TenantInboundSAMLConfig.
func (mg *TenantInboundSAMLConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this TenantOAuthIdPConfig.
func (mg *TenantOAuthIdPConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this TenantOAuthIdPConfig.
func (mg *TenantOAuthIdPConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this TenantOAuthIdPConfig.
func (mg *TenantOAuthIdPConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this TenantOAuthIdPConfig.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *TenantOAuthIdPConfig) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this TenantOAuthIdPConfig.
func (mg *TenantOAuthIdPConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this TenantOAuthIdPConfig.
func (mg *TenantOAuthIdPConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this TenantOAuthIdPConfig.
func (mg *TenantOAuthIdPConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this TenantOAuthIdPConfig.
func (mg *TenantOAuthIdPConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this TenantOAuthIdPConfig.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *TenantOAuthIdPConfig) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this TenantOAuthIdPConfig.
func (mg *TenantOAuthIdPConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
