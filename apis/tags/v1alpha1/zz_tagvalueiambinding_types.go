/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TagValueIamBindingConditionObservation struct {
}

type TagValueIamBindingConditionParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Required
	Expression *string `json:"expression" tf:"expression,omitempty"`

	// +kubebuilder:validation:Required
	Title *string `json:"title" tf:"title,omitempty"`
}

type TagValueIamBindingObservation struct {
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`
}

type TagValueIamBindingParameters struct {

	// +kubebuilder:validation:Optional
	Condition []TagValueIamBindingConditionParameters `json:"condition,omitempty" tf:"condition,omitempty"`

	// +kubebuilder:validation:Required
	Members []*string `json:"members" tf:"members,omitempty"`

	// +kubebuilder:validation:Required
	Role *string `json:"role" tf:"role,omitempty"`

	// +kubebuilder:validation:Required
	TagValue *string `json:"tagValue" tf:"tag_value,omitempty"`
}

// TagValueIamBindingSpec defines the desired state of TagValueIamBinding
type TagValueIamBindingSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TagValueIamBindingParameters `json:"forProvider"`
}

// TagValueIamBindingStatus defines the observed state of TagValueIamBinding.
type TagValueIamBindingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TagValueIamBindingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TagValueIamBinding is the Schema for the TagValueIamBindings API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcpjet}
type TagValueIamBinding struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TagValueIamBindingSpec   `json:"spec"`
	Status            TagValueIamBindingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TagValueIamBindingList contains a list of TagValueIamBindings
type TagValueIamBindingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TagValueIamBinding `json:"items"`
}

// Repository type metadata.
var (
	TagValueIamBinding_Kind             = "TagValueIamBinding"
	TagValueIamBinding_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TagValueIamBinding_Kind}.String()
	TagValueIamBinding_KindAPIVersion   = TagValueIamBinding_Kind + "." + CRDGroupVersion.String()
	TagValueIamBinding_GroupVersionKind = CRDGroupVersion.WithKind(TagValueIamBinding_Kind)
)

func init() {
	SchemeBuilder.Register(&TagValueIamBinding{}, &TagValueIamBindingList{})
}
