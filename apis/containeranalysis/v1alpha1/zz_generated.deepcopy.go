// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttestationAuthorityObservation) DeepCopyInto(out *AttestationAuthorityObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttestationAuthorityObservation.
func (in *AttestationAuthorityObservation) DeepCopy() *AttestationAuthorityObservation {
	if in == nil {
		return nil
	}
	out := new(AttestationAuthorityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttestationAuthorityParameters) DeepCopyInto(out *AttestationAuthorityParameters) {
	*out = *in
	if in.Hint != nil {
		in, out := &in.Hint, &out.Hint
		*out = make([]HintParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttestationAuthorityParameters.
func (in *AttestationAuthorityParameters) DeepCopy() *AttestationAuthorityParameters {
	if in == nil {
		return nil
	}
	out := new(AttestationAuthorityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttestationObservation) DeepCopyInto(out *AttestationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttestationObservation.
func (in *AttestationObservation) DeepCopy() *AttestationObservation {
	if in == nil {
		return nil
	}
	out := new(AttestationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttestationParameters) DeepCopyInto(out *AttestationParameters) {
	*out = *in
	if in.SerializedPayload != nil {
		in, out := &in.SerializedPayload, &out.SerializedPayload
		*out = new(string)
		**out = **in
	}
	if in.Signatures != nil {
		in, out := &in.Signatures, &out.Signatures
		*out = make([]SignaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttestationParameters.
func (in *AttestationParameters) DeepCopy() *AttestationParameters {
	if in == nil {
		return nil
	}
	out := new(AttestationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HintObservation) DeepCopyInto(out *HintObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HintObservation.
func (in *HintObservation) DeepCopy() *HintObservation {
	if in == nil {
		return nil
	}
	out := new(HintObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HintParameters) DeepCopyInto(out *HintParameters) {
	*out = *in
	if in.HumanReadableName != nil {
		in, out := &in.HumanReadableName, &out.HumanReadableName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HintParameters.
func (in *HintParameters) DeepCopy() *HintParameters {
	if in == nil {
		return nil
	}
	out := new(HintParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Note) DeepCopyInto(out *Note) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Note.
func (in *Note) DeepCopy() *Note {
	if in == nil {
		return nil
	}
	out := new(Note)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Note) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteList) DeepCopyInto(out *NoteList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Note, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteList.
func (in *NoteList) DeepCopy() *NoteList {
	if in == nil {
		return nil
	}
	out := new(NoteList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NoteList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteObservation) DeepCopyInto(out *NoteObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteObservation.
func (in *NoteObservation) DeepCopy() *NoteObservation {
	if in == nil {
		return nil
	}
	out := new(NoteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteParameters) DeepCopyInto(out *NoteParameters) {
	*out = *in
	if in.AttestationAuthority != nil {
		in, out := &in.AttestationAuthority, &out.AttestationAuthority
		*out = make([]AttestationAuthorityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.LongDescription != nil {
		in, out := &in.LongDescription, &out.LongDescription
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RelatedNoteNames != nil {
		in, out := &in.RelatedNoteNames, &out.RelatedNoteNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RelatedURL != nil {
		in, out := &in.RelatedURL, &out.RelatedURL
		*out = make([]RelatedURLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShortDescription != nil {
		in, out := &in.ShortDescription, &out.ShortDescription
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteParameters.
func (in *NoteParameters) DeepCopy() *NoteParameters {
	if in == nil {
		return nil
	}
	out := new(NoteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteSpec) DeepCopyInto(out *NoteSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteSpec.
func (in *NoteSpec) DeepCopy() *NoteSpec {
	if in == nil {
		return nil
	}
	out := new(NoteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoteStatus) DeepCopyInto(out *NoteStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoteStatus.
func (in *NoteStatus) DeepCopy() *NoteStatus {
	if in == nil {
		return nil
	}
	out := new(NoteStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Occurrence) DeepCopyInto(out *Occurrence) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Occurrence.
func (in *Occurrence) DeepCopy() *Occurrence {
	if in == nil {
		return nil
	}
	out := new(Occurrence)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Occurrence) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OccurrenceList) DeepCopyInto(out *OccurrenceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Occurrence, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OccurrenceList.
func (in *OccurrenceList) DeepCopy() *OccurrenceList {
	if in == nil {
		return nil
	}
	out := new(OccurrenceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OccurrenceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OccurrenceObservation) DeepCopyInto(out *OccurrenceObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OccurrenceObservation.
func (in *OccurrenceObservation) DeepCopy() *OccurrenceObservation {
	if in == nil {
		return nil
	}
	out := new(OccurrenceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OccurrenceParameters) DeepCopyInto(out *OccurrenceParameters) {
	*out = *in
	if in.Attestation != nil {
		in, out := &in.Attestation, &out.Attestation
		*out = make([]AttestationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NoteName != nil {
		in, out := &in.NoteName, &out.NoteName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Remediation != nil {
		in, out := &in.Remediation, &out.Remediation
		*out = new(string)
		**out = **in
	}
	if in.ResourceURI != nil {
		in, out := &in.ResourceURI, &out.ResourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OccurrenceParameters.
func (in *OccurrenceParameters) DeepCopy() *OccurrenceParameters {
	if in == nil {
		return nil
	}
	out := new(OccurrenceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OccurrenceSpec) DeepCopyInto(out *OccurrenceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OccurrenceSpec.
func (in *OccurrenceSpec) DeepCopy() *OccurrenceSpec {
	if in == nil {
		return nil
	}
	out := new(OccurrenceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OccurrenceStatus) DeepCopyInto(out *OccurrenceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OccurrenceStatus.
func (in *OccurrenceStatus) DeepCopy() *OccurrenceStatus {
	if in == nil {
		return nil
	}
	out := new(OccurrenceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelatedURLObservation) DeepCopyInto(out *RelatedURLObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelatedURLObservation.
func (in *RelatedURLObservation) DeepCopy() *RelatedURLObservation {
	if in == nil {
		return nil
	}
	out := new(RelatedURLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelatedURLParameters) DeepCopyInto(out *RelatedURLParameters) {
	*out = *in
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelatedURLParameters.
func (in *RelatedURLParameters) DeepCopy() *RelatedURLParameters {
	if in == nil {
		return nil
	}
	out := new(RelatedURLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignaturesObservation) DeepCopyInto(out *SignaturesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignaturesObservation.
func (in *SignaturesObservation) DeepCopy() *SignaturesObservation {
	if in == nil {
		return nil
	}
	out := new(SignaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignaturesParameters) DeepCopyInto(out *SignaturesParameters) {
	*out = *in
	if in.PublicKeyID != nil {
		in, out := &in.PublicKeyID, &out.PublicKeyID
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignaturesParameters.
func (in *SignaturesParameters) DeepCopy() *SignaturesParameters {
	if in == nil {
		return nil
	}
	out := new(SignaturesParameters)
	in.DeepCopyInto(out)
	return out
}
