// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionObservation) DeepCopyInto(out *ConditionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionObservation.
func (in *ConditionObservation) DeepCopy() *ConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionParameters) DeepCopyInto(out *ConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionParameters.
func (in *ConditionParameters) DeepCopy() *ConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedOutputConfigObservation) DeepCopyInto(out *FeedOutputConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedOutputConfigObservation.
func (in *FeedOutputConfigObservation) DeepCopy() *FeedOutputConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FeedOutputConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedOutputConfigParameters) DeepCopyInto(out *FeedOutputConfigParameters) {
	*out = *in
	if in.PubsubDestination != nil {
		in, out := &in.PubsubDestination, &out.PubsubDestination
		*out = make([]PubsubDestinationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedOutputConfigParameters.
func (in *FeedOutputConfigParameters) DeepCopy() *FeedOutputConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FeedOutputConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedOutputConfigPubsubDestinationObservation) DeepCopyInto(out *FeedOutputConfigPubsubDestinationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedOutputConfigPubsubDestinationObservation.
func (in *FeedOutputConfigPubsubDestinationObservation) DeepCopy() *FeedOutputConfigPubsubDestinationObservation {
	if in == nil {
		return nil
	}
	out := new(FeedOutputConfigPubsubDestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedOutputConfigPubsubDestinationParameters) DeepCopyInto(out *FeedOutputConfigPubsubDestinationParameters) {
	*out = *in
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedOutputConfigPubsubDestinationParameters.
func (in *FeedOutputConfigPubsubDestinationParameters) DeepCopy() *FeedOutputConfigPubsubDestinationParameters {
	if in == nil {
		return nil
	}
	out := new(FeedOutputConfigPubsubDestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderFeed) DeepCopyInto(out *FolderFeed) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderFeed.
func (in *FolderFeed) DeepCopy() *FolderFeed {
	if in == nil {
		return nil
	}
	out := new(FolderFeed)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FolderFeed) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderFeedList) DeepCopyInto(out *FolderFeedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FolderFeed, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderFeedList.
func (in *FolderFeedList) DeepCopy() *FolderFeedList {
	if in == nil {
		return nil
	}
	out := new(FolderFeedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FolderFeedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderFeedObservation) DeepCopyInto(out *FolderFeedObservation) {
	*out = *in
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderFeedObservation.
func (in *FolderFeedObservation) DeepCopy() *FolderFeedObservation {
	if in == nil {
		return nil
	}
	out := new(FolderFeedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderFeedParameters) DeepCopyInto(out *FolderFeedParameters) {
	*out = *in
	if in.AssetNames != nil {
		in, out := &in.AssetNames, &out.AssetNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AssetTypes != nil {
		in, out := &in.AssetTypes, &out.AssetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BillingProject != nil {
		in, out := &in.BillingProject, &out.BillingProject
		*out = new(string)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FeedID != nil {
		in, out := &in.FeedID, &out.FeedID
		*out = new(string)
		**out = **in
	}
	if in.FeedOutputConfig != nil {
		in, out := &in.FeedOutputConfig, &out.FeedOutputConfig
		*out = make([]FeedOutputConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderFeedParameters.
func (in *FolderFeedParameters) DeepCopy() *FolderFeedParameters {
	if in == nil {
		return nil
	}
	out := new(FolderFeedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderFeedSpec) DeepCopyInto(out *FolderFeedSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderFeedSpec.
func (in *FolderFeedSpec) DeepCopy() *FolderFeedSpec {
	if in == nil {
		return nil
	}
	out := new(FolderFeedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FolderFeedStatus) DeepCopyInto(out *FolderFeedStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderFeedStatus.
func (in *FolderFeedStatus) DeepCopy() *FolderFeedStatus {
	if in == nil {
		return nil
	}
	out := new(FolderFeedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationFeed) DeepCopyInto(out *OrganizationFeed) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationFeed.
func (in *OrganizationFeed) DeepCopy() *OrganizationFeed {
	if in == nil {
		return nil
	}
	out := new(OrganizationFeed)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationFeed) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationFeedConditionObservation) DeepCopyInto(out *OrganizationFeedConditionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationFeedConditionObservation.
func (in *OrganizationFeedConditionObservation) DeepCopy() *OrganizationFeedConditionObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationFeedConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationFeedConditionParameters) DeepCopyInto(out *OrganizationFeedConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationFeedConditionParameters.
func (in *OrganizationFeedConditionParameters) DeepCopy() *OrganizationFeedConditionParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationFeedConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationFeedFeedOutputConfigObservation) DeepCopyInto(out *OrganizationFeedFeedOutputConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationFeedFeedOutputConfigObservation.
func (in *OrganizationFeedFeedOutputConfigObservation) DeepCopy() *OrganizationFeedFeedOutputConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationFeedFeedOutputConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationFeedFeedOutputConfigParameters) DeepCopyInto(out *OrganizationFeedFeedOutputConfigParameters) {
	*out = *in
	if in.PubsubDestination != nil {
		in, out := &in.PubsubDestination, &out.PubsubDestination
		*out = make([]FeedOutputConfigPubsubDestinationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationFeedFeedOutputConfigParameters.
func (in *OrganizationFeedFeedOutputConfigParameters) DeepCopy() *OrganizationFeedFeedOutputConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationFeedFeedOutputConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationFeedList) DeepCopyInto(out *OrganizationFeedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrganizationFeed, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationFeedList.
func (in *OrganizationFeedList) DeepCopy() *OrganizationFeedList {
	if in == nil {
		return nil
	}
	out := new(OrganizationFeedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationFeedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationFeedObservation) DeepCopyInto(out *OrganizationFeedObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationFeedObservation.
func (in *OrganizationFeedObservation) DeepCopy() *OrganizationFeedObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationFeedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationFeedParameters) DeepCopyInto(out *OrganizationFeedParameters) {
	*out = *in
	if in.AssetNames != nil {
		in, out := &in.AssetNames, &out.AssetNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AssetTypes != nil {
		in, out := &in.AssetTypes, &out.AssetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BillingProject != nil {
		in, out := &in.BillingProject, &out.BillingProject
		*out = new(string)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]OrganizationFeedConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FeedID != nil {
		in, out := &in.FeedID, &out.FeedID
		*out = new(string)
		**out = **in
	}
	if in.FeedOutputConfig != nil {
		in, out := &in.FeedOutputConfig, &out.FeedOutputConfig
		*out = make([]OrganizationFeedFeedOutputConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationFeedParameters.
func (in *OrganizationFeedParameters) DeepCopy() *OrganizationFeedParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationFeedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationFeedSpec) DeepCopyInto(out *OrganizationFeedSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationFeedSpec.
func (in *OrganizationFeedSpec) DeepCopy() *OrganizationFeedSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationFeedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationFeedStatus) DeepCopyInto(out *OrganizationFeedStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationFeedStatus.
func (in *OrganizationFeedStatus) DeepCopy() *OrganizationFeedStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationFeedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeed) DeepCopyInto(out *ProjectFeed) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeed.
func (in *ProjectFeed) DeepCopy() *ProjectFeed {
	if in == nil {
		return nil
	}
	out := new(ProjectFeed)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectFeed) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedConditionObservation) DeepCopyInto(out *ProjectFeedConditionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedConditionObservation.
func (in *ProjectFeedConditionObservation) DeepCopy() *ProjectFeedConditionObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedConditionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedConditionParameters) DeepCopyInto(out *ProjectFeedConditionParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedConditionParameters.
func (in *ProjectFeedConditionParameters) DeepCopy() *ProjectFeedConditionParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedConditionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedFeedOutputConfigObservation) DeepCopyInto(out *ProjectFeedFeedOutputConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedFeedOutputConfigObservation.
func (in *ProjectFeedFeedOutputConfigObservation) DeepCopy() *ProjectFeedFeedOutputConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedFeedOutputConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedFeedOutputConfigParameters) DeepCopyInto(out *ProjectFeedFeedOutputConfigParameters) {
	*out = *in
	if in.PubsubDestination != nil {
		in, out := &in.PubsubDestination, &out.PubsubDestination
		*out = make([]ProjectFeedFeedOutputConfigPubsubDestinationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedFeedOutputConfigParameters.
func (in *ProjectFeedFeedOutputConfigParameters) DeepCopy() *ProjectFeedFeedOutputConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedFeedOutputConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedFeedOutputConfigPubsubDestinationObservation) DeepCopyInto(out *ProjectFeedFeedOutputConfigPubsubDestinationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedFeedOutputConfigPubsubDestinationObservation.
func (in *ProjectFeedFeedOutputConfigPubsubDestinationObservation) DeepCopy() *ProjectFeedFeedOutputConfigPubsubDestinationObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedFeedOutputConfigPubsubDestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedFeedOutputConfigPubsubDestinationParameters) DeepCopyInto(out *ProjectFeedFeedOutputConfigPubsubDestinationParameters) {
	*out = *in
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedFeedOutputConfigPubsubDestinationParameters.
func (in *ProjectFeedFeedOutputConfigPubsubDestinationParameters) DeepCopy() *ProjectFeedFeedOutputConfigPubsubDestinationParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedFeedOutputConfigPubsubDestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedList) DeepCopyInto(out *ProjectFeedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProjectFeed, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedList.
func (in *ProjectFeedList) DeepCopy() *ProjectFeedList {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectFeedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedObservation) DeepCopyInto(out *ProjectFeedObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedObservation.
func (in *ProjectFeedObservation) DeepCopy() *ProjectFeedObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedParameters) DeepCopyInto(out *ProjectFeedParameters) {
	*out = *in
	if in.AssetNames != nil {
		in, out := &in.AssetNames, &out.AssetNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AssetTypes != nil {
		in, out := &in.AssetTypes, &out.AssetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BillingProject != nil {
		in, out := &in.BillingProject, &out.BillingProject
		*out = new(string)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ProjectFeedConditionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FeedID != nil {
		in, out := &in.FeedID, &out.FeedID
		*out = new(string)
		**out = **in
	}
	if in.FeedOutputConfig != nil {
		in, out := &in.FeedOutputConfig, &out.FeedOutputConfig
		*out = make([]ProjectFeedFeedOutputConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedParameters.
func (in *ProjectFeedParameters) DeepCopy() *ProjectFeedParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedSpec) DeepCopyInto(out *ProjectFeedSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedSpec.
func (in *ProjectFeedSpec) DeepCopy() *ProjectFeedSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectFeedStatus) DeepCopyInto(out *ProjectFeedStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectFeedStatus.
func (in *ProjectFeedStatus) DeepCopy() *ProjectFeedStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectFeedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubsubDestinationObservation) DeepCopyInto(out *PubsubDestinationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubsubDestinationObservation.
func (in *PubsubDestinationObservation) DeepCopy() *PubsubDestinationObservation {
	if in == nil {
		return nil
	}
	out := new(PubsubDestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PubsubDestinationParameters) DeepCopyInto(out *PubsubDestinationParameters) {
	*out = *in
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PubsubDestinationParameters.
func (in *PubsubDestinationParameters) DeepCopy() *PubsubDestinationParameters {
	if in == nil {
		return nil
	}
	out := new(PubsubDestinationParameters)
	in.DeepCopyInto(out)
	return out
}
