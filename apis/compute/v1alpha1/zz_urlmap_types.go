/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DefaultRouteActionCorsPolicyObservation struct {
}

type DefaultRouteActionCorsPolicyParameters struct {

	// In response to a preflight request, setting this to true indicates that the actual request can include user credentials.
	// This translates to the Access-Control-Allow-Credentials header.
	// +kubebuilder:validation:Optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// Specifies the content for the Access-Control-Allow-Headers header.
	// +kubebuilder:validation:Optional
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// Specifies the content for the Access-Control-Allow-Methods header.
	// +kubebuilder:validation:Optional
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// Specifies the regular expression patterns that match allowed origins. For regular expression grammar
	// please see en.cppreference.com/w/cpp/regex/ecmascript
	// An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.
	// +kubebuilder:validation:Optional
	AllowOriginRegexes []*string `json:"allowOriginRegexes,omitempty" tf:"allow_origin_regexes,omitempty"`

	// Specifies the list of origins that will be allowed to do CORS requests.
	// An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.
	// +kubebuilder:validation:Optional
	AllowOrigins []*string `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// If true, specifies the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.
	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// Specifies the content for the Access-Control-Expose-Headers header.
	// +kubebuilder:validation:Optional
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// Specifies how long results of a preflight request can be cached in seconds.
	// This translates to the Access-Control-Max-Age header.
	// +kubebuilder:validation:Optional
	MaxAge *int64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type DefaultRouteActionFaultInjectionPolicyAbortObservation struct {
}

type DefaultRouteActionFaultInjectionPolicyAbortParameters struct {

	// The HTTP status code used to abort the request.
	// The value must be between 200 and 599 inclusive.
	// +kubebuilder:validation:Optional
	HTTPStatus *int64 `json:"httpStatus,omitempty" tf:"http_status,omitempty"`

	// The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection.
	// The value must be between 0.0 and 100.0 inclusive.
	// +kubebuilder:validation:Optional
	Percentage *float64 `json:"percentage,omitempty" tf:"percentage,omitempty"`
}

type DefaultRouteActionFaultInjectionPolicyDelayFixedDelayObservation struct {
}

type DefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are
	// represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
	// Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
	// +kubebuilder:validation:Optional
	Seconds *string `json:"seconds,omitempty" tf:"seconds,omitempty"`
}

type DefaultRouteActionFaultInjectionPolicyDelayObservation struct {
}

type DefaultRouteActionFaultInjectionPolicyDelayParameters struct {

	// Specifies the value of the fixed delay interval.
	// +kubebuilder:validation:Optional
	FixedDelay []FaultInjectionPolicyDelayFixedDelayParameters `json:"fixedDelay,omitempty" tf:"fixed_delay,omitempty"`

	// The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection.
	// The value must be between 0.0 and 100.0 inclusive.
	// +kubebuilder:validation:Optional
	Percentage *float64 `json:"percentage,omitempty" tf:"percentage,omitempty"`
}

type DefaultRouteActionFaultInjectionPolicyObservation struct {
}

type DefaultRouteActionFaultInjectionPolicyParameters struct {

	// The specification for how client requests are aborted as part of fault injection.
	// +kubebuilder:validation:Optional
	Abort []DefaultRouteActionFaultInjectionPolicyAbortParameters `json:"abort,omitempty" tf:"abort,omitempty"`

	// The specification for how client requests are delayed as part of fault injection, before being sent to a backend service.
	// +kubebuilder:validation:Optional
	Delay []DefaultRouteActionFaultInjectionPolicyDelayParameters `json:"delay,omitempty" tf:"delay,omitempty"`
}

type DefaultRouteActionObservation struct {
}

type DefaultRouteActionParameters struct {

	// The specification for allowing client side cross-origin requests. Please see
	// [W3C Recommendation for Cross Origin Resource Sharing](https://www.w3.org/TR/cors/)
	// +kubebuilder:validation:Optional
	CorsPolicy []DefaultRouteActionCorsPolicyParameters `json:"corsPolicy,omitempty" tf:"cors_policy,omitempty"`

	// The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
	// As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a
	// percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted
	// by the Loadbalancer for a percentage of requests.
	//
	// timeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.
	// +kubebuilder:validation:Optional
	FaultInjectionPolicy []DefaultRouteActionFaultInjectionPolicyParameters `json:"faultInjectionPolicy,omitempty" tf:"fault_injection_policy,omitempty"`

	// Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
	// Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service,
	// the host / authority header is suffixed with -shadow.
	// +kubebuilder:validation:Optional
	RequestMirrorPolicy []DefaultRouteActionRequestMirrorPolicyParameters `json:"requestMirrorPolicy,omitempty" tf:"request_mirror_policy,omitempty"`

	// Specifies the retry policy associated with this route.
	// +kubebuilder:validation:Optional
	RetryPolicy []DefaultRouteActionRetryPolicyParameters `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Specifies the timeout for the selected route. Timeout is computed from the time the request has been
	// fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.
	//
	// If not specified, will use the largest timeout among all backend services associated with the route.
	// +kubebuilder:validation:Optional
	Timeout []DefaultRouteActionTimeoutParameters `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// The spec to modify the URL of the request, prior to forwarding the request to the matched service.
	// +kubebuilder:validation:Optional
	URLRewrite []DefaultRouteActionURLRewriteParameters `json:"urlRewrite,omitempty" tf:"url_rewrite,omitempty"`

	// A list of weighted backend services to send traffic to when a route match occurs.
	// The weights determine the fraction of traffic that flows to their corresponding backend service.
	// If all traffic needs to go to a single backend service, there must be one weightedBackendService
	// with weight set to a non 0 number.
	//
	// Once a backendService is identified and before forwarding the request to the backend service,
	// advanced routing actions like Url rewrites and header transformations are applied depending on
	// additional settings specified in this HttpRouteAction.
	// +kubebuilder:validation:Optional
	WeightedBackendServices []DefaultRouteActionWeightedBackendServicesParameters `json:"weightedBackendServices,omitempty" tf:"weighted_backend_services,omitempty"`
}

type DefaultRouteActionRequestMirrorPolicyObservation struct {
}

type DefaultRouteActionRequestMirrorPolicyParameters struct {

	// The full or partial URL to the BackendService resource being mirrored to.
	// +kubebuilder:validation:Required
	BackendService *string `json:"backendService" tf:"backend_service,omitempty"`
}

type DefaultRouteActionRetryPolicyObservation struct {
}

type DefaultRouteActionRetryPolicyParameters struct {

	// Specifies the allowed number retries. This number must be > 0. If not specified, defaults to 1.
	// +kubebuilder:validation:Optional
	NumRetries *int64 `json:"numRetries,omitempty" tf:"num_retries,omitempty"`

	// Specifies a non-zero timeout per retry attempt.
	//
	// If not specified, will use the timeout set in HttpRouteAction. If timeout in HttpRouteAction is not set,
	// will use the largest timeout among all backend services associated with the route.
	// +kubebuilder:validation:Optional
	PerTryTimeout []DefaultRouteActionRetryPolicyPerTryTimeoutParameters `json:"perTryTimeout,omitempty" tf:"per_try_timeout,omitempty"`

	// Specfies one or more conditions when this retry rule applies. Valid values are:
	//
	// * 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code,
	// or if the backend service does not respond at all, example: disconnects, reset, read timeout,
	// * connection failure, and refused streams.
	// * gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.
	// * connect-failure: Loadbalancer will retry on failures connecting to backend services,
	// for example due to connection timeouts.
	// * retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.
	// Currently the only retriable error supported is 409.
	// * refused-stream:Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code.
	// This reset type indicates that it is safe to retry.
	// * cancelled: Loadbalancer will retry if the gRPC status code in the response header is set to cancelled
	// * deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded
	// * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted
	// * unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable
	// +kubebuilder:validation:Optional
	RetryConditions []*string `json:"retryConditions,omitempty" tf:"retry_conditions,omitempty"`
}

type DefaultRouteActionRetryPolicyPerTryTimeoutObservation struct {
}

type DefaultRouteActionRetryPolicyPerTryTimeoutParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are
	// represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
	// Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
	// +kubebuilder:validation:Optional
	Seconds *string `json:"seconds,omitempty" tf:"seconds,omitempty"`
}

type DefaultRouteActionTimeoutObservation struct {
}

type DefaultRouteActionTimeoutParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented
	// with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
	// Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
	// +kubebuilder:validation:Optional
	Seconds *string `json:"seconds,omitempty" tf:"seconds,omitempty"`
}

type DefaultRouteActionURLRewriteObservation struct {
}

type DefaultRouteActionURLRewriteParameters struct {

	// Prior to forwarding the request to the selected service, the request's host header is replaced
	// with contents of hostRewrite.
	//
	// The value must be between 1 and 255 characters.
	// +kubebuilder:validation:Optional
	HostRewrite *string `json:"hostRewrite,omitempty" tf:"host_rewrite,omitempty"`

	// Prior to forwarding the request to the selected backend service, the matching portion of the
	// request's path is replaced by pathPrefixRewrite.
	//
	// The value must be between 1 and 1024 characters.
	// +kubebuilder:validation:Optional
	PathPrefixRewrite *string `json:"pathPrefixRewrite,omitempty" tf:"path_prefix_rewrite,omitempty"`
}

type DefaultRouteActionWeightedBackendServicesHeaderActionObservation struct {
}

type DefaultRouteActionWeightedBackendServicesHeaderActionParameters struct {

	// Headers to add to a matching request prior to forwarding the request to the backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToAdd []DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters `json:"requestHeadersToAdd,omitempty" tf:"request_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the request prior to
	// forwarding the request to the backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToRemove []*string `json:"requestHeadersToRemove,omitempty" tf:"request_headers_to_remove,omitempty"`

	// Headers to add the response prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToAdd []DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters `json:"responseHeadersToAdd,omitempty" tf:"response_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the response prior to sending the
	// response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToRemove []*string `json:"responseHeadersToRemove,omitempty" tf:"response_headers_to_remove,omitempty"`
}

type DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation struct {
}

type DefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters struct {

	// The name of the header to add.
	// +kubebuilder:validation:Optional
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Optional
	HeaderValue *string `json:"headerValue,omitempty" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the header.
	// If true, headerValue is set for the header, discarding any values that were set for that header.
	// +kubebuilder:validation:Optional
	Replace *bool `json:"replace,omitempty" tf:"replace,omitempty"`
}

type DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation struct {
}

type DefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters struct {

	// The name of the header to add.
	// +kubebuilder:validation:Optional
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Optional
	HeaderValue *string `json:"headerValue,omitempty" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the header.
	// If true, headerValue is set for the header, discarding any values that were set for that header.
	// +kubebuilder:validation:Optional
	Replace *bool `json:"replace,omitempty" tf:"replace,omitempty"`
}

type DefaultRouteActionWeightedBackendServicesObservation struct {
}

type DefaultRouteActionWeightedBackendServicesParameters struct {

	// The full or partial URL to the default BackendService resource. Before forwarding the
	// request to backendService, the loadbalancer applies any relevant headerActions
	// specified as part of this backendServiceWeight.
	// +kubebuilder:validation:Optional
	BackendService *string `json:"backendService,omitempty" tf:"backend_service,omitempty"`

	// Specifies changes to request and response headers that need to take effect for
	// the selected backendService.
	//
	// headerAction specified here take effect before headerAction in the enclosing
	// HttpRouteRule, PathMatcher and UrlMap.
	// +kubebuilder:validation:Optional
	HeaderAction []DefaultRouteActionWeightedBackendServicesHeaderActionParameters `json:"headerAction,omitempty" tf:"header_action,omitempty"`

	// Specifies the fraction of traffic sent to backendService, computed as
	// weight / (sum of all weightedBackendService weights in routeAction) .
	//
	// The selection of a backend service is determined only for new traffic. Once a user's request
	// has been directed to a backendService, subsequent requests will be sent to the same backendService
	// as determined by the BackendService's session affinity policy.
	//
	// The value must be between 0 and 1000
	// +kubebuilder:validation:Optional
	Weight *int64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type FaultInjectionPolicyDelayFixedDelayObservation struct {
}

type FaultInjectionPolicyDelayFixedDelayParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are
	// represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
	// Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
	// +kubebuilder:validation:Optional
	Seconds *string `json:"seconds,omitempty" tf:"seconds,omitempty"`
}

type HeaderMatchesRangeMatchObservation struct {
}

type HeaderMatchesRangeMatchParameters struct {

	// The end of the range (exclusive).
	// +kubebuilder:validation:Required
	RangeEnd *int64 `json:"rangeEnd" tf:"range_end,omitempty"`

	// The start of the range (inclusive).
	// +kubebuilder:validation:Required
	RangeStart *int64 `json:"rangeStart" tf:"range_start,omitempty"`
}

type MatchRulesHeaderMatchesObservation struct {
}

type MatchRulesHeaderMatchesParameters struct {

	// The value should exactly match contents of exactMatch. Only one of exactMatch,
	// prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
	// +kubebuilder:validation:Optional
	ExactMatch *string `json:"exactMatch,omitempty" tf:"exact_match,omitempty"`

	// The name of the HTTP header to match. For matching against the HTTP request's
	// authority, use a headerMatch with the header name ":authority". For matching a
	// request's method, use the headerName ":method".
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// If set to false, the headerMatch is considered a match if the match criteria
	// above are met. If set to true, the headerMatch is considered a match if the
	// match criteria above are NOT met. Defaults to false.
	// +kubebuilder:validation:Optional
	InvertMatch *bool `json:"invertMatch,omitempty" tf:"invert_match,omitempty"`

	// The value of the header must start with the contents of prefixMatch. Only one of
	// exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
	// must be set.
	// +kubebuilder:validation:Optional
	PrefixMatch *string `json:"prefixMatch,omitempty" tf:"prefix_match,omitempty"`

	// A header with the contents of headerName must exist. The match takes place
	// whether or not the request's header has a value or not. Only one of exactMatch,
	// prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
	// +kubebuilder:validation:Optional
	PresentMatch *bool `json:"presentMatch,omitempty" tf:"present_match,omitempty"`

	// The header value must be an integer and its value must be in the range specified
	// in rangeMatch. If the header does not contain an integer, number or is empty,
	// the match fails. For example for a range [-5, 0]   - -3 will match.  - 0 will
	// not match.  - 0.25 will not match.  - -3someString will not match.   Only one of
	// exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
	// must be set.
	// +kubebuilder:validation:Optional
	RangeMatch []HeaderMatchesRangeMatchParameters `json:"rangeMatch,omitempty" tf:"range_match,omitempty"`

	// The value of the header must match the regular expression specified in
	// regexMatch. For regular expression grammar, please see:
	// en.cppreference.com/w/cpp/regex/ecmascript  For matching against a port
	// specified in the HTTP request, use a headerMatch with headerName set to PORT and
	// a regular expression that satisfies the RFC2616 Host header's port specifier.
	// Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or
	// rangeMatch must be set.
	// +kubebuilder:validation:Optional
	RegexMatch *string `json:"regexMatch,omitempty" tf:"regex_match,omitempty"`

	// The value of the header must end with the contents of suffixMatch. Only one of
	// exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
	// must be set.
	// +kubebuilder:validation:Optional
	SuffixMatch *string `json:"suffixMatch,omitempty" tf:"suffix_match,omitempty"`
}

type MatchRulesMetadataFiltersFilterLabelsObservation struct {
}

type MatchRulesMetadataFiltersFilterLabelsParameters struct {

	// Name of metadata label. The name can have a maximum length of 1024 characters
	// and must be at least 1 character long.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The value of the label must match the specified value. value can have a maximum
	// length of 1024 characters.
	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type MatchRulesQueryParameterMatchesObservation struct {
}

type MatchRulesQueryParameterMatchesParameters struct {

	// The queryParameterMatch matches if the value of the parameter exactly matches
	// the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
	// must be set.
	// +kubebuilder:validation:Optional
	ExactMatch *string `json:"exactMatch,omitempty" tf:"exact_match,omitempty"`

	// The name of the query parameter to match. The query parameter must exist in the
	// request, in the absence of which the request match fails.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies that the queryParameterMatch matches if the request contains the query
	// parameter, irrespective of whether the parameter has a value or not. Only one of
	// presentMatch, exactMatch and regexMatch must be set.
	// +kubebuilder:validation:Optional
	PresentMatch *bool `json:"presentMatch,omitempty" tf:"present_match,omitempty"`

	// The queryParameterMatch matches if the value of the parameter matches the
	// regular expression specified by regexMatch. For the regular expression grammar,
	// please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
	// exactMatch and regexMatch must be set.
	// +kubebuilder:validation:Optional
	RegexMatch *string `json:"regexMatch,omitempty" tf:"regex_match,omitempty"`
}

type PathMatcherDefaultRouteActionCorsPolicyObservation struct {
}

type PathMatcherDefaultRouteActionCorsPolicyParameters struct {

	// In response to a preflight request, setting this to true indicates that the actual request can include user credentials.
	// This translates to the Access-Control-Allow-Credentials header.
	// +kubebuilder:validation:Optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// Specifies the content for the Access-Control-Allow-Headers header.
	// +kubebuilder:validation:Optional
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// Specifies the content for the Access-Control-Allow-Methods header.
	// +kubebuilder:validation:Optional
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// Specifies the regular expression patterns that match allowed origins. For regular expression grammar
	// please see en.cppreference.com/w/cpp/regex/ecmascript
	// An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.
	// +kubebuilder:validation:Optional
	AllowOriginRegexes []*string `json:"allowOriginRegexes,omitempty" tf:"allow_origin_regexes,omitempty"`

	// Specifies the list of origins that will be allowed to do CORS requests.
	// An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.
	// +kubebuilder:validation:Optional
	AllowOrigins []*string `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// If true, specifies the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.
	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// Specifies the content for the Access-Control-Expose-Headers header.
	// +kubebuilder:validation:Optional
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// Specifies how long results of a preflight request can be cached in seconds.
	// This translates to the Access-Control-Max-Age header.
	// +kubebuilder:validation:Optional
	MaxAge *int64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type PathMatcherDefaultRouteActionFaultInjectionPolicyAbortObservation struct {
}

type PathMatcherDefaultRouteActionFaultInjectionPolicyAbortParameters struct {

	// The HTTP status code used to abort the request.
	// The value must be between 200 and 599 inclusive.
	// +kubebuilder:validation:Optional
	HTTPStatus *int64 `json:"httpStatus,omitempty" tf:"http_status,omitempty"`

	// The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection.
	// The value must be between 0.0 and 100.0 inclusive.
	// +kubebuilder:validation:Optional
	Percentage *float64 `json:"percentage,omitempty" tf:"percentage,omitempty"`
}

type PathMatcherDefaultRouteActionFaultInjectionPolicyDelayObservation struct {
}

type PathMatcherDefaultRouteActionFaultInjectionPolicyDelayParameters struct {

	// Specifies the value of the fixed delay interval.
	// +kubebuilder:validation:Optional
	FixedDelay []DefaultRouteActionFaultInjectionPolicyDelayFixedDelayParameters `json:"fixedDelay,omitempty" tf:"fixed_delay,omitempty"`

	// The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection.
	// The value must be between 0.0 and 100.0 inclusive.
	// +kubebuilder:validation:Optional
	Percentage *float64 `json:"percentage,omitempty" tf:"percentage,omitempty"`
}

type PathMatcherDefaultRouteActionFaultInjectionPolicyObservation struct {
}

type PathMatcherDefaultRouteActionFaultInjectionPolicyParameters struct {

	// The specification for how client requests are aborted as part of fault injection.
	// +kubebuilder:validation:Optional
	Abort []PathMatcherDefaultRouteActionFaultInjectionPolicyAbortParameters `json:"abort,omitempty" tf:"abort,omitempty"`

	// The specification for how client requests are delayed as part of fault injection, before being sent to a backend service.
	// +kubebuilder:validation:Optional
	Delay []PathMatcherDefaultRouteActionFaultInjectionPolicyDelayParameters `json:"delay,omitempty" tf:"delay,omitempty"`
}

type PathMatcherDefaultRouteActionObservation struct {
}

type PathMatcherDefaultRouteActionParameters struct {

	// The specification for allowing client side cross-origin requests. Please see
	// [W3C Recommendation for Cross Origin Resource Sharing](https://www.w3.org/TR/cors/)
	// +kubebuilder:validation:Optional
	CorsPolicy []PathMatcherDefaultRouteActionCorsPolicyParameters `json:"corsPolicy,omitempty" tf:"cors_policy,omitempty"`

	// The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
	// As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a
	// percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted
	// by the Loadbalancer for a percentage of requests.
	//
	// timeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.
	// +kubebuilder:validation:Optional
	FaultInjectionPolicy []PathMatcherDefaultRouteActionFaultInjectionPolicyParameters `json:"faultInjectionPolicy,omitempty" tf:"fault_injection_policy,omitempty"`

	// Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
	// Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service,
	// the host / authority header is suffixed with -shadow.
	// +kubebuilder:validation:Optional
	RequestMirrorPolicy []PathMatcherDefaultRouteActionRequestMirrorPolicyParameters `json:"requestMirrorPolicy,omitempty" tf:"request_mirror_policy,omitempty"`

	// Specifies the retry policy associated with this route.
	// +kubebuilder:validation:Optional
	RetryPolicy []PathMatcherDefaultRouteActionRetryPolicyParameters `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Specifies the timeout for the selected route. Timeout is computed from the time the request has been
	// fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.
	//
	// If not specified, will use the largest timeout among all backend services associated with the route.
	// +kubebuilder:validation:Optional
	Timeout []PathMatcherDefaultRouteActionTimeoutParameters `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// The spec to modify the URL of the request, prior to forwarding the request to the matched service.
	// +kubebuilder:validation:Optional
	URLRewrite []PathMatcherDefaultRouteActionURLRewriteParameters `json:"urlRewrite,omitempty" tf:"url_rewrite,omitempty"`

	// A list of weighted backend services to send traffic to when a route match occurs.
	// The weights determine the fraction of traffic that flows to their corresponding backend service.
	// If all traffic needs to go to a single backend service, there must be one weightedBackendService
	// with weight set to a non 0 number.
	//
	// Once a backendService is identified and before forwarding the request to the backend service,
	// advanced routing actions like Url rewrites and header transformations are applied depending on
	// additional settings specified in this HttpRouteAction.
	// +kubebuilder:validation:Optional
	WeightedBackendServices []PathMatcherDefaultRouteActionWeightedBackendServicesParameters `json:"weightedBackendServices,omitempty" tf:"weighted_backend_services,omitempty"`
}

type PathMatcherDefaultRouteActionRequestMirrorPolicyObservation struct {
}

type PathMatcherDefaultRouteActionRequestMirrorPolicyParameters struct {

	// The full or partial URL to the BackendService resource being mirrored to.
	// +kubebuilder:validation:Required
	BackendService *string `json:"backendService" tf:"backend_service,omitempty"`
}

type PathMatcherDefaultRouteActionRetryPolicyObservation struct {
}

type PathMatcherDefaultRouteActionRetryPolicyParameters struct {

	// Specifies the allowed number retries. This number must be > 0. If not specified, defaults to 1.
	// +kubebuilder:validation:Optional
	NumRetries *int64 `json:"numRetries,omitempty" tf:"num_retries,omitempty"`

	// Specifies a non-zero timeout per retry attempt.
	//
	// If not specified, will use the timeout set in HttpRouteAction. If timeout in HttpRouteAction is not set,
	// will use the largest timeout among all backend services associated with the route.
	// +kubebuilder:validation:Optional
	PerTryTimeout []PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutParameters `json:"perTryTimeout,omitempty" tf:"per_try_timeout,omitempty"`

	// Specfies one or more conditions when this retry rule applies. Valid values are:
	//
	// * 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code,
	// or if the backend service does not respond at all, example: disconnects, reset, read timeout,
	// * connection failure, and refused streams.
	// * gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.
	// * connect-failure: Loadbalancer will retry on failures connecting to backend services,
	// for example due to connection timeouts.
	// * retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.
	// Currently the only retriable error supported is 409.
	// * refused-stream:Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code.
	// This reset type indicates that it is safe to retry.
	// * cancelled: Loadbalancer will retry if the gRPC status code in the response header is set to cancelled
	// * deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded
	// * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted
	// * unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable
	// +kubebuilder:validation:Optional
	RetryConditions []*string `json:"retryConditions,omitempty" tf:"retry_conditions,omitempty"`
}

type PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutObservation struct {
}

type PathMatcherDefaultRouteActionRetryPolicyPerTryTimeoutParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are
	// represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
	// Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
	// +kubebuilder:validation:Optional
	Seconds *string `json:"seconds,omitempty" tf:"seconds,omitempty"`
}

type PathMatcherDefaultRouteActionTimeoutObservation struct {
}

type PathMatcherDefaultRouteActionTimeoutParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented
	// with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.
	// Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years
	// +kubebuilder:validation:Optional
	Seconds *string `json:"seconds,omitempty" tf:"seconds,omitempty"`
}

type PathMatcherDefaultRouteActionURLRewriteObservation struct {
}

type PathMatcherDefaultRouteActionURLRewriteParameters struct {

	// Prior to forwarding the request to the selected service, the request's host header is replaced
	// with contents of hostRewrite.
	//
	// The value must be between 1 and 255 characters.
	// +kubebuilder:validation:Optional
	HostRewrite *string `json:"hostRewrite,omitempty" tf:"host_rewrite,omitempty"`

	// Prior to forwarding the request to the selected backend service, the matching portion of the
	// request's path is replaced by pathPrefixRewrite.
	//
	// The value must be between 1 and 1024 characters.
	// +kubebuilder:validation:Optional
	PathPrefixRewrite *string `json:"pathPrefixRewrite,omitempty" tf:"path_prefix_rewrite,omitempty"`
}

type PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionObservation struct {
}

type PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionParameters struct {

	// Headers to add to a matching request prior to forwarding the request to the backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToAdd []PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters `json:"requestHeadersToAdd,omitempty" tf:"request_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the request prior to
	// forwarding the request to the backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToRemove []*string `json:"requestHeadersToRemove,omitempty" tf:"request_headers_to_remove,omitempty"`

	// Headers to add the response prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToAdd []PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters `json:"responseHeadersToAdd,omitempty" tf:"response_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the response prior to sending the
	// response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToRemove []*string `json:"responseHeadersToRemove,omitempty" tf:"response_headers_to_remove,omitempty"`
}

type PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation struct {
}

type PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters struct {

	// The name of the header to add.
	// +kubebuilder:validation:Optional
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Optional
	HeaderValue *string `json:"headerValue,omitempty" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the header.
	// If true, headerValue is set for the header, discarding any values that were set for that header.
	// +kubebuilder:validation:Optional
	Replace *bool `json:"replace,omitempty" tf:"replace,omitempty"`
}

type PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation struct {
}

type PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters struct {

	// The name of the header to add.
	// +kubebuilder:validation:Optional
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Optional
	HeaderValue *string `json:"headerValue,omitempty" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the header.
	// If true, headerValue is set for the header, discarding any values that were set for that header.
	// +kubebuilder:validation:Optional
	Replace *bool `json:"replace,omitempty" tf:"replace,omitempty"`
}

type PathMatcherDefaultRouteActionWeightedBackendServicesObservation struct {
}

type PathMatcherDefaultRouteActionWeightedBackendServicesParameters struct {

	// The full or partial URL to the default BackendService resource. Before forwarding the
	// request to backendService, the loadbalancer applies any relevant headerActions
	// specified as part of this backendServiceWeight.
	// +kubebuilder:validation:Optional
	BackendService *string `json:"backendService,omitempty" tf:"backend_service,omitempty"`

	// Specifies changes to request and response headers that need to take effect for
	// the selected backendService.
	//
	// headerAction specified here take effect before headerAction in the enclosing
	// HttpRouteRule, PathMatcher and UrlMap.
	// +kubebuilder:validation:Optional
	HeaderAction []PathMatcherDefaultRouteActionWeightedBackendServicesHeaderActionParameters `json:"headerAction,omitempty" tf:"header_action,omitempty"`

	// Specifies the fraction of traffic sent to backendService, computed as
	// weight / (sum of all weightedBackendService weights in routeAction) .
	//
	// The selection of a backend service is determined only for new traffic. Once a user's request
	// has been directed to a backendService, subsequent requests will be sent to the same backendService
	// as determined by the BackendService's session affinity policy.
	//
	// The value must be between 0 and 1000
	// +kubebuilder:validation:Optional
	Weight *int64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type PathMatcherHeaderActionObservation struct {
}

type PathMatcherHeaderActionParameters struct {

	// Headers to add to a matching request prior to forwarding the request to the
	// backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToAdd []PathMatcherHeaderActionRequestHeadersToAddParameters `json:"requestHeadersToAdd,omitempty" tf:"request_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the request
	// prior to forwarding the request to the backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToRemove []*string `json:"requestHeadersToRemove,omitempty" tf:"request_headers_to_remove,omitempty"`

	// Headers to add the response prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToAdd []PathMatcherHeaderActionResponseHeadersToAddParameters `json:"responseHeadersToAdd,omitempty" tf:"response_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the response
	// prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToRemove []*string `json:"responseHeadersToRemove,omitempty" tf:"response_headers_to_remove,omitempty"`
}

type PathMatcherHeaderActionRequestHeadersToAddObservation struct {
}

type PathMatcherHeaderActionRequestHeadersToAddParameters struct {

	// The name of the header.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the
	// header. If true, headerValue is set for the header, discarding any values that
	// were set for that header.
	// +kubebuilder:validation:Required
	Replace *bool `json:"replace" tf:"replace,omitempty"`
}

type PathMatcherHeaderActionResponseHeadersToAddObservation struct {
}

type PathMatcherHeaderActionResponseHeadersToAddParameters struct {

	// The name of the header.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the
	// header. If true, headerValue is set for the header, discarding any values that
	// were set for that header.
	// +kubebuilder:validation:Required
	Replace *bool `json:"replace" tf:"replace,omitempty"`
}

type PathMatcherPathRuleObservation struct {
}

type PathMatcherPathRuleParameters struct {

	// The list of path patterns to match. Each must start with / and the only place a
	// \* is allowed is at the end following a /. The string fed to the path matcher
	// does not include any text after the first ? or #, and those chars are not
	// allowed here.
	// +kubebuilder:validation:Required
	Paths []*string `json:"paths" tf:"paths,omitempty"`

	// In response to a matching path, the load balancer performs advanced routing
	// actions like URL rewrites, header transformations, etc. prior to forwarding the
	// request to the selected backend. If routeAction specifies any
	// weightedBackendServices, service must not be set. Conversely if service is set,
	// routeAction cannot contain any  weightedBackendServices. Only one of routeAction
	// or urlRedirect must be set.
	// +kubebuilder:validation:Optional
	RouteAction []PathRuleRouteActionParameters `json:"routeAction,omitempty" tf:"route_action,omitempty"`

	// The backend service or backend bucket to use if any of the given paths match.
	// +kubebuilder:validation:Optional
	Service *string `json:"service,omitempty" tf:"service,omitempty"`

	// When a path pattern is matched, the request is redirected to a URL specified
	// by urlRedirect. If urlRedirect is specified, service or routeAction must not
	// be set.
	// +kubebuilder:validation:Optional
	URLRedirect []PathRuleURLRedirectParameters `json:"urlRedirect,omitempty" tf:"url_redirect,omitempty"`
}

type PathMatcherRouteRulesHeaderActionObservation struct {
}

type PathMatcherRouteRulesHeaderActionParameters struct {

	// Headers to add to a matching request prior to forwarding the request to the
	// backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToAdd []RouteRulesHeaderActionRequestHeadersToAddParameters `json:"requestHeadersToAdd,omitempty" tf:"request_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the request
	// prior to forwarding the request to the backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToRemove []*string `json:"requestHeadersToRemove,omitempty" tf:"request_headers_to_remove,omitempty"`

	// Headers to add the response prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToAdd []RouteRulesHeaderActionResponseHeadersToAddParameters `json:"responseHeadersToAdd,omitempty" tf:"response_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the response
	// prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToRemove []*string `json:"responseHeadersToRemove,omitempty" tf:"response_headers_to_remove,omitempty"`
}

type PathMatcherRouteRulesObservation struct {
}

type PathMatcherRouteRulesParameters struct {

	// Specifies changes to request and response headers that need to take effect for
	// the selected backendService. The headerAction specified here are applied before
	// the matching pathMatchers[].headerAction and after pathMatchers[].routeRules[].r
	// outeAction.weightedBackendService.backendServiceWeightAction[].headerAction
	// +kubebuilder:validation:Optional
	HeaderAction []PathMatcherRouteRulesHeaderActionParameters `json:"headerAction,omitempty" tf:"header_action,omitempty"`

	// The rules for determining a match.
	// +kubebuilder:validation:Optional
	MatchRules []RouteRulesMatchRulesParameters `json:"matchRules,omitempty" tf:"match_rules,omitempty"`

	// For routeRules within a given pathMatcher, priority determines the order
	// in which load balancer will interpret routeRules. RouteRules are evaluated
	// in order of priority, from the lowest to highest number. The priority of
	// a rule decreases as its number increases (1, 2, 3, N+1). The first rule
	// that matches the request is applied.
	//
	// You cannot configure two or more routeRules with the same priority.
	// Priority for each rule must be set to a number between 0 and
	// 2147483647 inclusive.
	//
	// Priority numbers can have gaps, which enable you to add or remove rules
	// in the future without affecting the rest of the rules. For example,
	// 1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which
	// you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the
	// future without any impact on existing rules.
	// +kubebuilder:validation:Required
	Priority *int64 `json:"priority" tf:"priority,omitempty"`

	// In response to a matching matchRule, the load balancer performs advanced routing
	// actions like URL rewrites, header transformations, etc. prior to forwarding the
	// request to the selected backend. If  routeAction specifies any
	// weightedBackendServices, service must not be set. Conversely if service is set,
	// routeAction cannot contain any  weightedBackendServices. Only one of routeAction
	// or urlRedirect must be set.
	// +kubebuilder:validation:Optional
	RouteAction []PathMatcherRouteRulesRouteActionParameters `json:"routeAction,omitempty" tf:"route_action,omitempty"`

	// The backend service resource to which traffic is
	// directed if this rule is matched. If routeAction is additionally specified,
	// advanced routing actions like URL Rewrites, etc. take effect prior to sending
	// the request to the backend. However, if service is specified, routeAction cannot
	// contain any weightedBackendService s. Conversely, if routeAction specifies any
	// weightedBackendServices, service must not be specified. Only one of urlRedirect,
	// service or routeAction.weightedBackendService must be set.
	// +kubebuilder:validation:Optional
	Service *string `json:"service,omitempty" tf:"service,omitempty"`

	// When this rule is matched, the request is redirected to a URL specified by
	// urlRedirect. If urlRedirect is specified, service or routeAction must not be
	// set.
	// +kubebuilder:validation:Optional
	URLRedirect []PathMatcherRouteRulesURLRedirectParameters `json:"urlRedirect,omitempty" tf:"url_redirect,omitempty"`
}

type PathMatcherRouteRulesRouteActionObservation struct {
}

type PathMatcherRouteRulesRouteActionParameters struct {

	// The specification for allowing client side cross-origin requests. Please see W3C
	// Recommendation for Cross Origin Resource Sharing
	// +kubebuilder:validation:Optional
	CorsPolicy []RouteRulesRouteActionCorsPolicyParameters `json:"corsPolicy,omitempty" tf:"cors_policy,omitempty"`

	// The specification for fault injection introduced into traffic to test the
	// resiliency of clients to backend service failure. As part of fault injection,
	// when clients send requests to a backend service, delays can be introduced by
	// Loadbalancer on a percentage of requests before sending those request to the
	// backend service. Similarly requests from clients can be aborted by the
	// Loadbalancer for a percentage of requests. timeout and retry_policy will be
	// ignored by clients that are configured with a fault_injection_policy.
	// +kubebuilder:validation:Optional
	FaultInjectionPolicy []RouteRulesRouteActionFaultInjectionPolicyParameters `json:"faultInjectionPolicy,omitempty" tf:"fault_injection_policy,omitempty"`

	// Specifies the policy on how requests intended for the route's backends are
	// shadowed to a separate mirrored backend service. Loadbalancer does not wait for
	// responses from the shadow service. Prior to sending traffic to the shadow
	// service, the host / authority header is suffixed with -shadow.
	// +kubebuilder:validation:Optional
	RequestMirrorPolicy []RouteRulesRouteActionRequestMirrorPolicyParameters `json:"requestMirrorPolicy,omitempty" tf:"request_mirror_policy,omitempty"`

	// Specifies the retry policy associated with this route.
	// +kubebuilder:validation:Optional
	RetryPolicy []RouteRulesRouteActionRetryPolicyParameters `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Specifies the timeout for the selected route. Timeout is computed from the time
	// the request is has been fully processed (i.e. end-of-stream) up until the
	// response has been completely processed. Timeout includes all retries. If not
	// specified, the default value is 15 seconds.
	// +kubebuilder:validation:Optional
	Timeout []RouteRulesRouteActionTimeoutParameters `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// The spec to modify the URL of the request, prior to forwarding the request to
	// the matched service
	// +kubebuilder:validation:Optional
	URLRewrite []RouteRulesRouteActionURLRewriteParameters `json:"urlRewrite,omitempty" tf:"url_rewrite,omitempty"`

	// A list of weighted backend services to send traffic to when a route match
	// occurs. The weights determine the fraction of traffic that flows to their
	// corresponding backend service. If all traffic needs to go to a single backend
	// service, there must be one  weightedBackendService with weight set to a non 0
	// number. Once a backendService is identified and before forwarding the request to
	// the backend service, advanced routing actions like Url rewrites and header
	// transformations are applied depending on additional settings specified in this
	// HttpRouteAction.
	// +kubebuilder:validation:Optional
	WeightedBackendServices []RouteRulesRouteActionWeightedBackendServicesParameters `json:"weightedBackendServices,omitempty" tf:"weighted_backend_services,omitempty"`
}

type PathMatcherRouteRulesURLRedirectObservation struct {
}

type PathMatcherRouteRulesURLRedirectParameters struct {

	// If set to true, the URL scheme in the redirected request is set to https. If set
	// to false, the URL scheme of the redirected request will remain the same as that
	// of the request. This must only be set for UrlMaps used in TargetHttpProxys.
	// Setting this true for TargetHttpsProxy is not permitted. Defaults to false.
	// +kubebuilder:validation:Optional
	HTTPSRedirect *bool `json:"httpsRedirect,omitempty" tf:"https_redirect,omitempty"`

	// The host that will be used in the redirect response instead of the one that was
	// supplied in the request. The value must be between 1 and 255 characters.
	// +kubebuilder:validation:Optional
	HostRedirect *string `json:"hostRedirect,omitempty" tf:"host_redirect,omitempty"`

	// The path that will be used in the redirect response instead of the one that was
	// supplied in the request. Only one of pathRedirect or prefixRedirect must be
	// specified. The value must be between 1 and 1024 characters.
	// +kubebuilder:validation:Optional
	PathRedirect *string `json:"pathRedirect,omitempty" tf:"path_redirect,omitempty"`

	// The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
	// retaining the remaining portion of the URL before redirecting the request.
	// +kubebuilder:validation:Optional
	PrefixRedirect *string `json:"prefixRedirect,omitempty" tf:"prefix_redirect,omitempty"`

	// The HTTP Status code to use for this RedirectAction. Supported values are:
	//
	// * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.
	//
	// * FOUND, which corresponds to 302.
	//
	// * SEE_OTHER which corresponds to 303.
	//
	// * TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained.
	//
	// * PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained. Possible values: ["FOUND", "MOVED_PERMANENTLY_DEFAULT", "PERMANENT_REDIRECT", "SEE_OTHER", "TEMPORARY_REDIRECT"]
	// +kubebuilder:validation:Optional
	RedirectResponseCode *string `json:"redirectResponseCode,omitempty" tf:"redirect_response_code,omitempty"`

	// If set to true, any accompanying query portion of the original URL is removed
	// prior to redirecting the request. If set to false, the query portion of the
	// original URL is retained. Defaults to false.
	// +kubebuilder:validation:Optional
	StripQuery *bool `json:"stripQuery,omitempty" tf:"strip_query,omitempty"`
}

type PathRuleRouteActionCorsPolicyObservation struct {
}

type PathRuleRouteActionCorsPolicyParameters struct {

	// In response to a preflight request, setting this to true indicates that the
	// actual request can include user credentials. This translates to the Access-
	// Control-Allow-Credentials header. Defaults to false.
	// +kubebuilder:validation:Optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// Specifies the content for the Access-Control-Allow-Headers header.
	// +kubebuilder:validation:Optional
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// Specifies the content for the Access-Control-Allow-Methods header.
	// +kubebuilder:validation:Optional
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// Specifies the regular expression patterns that match allowed origins. For
	// regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
	// An origin is allowed if it matches either allow_origins or allow_origin_regex.
	// +kubebuilder:validation:Optional
	AllowOriginRegexes []*string `json:"allowOriginRegexes,omitempty" tf:"allow_origin_regexes,omitempty"`

	// Specifies the list of origins that will be allowed to do CORS requests. An
	// origin is allowed if it matches either allow_origins or allow_origin_regex.
	// +kubebuilder:validation:Optional
	AllowOrigins []*string `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// If true, specifies the CORS policy is disabled.
	// +kubebuilder:validation:Required
	Disabled *bool `json:"disabled" tf:"disabled,omitempty"`

	// Specifies the content for the Access-Control-Expose-Headers header.
	// +kubebuilder:validation:Optional
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// Specifies how long the results of a preflight request can be cached. This
	// translates to the content for the Access-Control-Max-Age header.
	// +kubebuilder:validation:Optional
	MaxAge *int64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type PathRuleRouteActionFaultInjectionPolicyObservation struct {
}

type PathRuleRouteActionFaultInjectionPolicyParameters struct {

	// The specification for how client requests are aborted as part of fault
	// injection.
	// +kubebuilder:validation:Optional
	Abort []RouteActionFaultInjectionPolicyAbortParameters `json:"abort,omitempty" tf:"abort,omitempty"`

	// The specification for how client requests are delayed as part of fault
	// injection, before being sent to a backend service.
	// +kubebuilder:validation:Optional
	Delay []RouteActionFaultInjectionPolicyDelayParameters `json:"delay,omitempty" tf:"delay,omitempty"`
}

type PathRuleRouteActionObservation struct {
}

type PathRuleRouteActionParameters struct {

	// The specification for allowing client side cross-origin requests. Please see W3C
	// Recommendation for Cross Origin Resource Sharing
	// +kubebuilder:validation:Optional
	CorsPolicy []PathRuleRouteActionCorsPolicyParameters `json:"corsPolicy,omitempty" tf:"cors_policy,omitempty"`

	// The specification for fault injection introduced into traffic to test the
	// resiliency of clients to backend service failure. As part of fault injection,
	// when clients send requests to a backend service, delays can be introduced by
	// Loadbalancer on a percentage of requests before sending those request to the
	// backend service. Similarly requests from clients can be aborted by the
	// Loadbalancer for a percentage of requests. timeout and retry_policy will be
	// ignored by clients that are configured with a fault_injection_policy.
	// +kubebuilder:validation:Optional
	FaultInjectionPolicy []PathRuleRouteActionFaultInjectionPolicyParameters `json:"faultInjectionPolicy,omitempty" tf:"fault_injection_policy,omitempty"`

	// Specifies the policy on how requests intended for the route's backends are
	// shadowed to a separate mirrored backend service. Loadbalancer does not wait for
	// responses from the shadow service. Prior to sending traffic to the shadow
	// service, the host / authority header is suffixed with -shadow.
	// +kubebuilder:validation:Optional
	RequestMirrorPolicy []PathRuleRouteActionRequestMirrorPolicyParameters `json:"requestMirrorPolicy,omitempty" tf:"request_mirror_policy,omitempty"`

	// Specifies the retry policy associated with this route.
	// +kubebuilder:validation:Optional
	RetryPolicy []PathRuleRouteActionRetryPolicyParameters `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// Specifies the timeout for the selected route. Timeout is computed from the time
	// the request is has been fully processed (i.e. end-of-stream) up until the
	// response has been completely processed. Timeout includes all retries. If not
	// specified, the default value is 15 seconds.
	// +kubebuilder:validation:Optional
	Timeout []PathRuleRouteActionTimeoutParameters `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// The spec to modify the URL of the request, prior to forwarding the request to
	// the matched service
	// +kubebuilder:validation:Optional
	URLRewrite []PathRuleRouteActionURLRewriteParameters `json:"urlRewrite,omitempty" tf:"url_rewrite,omitempty"`

	// A list of weighted backend services to send traffic to when a route match
	// occurs. The weights determine the fraction of traffic that flows to their
	// corresponding backend service. If all traffic needs to go to a single backend
	// service, there must be one  weightedBackendService with weight set to a non 0
	// number. Once a backendService is identified and before forwarding the request to
	// the backend service, advanced routing actions like Url rewrites and header
	// transformations are applied depending on additional settings specified in this
	// HttpRouteAction.
	// +kubebuilder:validation:Optional
	WeightedBackendServices []PathRuleRouteActionWeightedBackendServicesParameters `json:"weightedBackendServices,omitempty" tf:"weighted_backend_services,omitempty"`
}

type PathRuleRouteActionRequestMirrorPolicyObservation struct {
}

type PathRuleRouteActionRequestMirrorPolicyParameters struct {

	// The BackendService resource being mirrored to.
	// +kubebuilder:validation:Required
	BackendService *string `json:"backendService" tf:"backend_service,omitempty"`
}

type PathRuleRouteActionRetryPolicyObservation struct {
}

type PathRuleRouteActionRetryPolicyParameters struct {

	// Specifies the allowed number retries. This number must be > 0.
	// +kubebuilder:validation:Optional
	NumRetries *int64 `json:"numRetries,omitempty" tf:"num_retries,omitempty"`

	// Specifies a non-zero timeout per retry attempt.
	// +kubebuilder:validation:Optional
	PerTryTimeout []RouteActionRetryPolicyPerTryTimeoutParameters `json:"perTryTimeout,omitempty" tf:"per_try_timeout,omitempty"`

	// Specifies one or more conditions when this retry rule applies. Valid values are:
	//
	// * 5xx: Loadbalancer will attempt a retry if the backend service responds with
	// any 5xx response code, or if the backend service does not respond at all,
	// example: disconnects, reset, read timeout, connection failure, and refused
	// streams.
	// * gateway-error: Similar to 5xx, but only applies to response codes
	// 502, 503 or 504.
	// * connect-failure: Loadbalancer will retry on failures
	// connecting to backend services, for example due to connection timeouts.
	// * retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.
	// Currently the only retriable error supported is 409.
	// * refused-stream: Loadbalancer will retry if the backend service resets the stream with a
	// REFUSED_STREAM error code. This reset type indicates that it is safe to retry.
	// * cancelled: Loadbalancer will retry if the gRPC status code in the response
	// header is set to cancelled
	// * deadline-exceeded: Loadbalancer will retry if the
	// gRPC status code in the response header is set to deadline-exceeded
	// * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response
	// header is set to resource-exhausted
	// * unavailable: Loadbalancer will retry if
	// the gRPC status code in the response header is set to unavailable
	// +kubebuilder:validation:Optional
	RetryConditions []*string `json:"retryConditions,omitempty" tf:"retry_conditions,omitempty"`
}

type PathRuleRouteActionTimeoutObservation struct {
}

type PathRuleRouteActionTimeoutParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations
	// less than one second are represented with a 0 'seconds' field and a positive
	// 'nanos' field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
	// inclusive.
	// +kubebuilder:validation:Required
	Seconds *string `json:"seconds" tf:"seconds,omitempty"`
}

type PathRuleRouteActionURLRewriteObservation struct {
}

type PathRuleRouteActionURLRewriteParameters struct {

	// Prior to forwarding the request to the selected service, the request's host
	// header is replaced with contents of hostRewrite. The value must be between 1 and
	// 255 characters.
	// +kubebuilder:validation:Optional
	HostRewrite *string `json:"hostRewrite,omitempty" tf:"host_rewrite,omitempty"`

	// Prior to forwarding the request to the selected backend service, the matching
	// portion of the request's path is replaced by pathPrefixRewrite. The value must
	// be between 1 and 1024 characters.
	// +kubebuilder:validation:Optional
	PathPrefixRewrite *string `json:"pathPrefixRewrite,omitempty" tf:"path_prefix_rewrite,omitempty"`
}

type PathRuleRouteActionWeightedBackendServicesObservation struct {
}

type PathRuleRouteActionWeightedBackendServicesParameters struct {

	// The default BackendService resource. Before
	// forwarding the request to backendService, the loadbalancer applies any relevant
	// headerActions specified as part of this backendServiceWeight.
	// +kubebuilder:validation:Required
	BackendService *string `json:"backendService" tf:"backend_service,omitempty"`

	// Specifies changes to request and response headers that need to take effect for
	// the selected backendService. headerAction specified here take effect before
	// headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
	// +kubebuilder:validation:Optional
	HeaderAction []RouteActionWeightedBackendServicesHeaderActionParameters `json:"headerAction,omitempty" tf:"header_action,omitempty"`

	// Specifies the fraction of traffic sent to backendService, computed as weight /
	// (sum of all weightedBackendService weights in routeAction) . The selection of a
	// backend service is determined only for new traffic. Once a user's request has
	// been directed to a backendService, subsequent requests will be sent to the same
	// backendService as determined by the BackendService's session affinity policy.
	// The value must be between 0 and 1000
	// +kubebuilder:validation:Required
	Weight *int64 `json:"weight" tf:"weight,omitempty"`
}

type PathRuleURLRedirectObservation struct {
}

type PathRuleURLRedirectParameters struct {

	// If set to true, the URL scheme in the redirected request is set to https.
	// If set to false, the URL scheme of the redirected request will remain the
	// same as that of the request. This must only be set for UrlMaps used in
	// TargetHttpProxys. Setting this true for TargetHttpsProxy is not
	// permitted. The default is set to false.
	// +kubebuilder:validation:Optional
	HTTPSRedirect *bool `json:"httpsRedirect,omitempty" tf:"https_redirect,omitempty"`

	// The host that will be used in the redirect response instead of the one
	// that was supplied in the request. The value must be between 1 and 255
	// characters.
	// +kubebuilder:validation:Optional
	HostRedirect *string `json:"hostRedirect,omitempty" tf:"host_redirect,omitempty"`

	// The path that will be used in the redirect response instead of the one
	// that was supplied in the request. pathRedirect cannot be supplied
	// together with prefixRedirect. Supply one alone or neither. If neither is
	// supplied, the path of the original request will be used for the redirect.
	// The value must be between 1 and 1024 characters.
	// +kubebuilder:validation:Optional
	PathRedirect *string `json:"pathRedirect,omitempty" tf:"path_redirect,omitempty"`

	// The prefix that replaces the prefixMatch specified in the
	// HttpRouteRuleMatch, retaining the remaining portion of the URL before
	// redirecting the request. prefixRedirect cannot be supplied together with
	// pathRedirect. Supply one alone or neither. If neither is supplied, the
	// path of the original request will be used for the redirect. The value
	// must be between 1 and 1024 characters.
	// +kubebuilder:validation:Optional
	PrefixRedirect *string `json:"prefixRedirect,omitempty" tf:"prefix_redirect,omitempty"`

	// The HTTP Status code to use for this RedirectAction. Supported values are:
	//
	// * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.
	//
	// * FOUND, which corresponds to 302.
	//
	// * SEE_OTHER which corresponds to 303.
	//
	// * TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method
	// will be retained.
	//
	// * PERMANENT_REDIRECT, which corresponds to 308. In this case,
	// the request method will be retained. Possible values: ["FOUND", "MOVED_PERMANENTLY_DEFAULT", "PERMANENT_REDIRECT", "SEE_OTHER", "TEMPORARY_REDIRECT"]
	// +kubebuilder:validation:Optional
	RedirectResponseCode *string `json:"redirectResponseCode,omitempty" tf:"redirect_response_code,omitempty"`

	// If set to true, any accompanying query portion of the original URL is
	// removed prior to redirecting the request. If set to false, the query
	// portion of the original URL is retained.
	// This field is required to ensure an empty block is not set. The normal default value is false.
	// +kubebuilder:validation:Required
	StripQuery *bool `json:"stripQuery" tf:"strip_query,omitempty"`
}

type RouteActionFaultInjectionPolicyAbortObservation struct {
}

type RouteActionFaultInjectionPolicyAbortParameters struct {

	// The HTTP status code used to abort the request. The value must be between 200
	// and 599 inclusive.
	// +kubebuilder:validation:Required
	HTTPStatus *int64 `json:"httpStatus" tf:"http_status,omitempty"`

	// The percentage of traffic (connections/operations/requests) which will be
	// aborted as part of fault injection. The value must be between 0.0 and 100.0
	// inclusive.
	// +kubebuilder:validation:Required
	Percentage *float64 `json:"percentage" tf:"percentage,omitempty"`
}

type RouteActionFaultInjectionPolicyDelayFixedDelayObservation struct {
}

type RouteActionFaultInjectionPolicyDelayFixedDelayParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations
	// less than one second are represented with a 0 'seconds' field and a positive
	// 'nanos' field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
	// inclusive.
	// +kubebuilder:validation:Required
	Seconds *string `json:"seconds" tf:"seconds,omitempty"`
}

type RouteActionFaultInjectionPolicyDelayObservation struct {
}

type RouteActionFaultInjectionPolicyDelayParameters struct {

	// Specifies the value of the fixed delay interval.
	// +kubebuilder:validation:Required
	FixedDelay []RouteActionFaultInjectionPolicyDelayFixedDelayParameters `json:"fixedDelay" tf:"fixed_delay,omitempty"`

	// The percentage of traffic (connections/operations/requests) on which delay will
	// be introduced as part of fault injection. The value must be between 0.0 and
	// 100.0 inclusive.
	// +kubebuilder:validation:Required
	Percentage *float64 `json:"percentage" tf:"percentage,omitempty"`
}

type RouteActionRetryPolicyPerTryTimeoutObservation struct {
}

type RouteActionRetryPolicyPerTryTimeoutParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations
	// less than one second are represented with a 0 'seconds' field and a positive
	// 'nanos' field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
	// inclusive.
	// +kubebuilder:validation:Required
	Seconds *string `json:"seconds" tf:"seconds,omitempty"`
}

type RouteActionWeightedBackendServicesHeaderActionObservation struct {
}

type RouteActionWeightedBackendServicesHeaderActionParameters struct {

	// Headers to add to a matching request prior to forwarding the request to the
	// backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToAdd []RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters `json:"requestHeadersToAdd,omitempty" tf:"request_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the request
	// prior to forwarding the request to the backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToRemove []*string `json:"requestHeadersToRemove,omitempty" tf:"request_headers_to_remove,omitempty"`

	// Headers to add the response prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToAdd []RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters `json:"responseHeadersToAdd,omitempty" tf:"response_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the response
	// prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToRemove []*string `json:"responseHeadersToRemove,omitempty" tf:"response_headers_to_remove,omitempty"`
}

type RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation struct {
}

type RouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters struct {

	// The name of the header.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the
	// header. If true, headerValue is set for the header, discarding any values that
	// were set for that header.
	// +kubebuilder:validation:Required
	Replace *bool `json:"replace" tf:"replace,omitempty"`
}

type RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation struct {
}

type RouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters struct {

	// The name of the header.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the
	// header. If true, headerValue is set for the header, discarding any values that
	// were set for that header.
	// +kubebuilder:validation:Required
	Replace *bool `json:"replace" tf:"replace,omitempty"`
}

type RouteRulesHeaderActionRequestHeadersToAddObservation struct {
}

type RouteRulesHeaderActionRequestHeadersToAddParameters struct {

	// The name of the header.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the
	// header. If true, headerValue is set for the header, discarding any values that
	// were set for that header.
	// +kubebuilder:validation:Required
	Replace *bool `json:"replace" tf:"replace,omitempty"`
}

type RouteRulesHeaderActionResponseHeadersToAddObservation struct {
}

type RouteRulesHeaderActionResponseHeadersToAddParameters struct {

	// The name of the header.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the
	// header. If true, headerValue is set for the header, discarding any values that
	// were set for that header.
	// +kubebuilder:validation:Required
	Replace *bool `json:"replace" tf:"replace,omitempty"`
}

type RouteRulesMatchRulesMetadataFiltersObservation struct {
}

type RouteRulesMatchRulesMetadataFiltersParameters struct {

	// The list of label value pairs that must match labels in the provided metadata
	// based on filterMatchCriteria  This list must not be empty and can have at the
	// most 64 entries.
	// +kubebuilder:validation:Required
	FilterLabels []MatchRulesMetadataFiltersFilterLabelsParameters `json:"filterLabels" tf:"filter_labels,omitempty"`

	// Specifies how individual filterLabel matches within the list of filterLabels
	// contribute towards the overall metadataFilter match. Supported values are:
	// - MATCH_ANY: At least one of the filterLabels must have a matching label in the
	// provided metadata.
	// - MATCH_ALL: All filterLabels must have matching labels in
	// the provided metadata. Possible values: ["MATCH_ALL", "MATCH_ANY"]
	// +kubebuilder:validation:Required
	FilterMatchCriteria *string `json:"filterMatchCriteria" tf:"filter_match_criteria,omitempty"`
}

type RouteRulesMatchRulesObservation struct {
}

type RouteRulesMatchRulesParameters struct {

	// For satisfying the matchRule condition, the path of the request must exactly
	// match the value specified in fullPathMatch after removing any query parameters
	// and anchor that may be part of the original URL. FullPathMatch must be between 1
	// and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must
	// be specified.
	// +kubebuilder:validation:Optional
	FullPathMatch *string `json:"fullPathMatch,omitempty" tf:"full_path_match,omitempty"`

	// Specifies a list of header match criteria, all of which must match corresponding
	// headers in the request.
	// +kubebuilder:validation:Optional
	HeaderMatches []MatchRulesHeaderMatchesParameters `json:"headerMatches,omitempty" tf:"header_matches,omitempty"`

	// Specifies that prefixMatch and fullPathMatch matches are case sensitive.
	// Defaults to false.
	// +kubebuilder:validation:Optional
	IgnoreCase *bool `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// Opaque filter criteria used by Loadbalancer to restrict routing configuration to
	// a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS
	// clients present node metadata. If a match takes place, the relevant routing
	// configuration is made available to those proxies. For each metadataFilter in
	// this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the
	// filterLabels must match the corresponding label provided in the metadata. If its
	// filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match
	// with corresponding labels in the provided metadata. metadataFilters specified
	// here can be overrides those specified in ForwardingRule that refers to this
	// UrlMap. metadataFilters only applies to Loadbalancers that have their
	// loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	// +kubebuilder:validation:Optional
	MetadataFilters []RouteRulesMatchRulesMetadataFiltersParameters `json:"metadataFilters,omitempty" tf:"metadata_filters,omitempty"`

	// For satisfying the matchRule condition, the request's path must begin with the
	// specified prefixMatch. prefixMatch must begin with a /. The value must be
	// between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
	// regexMatch must be specified.
	// +kubebuilder:validation:Optional
	PrefixMatch *string `json:"prefixMatch,omitempty" tf:"prefix_match,omitempty"`

	// Specifies a list of query parameter match criteria, all of which must match
	// corresponding query parameters in the request.
	// +kubebuilder:validation:Optional
	QueryParameterMatches []MatchRulesQueryParameterMatchesParameters `json:"queryParameterMatches,omitempty" tf:"query_parameter_matches,omitempty"`

	// For satisfying the matchRule condition, the path of the request must satisfy the
	// regular expression specified in regexMatch after removing any query parameters
	// and anchor supplied with the original URL. For regular expression grammar please
	// see en.cppreference.com/w/cpp/regex/ecmascript  Only one of prefixMatch,
	// fullPathMatch or regexMatch must be specified.
	// +kubebuilder:validation:Optional
	RegexMatch *string `json:"regexMatch,omitempty" tf:"regex_match,omitempty"`
}

type RouteRulesRouteActionCorsPolicyObservation struct {
}

type RouteRulesRouteActionCorsPolicyParameters struct {

	// In response to a preflight request, setting this to true indicates that the
	// actual request can include user credentials. This translates to the Access-
	// Control-Allow-Credentials header. Defaults to false.
	// +kubebuilder:validation:Optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// Specifies the content for the Access-Control-Allow-Headers header.
	// +kubebuilder:validation:Optional
	AllowHeaders []*string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// Specifies the content for the Access-Control-Allow-Methods header.
	// +kubebuilder:validation:Optional
	AllowMethods []*string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// Specifies the regular expression patterns that match allowed origins. For
	// regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
	// An origin is allowed if it matches either allow_origins or allow_origin_regex.
	// +kubebuilder:validation:Optional
	AllowOriginRegexes []*string `json:"allowOriginRegexes,omitempty" tf:"allow_origin_regexes,omitempty"`

	// Specifies the list of origins that will be allowed to do CORS requests. An
	// origin is allowed if it matches either allow_origins or allow_origin_regex.
	// +kubebuilder:validation:Optional
	AllowOrigins []*string `json:"allowOrigins,omitempty" tf:"allow_origins,omitempty"`

	// If true, specifies the CORS policy is disabled.
	// which indicates that the CORS policy is in effect. Defaults to false.
	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// Specifies the content for the Access-Control-Expose-Headers header.
	// +kubebuilder:validation:Optional
	ExposeHeaders []*string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// Specifies how long the results of a preflight request can be cached. This
	// translates to the content for the Access-Control-Max-Age header.
	// +kubebuilder:validation:Optional
	MaxAge *int64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`
}

type RouteRulesRouteActionFaultInjectionPolicyAbortObservation struct {
}

type RouteRulesRouteActionFaultInjectionPolicyAbortParameters struct {

	// The HTTP status code used to abort the request. The value must be between 200
	// and 599 inclusive.
	// +kubebuilder:validation:Optional
	HTTPStatus *int64 `json:"httpStatus,omitempty" tf:"http_status,omitempty"`

	// The percentage of traffic (connections/operations/requests) which will be
	// aborted as part of fault injection. The value must be between 0.0 and 100.0
	// inclusive.
	// +kubebuilder:validation:Optional
	Percentage *float64 `json:"percentage,omitempty" tf:"percentage,omitempty"`
}

type RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayObservation struct {
}

type RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations
	// less than one second are represented with a 0 'seconds' field and a positive
	// 'nanos' field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
	// inclusive.
	// +kubebuilder:validation:Required
	Seconds *string `json:"seconds" tf:"seconds,omitempty"`
}

type RouteRulesRouteActionFaultInjectionPolicyDelayObservation struct {
}

type RouteRulesRouteActionFaultInjectionPolicyDelayParameters struct {

	// Specifies the value of the fixed delay interval.
	// +kubebuilder:validation:Optional
	FixedDelay []RouteRulesRouteActionFaultInjectionPolicyDelayFixedDelayParameters `json:"fixedDelay,omitempty" tf:"fixed_delay,omitempty"`

	// The percentage of traffic (connections/operations/requests) on which delay will
	// be introduced as part of fault injection. The value must be between 0.0 and
	// 100.0 inclusive.
	// +kubebuilder:validation:Optional
	Percentage *float64 `json:"percentage,omitempty" tf:"percentage,omitempty"`
}

type RouteRulesRouteActionFaultInjectionPolicyObservation struct {
}

type RouteRulesRouteActionFaultInjectionPolicyParameters struct {

	// The specification for how client requests are aborted as part of fault
	// injection.
	// +kubebuilder:validation:Optional
	Abort []RouteRulesRouteActionFaultInjectionPolicyAbortParameters `json:"abort,omitempty" tf:"abort,omitempty"`

	// The specification for how client requests are delayed as part of fault
	// injection, before being sent to a backend service.
	// +kubebuilder:validation:Optional
	Delay []RouteRulesRouteActionFaultInjectionPolicyDelayParameters `json:"delay,omitempty" tf:"delay,omitempty"`
}

type RouteRulesRouteActionRequestMirrorPolicyObservation struct {
}

type RouteRulesRouteActionRequestMirrorPolicyParameters struct {

	// The BackendService resource being mirrored to.
	// +kubebuilder:validation:Required
	BackendService *string `json:"backendService" tf:"backend_service,omitempty"`
}

type RouteRulesRouteActionRetryPolicyObservation struct {
}

type RouteRulesRouteActionRetryPolicyParameters struct {

	// Specifies the allowed number retries. This number must be > 0.
	// +kubebuilder:validation:Required
	NumRetries *int64 `json:"numRetries" tf:"num_retries,omitempty"`

	// Specifies a non-zero timeout per retry attempt.
	// If not specified, will use the timeout set in HttpRouteAction. If timeout in HttpRouteAction
	// is not set, will use the largest timeout among all backend services associated with the route.
	// +kubebuilder:validation:Optional
	PerTryTimeout []RouteRulesRouteActionRetryPolicyPerTryTimeoutParameters `json:"perTryTimeout,omitempty" tf:"per_try_timeout,omitempty"`

	// Specfies one or more conditions when this retry rule applies. Valid values are:
	//
	// * 5xx: Loadbalancer will attempt a retry if the backend service responds with
	// any 5xx response code, or if the backend service does not respond at all,
	// example: disconnects, reset, read timeout, connection failure, and refused
	// streams.
	// * gateway-error: Similar to 5xx, but only applies to response codes
	// 502, 503 or 504.
	// * connect-failure: Loadbalancer will retry on failures
	// connecting to backend services, for example due to connection timeouts.
	// * retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.
	// Currently the only retriable error supported is 409.
	// * refused-stream: Loadbalancer will retry if the backend service resets the stream with a
	// REFUSED_STREAM error code. This reset type indicates that it is safe to retry.
	// * cancelled: Loadbalancer will retry if the gRPC status code in the response
	// header is set to cancelled
	// * deadline-exceeded: Loadbalancer will retry if the
	// gRPC status code in the response header is set to deadline-exceeded
	// * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response
	// header is set to resource-exhausted
	// * unavailable: Loadbalancer will retry if the gRPC status code in
	// the response header is set to unavailable
	// +kubebuilder:validation:Optional
	RetryConditions []*string `json:"retryConditions,omitempty" tf:"retry_conditions,omitempty"`
}

type RouteRulesRouteActionRetryPolicyPerTryTimeoutObservation struct {
}

type RouteRulesRouteActionRetryPolicyPerTryTimeoutParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations
	// less than one second are represented with a 0 'seconds' field and a positive
	// 'nanos' field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
	// inclusive.
	// +kubebuilder:validation:Required
	Seconds *string `json:"seconds" tf:"seconds,omitempty"`
}

type RouteRulesRouteActionTimeoutObservation struct {
}

type RouteRulesRouteActionTimeoutParameters struct {

	// Span of time that's a fraction of a second at nanosecond resolution. Durations
	// less than one second are represented with a 0 'seconds' field and a positive
	// 'nanos' field. Must be from 0 to 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos,omitempty"`

	// Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
	// inclusive.
	// +kubebuilder:validation:Required
	Seconds *string `json:"seconds" tf:"seconds,omitempty"`
}

type RouteRulesRouteActionURLRewriteObservation struct {
}

type RouteRulesRouteActionURLRewriteParameters struct {

	// Prior to forwarding the request to the selected service, the request's host
	// header is replaced with contents of hostRewrite. The value must be between 1 and
	// 255 characters.
	// +kubebuilder:validation:Optional
	HostRewrite *string `json:"hostRewrite,omitempty" tf:"host_rewrite,omitempty"`

	// Prior to forwarding the request to the selected backend service, the matching
	// portion of the request's path is replaced by pathPrefixRewrite. The value must
	// be between 1 and 1024 characters.
	// +kubebuilder:validation:Optional
	PathPrefixRewrite *string `json:"pathPrefixRewrite,omitempty" tf:"path_prefix_rewrite,omitempty"`
}

type RouteRulesRouteActionWeightedBackendServicesHeaderActionObservation struct {
}

type RouteRulesRouteActionWeightedBackendServicesHeaderActionParameters struct {

	// Headers to add to a matching request prior to forwarding the request to the
	// backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToAdd []RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters `json:"requestHeadersToAdd,omitempty" tf:"request_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the request
	// prior to forwarding the request to the backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToRemove []*string `json:"requestHeadersToRemove,omitempty" tf:"request_headers_to_remove,omitempty"`

	// Headers to add the response prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToAdd []RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters `json:"responseHeadersToAdd,omitempty" tf:"response_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the response
	// prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToRemove []*string `json:"responseHeadersToRemove,omitempty" tf:"response_headers_to_remove,omitempty"`
}

type RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddObservation struct {
}

type RouteRulesRouteActionWeightedBackendServicesHeaderActionRequestHeadersToAddParameters struct {

	// The name of the header.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the
	// header. If true, headerValue is set for the header, discarding any values that
	// were set for that header.
	// +kubebuilder:validation:Required
	Replace *bool `json:"replace" tf:"replace,omitempty"`
}

type RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddObservation struct {
}

type RouteRulesRouteActionWeightedBackendServicesHeaderActionResponseHeadersToAddParameters struct {

	// The name of the header.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the
	// header. If true, headerValue is set for the header, discarding any values that
	// were set for that header.
	// +kubebuilder:validation:Required
	Replace *bool `json:"replace" tf:"replace,omitempty"`
}

type RouteRulesRouteActionWeightedBackendServicesObservation struct {
}

type RouteRulesRouteActionWeightedBackendServicesParameters struct {

	// The default BackendService resource. Before
	// forwarding the request to backendService, the loadbalancer applies any relevant
	// headerActions specified as part of this backendServiceWeight.
	// +kubebuilder:validation:Required
	BackendService *string `json:"backendService" tf:"backend_service,omitempty"`

	// Specifies changes to request and response headers that need to take effect for
	// the selected backendService. headerAction specified here take effect before
	// headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
	// +kubebuilder:validation:Optional
	HeaderAction []RouteRulesRouteActionWeightedBackendServicesHeaderActionParameters `json:"headerAction,omitempty" tf:"header_action,omitempty"`

	// Specifies the fraction of traffic sent to backendService, computed as weight /
	// (sum of all weightedBackendService weights in routeAction) . The selection of a
	// backend service is determined only for new traffic. Once a user's request has
	// been directed to a backendService, subsequent requests will be sent to the same
	// backendService as determined by the BackendService's session affinity policy.
	// The value must be between 0 and 1000
	// +kubebuilder:validation:Required
	Weight *int64 `json:"weight" tf:"weight,omitempty"`
}

type URLMapDefaultURLRedirectObservation struct {
}

type URLMapDefaultURLRedirectParameters struct {

	// If set to true, the URL scheme in the redirected request is set to https. If set to
	// false, the URL scheme of the redirected request will remain the same as that of the
	// request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this
	// true for TargetHttpsProxy is not permitted. The default is set to false.
	// +kubebuilder:validation:Optional
	HTTPSRedirect *bool `json:"httpsRedirect,omitempty" tf:"https_redirect,omitempty"`

	// The host that will be used in the redirect response instead of the one that was
	// supplied in the request. The value must be between 1 and 255 characters.
	// +kubebuilder:validation:Optional
	HostRedirect *string `json:"hostRedirect,omitempty" tf:"host_redirect,omitempty"`

	// The path that will be used in the redirect response instead of the one that was
	// supplied in the request. pathRedirect cannot be supplied together with
	// prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the
	// original request will be used for the redirect. The value must be between 1 and 1024
	// characters.
	// +kubebuilder:validation:Optional
	PathRedirect *string `json:"pathRedirect,omitempty" tf:"path_redirect,omitempty"`

	// The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
	// retaining the remaining portion of the URL before redirecting the request.
	// prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or
	// neither. If neither is supplied, the path of the original request will be used for
	// the redirect. The value must be between 1 and 1024 characters.
	// +kubebuilder:validation:Optional
	PrefixRedirect *string `json:"prefixRedirect,omitempty" tf:"prefix_redirect,omitempty"`

	// The HTTP Status code to use for this RedirectAction. Supported values are:
	//
	// * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.
	//
	// * FOUND, which corresponds to 302.
	//
	// * SEE_OTHER which corresponds to 303.
	//
	// * TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method
	// will be retained.
	//
	// * PERMANENT_REDIRECT, which corresponds to 308. In this case,
	// the request method will be retained. Possible values: ["FOUND", "MOVED_PERMANENTLY_DEFAULT", "PERMANENT_REDIRECT", "SEE_OTHER", "TEMPORARY_REDIRECT"]
	// +kubebuilder:validation:Optional
	RedirectResponseCode *string `json:"redirectResponseCode,omitempty" tf:"redirect_response_code,omitempty"`

	// If set to true, any accompanying query portion of the original URL is removed prior
	// to redirecting the request. If set to false, the query portion of the original URL is
	// retained. The default is set to false.
	// This field is required to ensure an empty block is not set. The normal default value is false.
	// +kubebuilder:validation:Required
	StripQuery *bool `json:"stripQuery" tf:"strip_query,omitempty"`
}

type URLMapHeaderActionObservation struct {
}

type URLMapHeaderActionParameters struct {

	// Headers to add to a matching request prior to forwarding the request to the
	// backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToAdd []URLMapHeaderActionRequestHeadersToAddParameters `json:"requestHeadersToAdd,omitempty" tf:"request_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the request
	// prior to forwarding the request to the backendService.
	// +kubebuilder:validation:Optional
	RequestHeadersToRemove []*string `json:"requestHeadersToRemove,omitempty" tf:"request_headers_to_remove,omitempty"`

	// Headers to add the response prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToAdd []URLMapHeaderActionResponseHeadersToAddParameters `json:"responseHeadersToAdd,omitempty" tf:"response_headers_to_add,omitempty"`

	// A list of header names for headers that need to be removed from the response
	// prior to sending the response back to the client.
	// +kubebuilder:validation:Optional
	ResponseHeadersToRemove []*string `json:"responseHeadersToRemove,omitempty" tf:"response_headers_to_remove,omitempty"`
}

type URLMapHeaderActionRequestHeadersToAddObservation struct {
}

type URLMapHeaderActionRequestHeadersToAddParameters struct {

	// The name of the header.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the
	// header. If true, headerValue is set for the header, discarding any values that
	// were set for that header.
	// +kubebuilder:validation:Required
	Replace *bool `json:"replace" tf:"replace,omitempty"`
}

type URLMapHeaderActionResponseHeadersToAddObservation struct {
}

type URLMapHeaderActionResponseHeadersToAddParameters struct {

	// The name of the header.
	// +kubebuilder:validation:Required
	HeaderName *string `json:"headerName" tf:"header_name,omitempty"`

	// The value of the header to add.
	// +kubebuilder:validation:Required
	HeaderValue *string `json:"headerValue" tf:"header_value,omitempty"`

	// If false, headerValue is appended to any values that already exist for the
	// header. If true, headerValue is set for the header, discarding any values that
	// were set for that header.
	// +kubebuilder:validation:Required
	Replace *bool `json:"replace" tf:"replace,omitempty"`
}

type URLMapHostRuleObservation struct {
}

type URLMapHostRuleParameters struct {

	// An optional description of this resource. Provide this property when you create
	// the resource.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The list of host patterns to match. They must be valid hostnames, except * will
	// match any string of ([a-z0-9-.]*). In that case, * must be the first character
	// and must be followed in the pattern by either - or ..
	// +kubebuilder:validation:Required
	Hosts []*string `json:"hosts" tf:"hosts,omitempty"`

	// The name of the PathMatcher to use to match the path portion of the URL if the
	// hostRule matches the URL's host portion.
	// +kubebuilder:validation:Required
	PathMatcher *string `json:"pathMatcher" tf:"path_matcher,omitempty"`
}

type URLMapObservation struct {
	CreationTimestamp *string `json:"creationTimestamp,omitempty" tf:"creation_timestamp,omitempty"`

	Fingerprint *string `json:"fingerprint,omitempty" tf:"fingerprint,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	MapID *int64 `json:"mapId,omitempty" tf:"map_id,omitempty"`

	SelfLink *string `json:"selfLink,omitempty" tf:"self_link,omitempty"`
}

type URLMapParameters struct {

	// defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions
	// like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend.
	// If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService
	// is set, defaultRouteAction cannot contain any weightedBackendServices.
	//
	// Only one of defaultRouteAction or defaultUrlRedirect must be set.
	// +kubebuilder:validation:Optional
	DefaultRouteAction []DefaultRouteActionParameters `json:"defaultRouteAction,omitempty" tf:"default_route_action,omitempty"`

	// The backend service or backend bucket to use when none of the given rules match.
	// +kubebuilder:validation:Optional
	DefaultService *string `json:"defaultService,omitempty" tf:"default_service,omitempty"`

	// When none of the specified hostRules match, the request is redirected to a URL specified
	// by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
	// defaultRouteAction must not be set.
	// +kubebuilder:validation:Optional
	DefaultURLRedirect []URLMapDefaultURLRedirectParameters `json:"defaultUrlRedirect,omitempty" tf:"default_url_redirect,omitempty"`

	// An optional description of this resource. Provide this property when you create
	// the resource.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies changes to request and response headers that need to take effect for
	// the selected backendService. The headerAction specified here take effect after
	// headerAction specified under pathMatcher.
	// +kubebuilder:validation:Optional
	HeaderAction []URLMapHeaderActionParameters `json:"headerAction,omitempty" tf:"header_action,omitempty"`

	// The list of HostRules to use against the URL.
	// +kubebuilder:validation:Optional
	HostRule []URLMapHostRuleParameters `json:"hostRule,omitempty" tf:"host_rule,omitempty"`

	// Name of the resource. Provided by the client when the resource is created. The
	// name must be 1-63 characters long, and comply with RFC1035. Specifically, the
	// name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase
	// letter, and all following characters must be a dash, lowercase letter, or digit,
	// except the last character, which cannot be a dash.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The list of named PathMatchers to use against the URL.
	// +kubebuilder:validation:Optional
	PathMatcher []URLMapPathMatcherParameters `json:"pathMatcher,omitempty" tf:"path_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// The list of expected URL mapping tests. Request to update this UrlMap will
	// succeed only if all of the test cases pass. You can specify a maximum of 100
	// tests per UrlMap.
	// +kubebuilder:validation:Optional
	Test []URLMapTestParameters `json:"test,omitempty" tf:"test,omitempty"`
}

type URLMapPathMatcherDefaultURLRedirectObservation struct {
}

type URLMapPathMatcherDefaultURLRedirectParameters struct {

	// If set to true, the URL scheme in the redirected request is set to https. If set to
	// false, the URL scheme of the redirected request will remain the same as that of the
	// request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this
	// true for TargetHttpsProxy is not permitted. The default is set to false.
	// +kubebuilder:validation:Optional
	HTTPSRedirect *bool `json:"httpsRedirect,omitempty" tf:"https_redirect,omitempty"`

	// The host that will be used in the redirect response instead of the one that was
	// supplied in the request. The value must be between 1 and 255 characters.
	// +kubebuilder:validation:Optional
	HostRedirect *string `json:"hostRedirect,omitempty" tf:"host_redirect,omitempty"`

	// The path that will be used in the redirect response instead of the one that was
	// supplied in the request. pathRedirect cannot be supplied together with
	// prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the
	// original request will be used for the redirect. The value must be between 1 and 1024
	// characters.
	// +kubebuilder:validation:Optional
	PathRedirect *string `json:"pathRedirect,omitempty" tf:"path_redirect,omitempty"`

	// The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
	// retaining the remaining portion of the URL before redirecting the request.
	// prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or
	// neither. If neither is supplied, the path of the original request will be used for
	// the redirect. The value must be between 1 and 1024 characters.
	// +kubebuilder:validation:Optional
	PrefixRedirect *string `json:"prefixRedirect,omitempty" tf:"prefix_redirect,omitempty"`

	// The HTTP Status code to use for this RedirectAction. Supported values are:
	//
	// * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.
	//
	// * FOUND, which corresponds to 302.
	//
	// * SEE_OTHER which corresponds to 303.
	//
	// * TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method
	// will be retained.
	//
	// * PERMANENT_REDIRECT, which corresponds to 308. In this case,
	// the request method will be retained. Possible values: ["FOUND", "MOVED_PERMANENTLY_DEFAULT", "PERMANENT_REDIRECT", "SEE_OTHER", "TEMPORARY_REDIRECT"]
	// +kubebuilder:validation:Optional
	RedirectResponseCode *string `json:"redirectResponseCode,omitempty" tf:"redirect_response_code,omitempty"`

	// If set to true, any accompanying query portion of the original URL is removed prior
	// to redirecting the request. If set to false, the query portion of the original URL is
	// retained.
	// This field is required to ensure an empty block is not set. The normal default value is false.
	// +kubebuilder:validation:Required
	StripQuery *bool `json:"stripQuery" tf:"strip_query,omitempty"`
}

type URLMapPathMatcherObservation struct {
}

type URLMapPathMatcherParameters struct {

	// defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs
	// advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request
	// to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set.
	// Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.
	//
	// Only one of defaultRouteAction or defaultUrlRedirect must be set.
	// +kubebuilder:validation:Optional
	DefaultRouteAction []PathMatcherDefaultRouteActionParameters `json:"defaultRouteAction,omitempty" tf:"default_route_action,omitempty"`

	// The backend service or backend bucket to use when none of the given paths match.
	// +kubebuilder:validation:Optional
	DefaultService *string `json:"defaultService,omitempty" tf:"default_service,omitempty"`

	// When none of the specified hostRules match, the request is redirected to a URL specified
	// by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
	// defaultRouteAction must not be set.
	// +kubebuilder:validation:Optional
	DefaultURLRedirect []URLMapPathMatcherDefaultURLRedirectParameters `json:"defaultUrlRedirect,omitempty" tf:"default_url_redirect,omitempty"`

	// An optional description of this resource. Provide this property when you create
	// the resource.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies changes to request and response headers that need to take effect for
	// the selected backendService. HeaderAction specified here are applied after the
	// matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap
	// +kubebuilder:validation:Optional
	HeaderAction []PathMatcherHeaderActionParameters `json:"headerAction,omitempty" tf:"header_action,omitempty"`

	// The name to which this PathMatcher is referred by the HostRule.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The list of path rules. Use this list instead of routeRules when routing based
	// on simple path matching is all that's required. The order by which path rules
	// are specified does not matter. Matches are always done on the longest-path-first
	// basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/*
	// irrespective of the order in which those paths appear in this list. Within a
	// given pathMatcher, only one of pathRules or routeRules must be set.
	// +kubebuilder:validation:Optional
	PathRule []PathMatcherPathRuleParameters `json:"pathRule,omitempty" tf:"path_rule,omitempty"`

	// The list of ordered HTTP route rules. Use this list instead of pathRules when
	// advanced route matching and routing actions are desired. The order of specifying
	// routeRules matters: the first rule that matches will cause its specified routing
	// action to take effect. Within a given pathMatcher, only one of pathRules or
	// routeRules must be set. routeRules are not supported in UrlMaps intended for
	// External load balancers.
	// +kubebuilder:validation:Optional
	RouteRules []PathMatcherRouteRulesParameters `json:"routeRules,omitempty" tf:"route_rules,omitempty"`
}

type URLMapTestObservation struct {
}

type URLMapTestParameters struct {

	// Description of this test case.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Host portion of the URL.
	// +kubebuilder:validation:Required
	Host *string `json:"host" tf:"host,omitempty"`

	// Path portion of the URL.
	// +kubebuilder:validation:Required
	Path *string `json:"path" tf:"path,omitempty"`

	// The backend service or backend bucket link that should be matched by this test.
	// +kubebuilder:validation:Required
	Service *string `json:"service" tf:"service,omitempty"`
}

// URLMapSpec defines the desired state of URLMap
type URLMapSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     URLMapParameters `json:"forProvider"`
}

// URLMapStatus defines the observed state of URLMap.
type URLMapStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        URLMapObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// URLMap is the Schema for the URLMaps API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcpjet}
type URLMap struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              URLMapSpec   `json:"spec"`
	Status            URLMapStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// URLMapList contains a list of URLMaps
type URLMapList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []URLMap `json:"items"`
}

// Repository type metadata.
var (
	URLMap_Kind             = "URLMap"
	URLMap_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: URLMap_Kind}.String()
	URLMap_KindAPIVersion   = URLMap_Kind + "." + CRDGroupVersion.String()
	URLMap_GroupVersionKind = CRDGroupVersion.WithKind(URLMap_Kind)
)

func init() {
	SchemeBuilder.Register(&URLMap{}, &URLMapList{})
}
