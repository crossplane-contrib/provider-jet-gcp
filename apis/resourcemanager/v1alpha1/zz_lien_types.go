/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LienObservation struct {
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type LienParameters struct {

	// A stable, user-visible/meaningful string identifying the origin
	// of the Lien, intended to be inspected programmatically. Maximum length of
	// 200 characters.
	// +kubebuilder:validation:Required
	Origin *string `json:"origin" tf:"origin,omitempty"`

	// A reference to the resource this Lien is attached to.
	// The server will validate the parent against those for which Liens are supported.
	// Since a variety of objects can have Liens against them, you must provide the type
	// prefix (e.g. "projects/my-project-name").
	// +kubebuilder:validation:Required
	Parent *string `json:"parent" tf:"parent,omitempty"`

	// Concise user-visible strings indicating why an action cannot be performed
	// on a resource. Maximum length of 200 characters.
	// +kubebuilder:validation:Required
	Reason *string `json:"reason" tf:"reason,omitempty"`

	// The types of operations which should be blocked as a result of this Lien.
	// Each value should correspond to an IAM permission. The server will validate
	// the permissions against those for which Liens are supported.  An empty
	// list is meaningless and will be rejected.
	// e.g. ['resourcemanager.projects.delete']
	// +kubebuilder:validation:Required
	Restrictions []*string `json:"restrictions" tf:"restrictions,omitempty"`
}

// LienSpec defines the desired state of Lien
type LienSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LienParameters `json:"forProvider"`
}

// LienStatus defines the observed state of Lien.
type LienStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LienObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Lien is the Schema for the Liens API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcpjet}
type Lien struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LienSpec   `json:"spec"`
	Status            LienStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LienList contains a list of Liens
type LienList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Lien `json:"items"`
}

// Repository type metadata.
var (
	Lien_Kind             = "Lien"
	Lien_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Lien_Kind}.String()
	Lien_KindAPIVersion   = Lien_Kind + "." + CRDGroupVersion.String()
	Lien_GroupVersionKind = CRDGroupVersion.WithKind(Lien_Kind)
)

func init() {
	SchemeBuilder.Register(&Lien{}, &LienList{})
}
