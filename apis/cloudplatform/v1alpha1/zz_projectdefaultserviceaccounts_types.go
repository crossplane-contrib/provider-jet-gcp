/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ProjectDefaultServiceAccountsObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	ServiceAccounts map[string]string `json:"serviceAccounts,omitempty" tf:"service_accounts,omitempty"`
}

type ProjectDefaultServiceAccountsParameters struct {

	// The action to be performed in the default service accounts. Valid values are: DEPRIVILEGE, DELETE, DISABLE.
	// Note that DEPRIVILEGE action will ignore the REVERT configuration in the restore_policy.
	// +kubebuilder:validation:Required
	Action *string `json:"action" tf:"action,omitempty"`

	// The project ID where service accounts are created.
	// +kubebuilder:validation:Required
	Project *string `json:"project" tf:"project,omitempty"`

	// The action to be performed in the default service accounts on the resource destroy.
	// Valid values are NONE, REVERT and REVERT_AND_IGNORE_FAILURE. It is applied for any action but in the DEPRIVILEGE.
	// +kubebuilder:validation:Optional
	RestorePolicy *string `json:"restorePolicy,omitempty" tf:"restore_policy,omitempty"`
}

// ProjectDefaultServiceAccountsSpec defines the desired state of ProjectDefaultServiceAccounts
type ProjectDefaultServiceAccountsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProjectDefaultServiceAccountsParameters `json:"forProvider"`
}

// ProjectDefaultServiceAccountsStatus defines the observed state of ProjectDefaultServiceAccounts.
type ProjectDefaultServiceAccountsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProjectDefaultServiceAccountsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ProjectDefaultServiceAccounts is the Schema for the ProjectDefaultServiceAccountss API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcpjet}
type ProjectDefaultServiceAccounts struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ProjectDefaultServiceAccountsSpec   `json:"spec"`
	Status            ProjectDefaultServiceAccountsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProjectDefaultServiceAccountsList contains a list of ProjectDefaultServiceAccountss
type ProjectDefaultServiceAccountsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProjectDefaultServiceAccounts `json:"items"`
}

// Repository type metadata.
var (
	ProjectDefaultServiceAccounts_Kind             = "ProjectDefaultServiceAccounts"
	ProjectDefaultServiceAccounts_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ProjectDefaultServiceAccounts_Kind}.String()
	ProjectDefaultServiceAccounts_KindAPIVersion   = ProjectDefaultServiceAccounts_Kind + "." + CRDGroupVersion.String()
	ProjectDefaultServiceAccounts_GroupVersionKind = CRDGroupVersion.WithKind(ProjectDefaultServiceAccounts_Kind)
)

func init() {
	SchemeBuilder.Register(&ProjectDefaultServiceAccounts{}, &ProjectDefaultServiceAccountsList{})
}
