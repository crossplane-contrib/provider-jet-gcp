/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type WebBackendServiceIAMPolicyObservation struct {
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type WebBackendServiceIAMPolicyParameters struct {

	// +kubebuilder:validation:Required
	PolicyData *string `json:"policyData" tf:"policy_data,omitempty"`

	// +kubebuilder:validation:Optional
	Project *string `json:"project,omitempty" tf:"project,omitempty"`

	// +kubebuilder:validation:Required
	WebBackendService *string `json:"webBackendService" tf:"web_backend_service,omitempty"`
}

// WebBackendServiceIAMPolicySpec defines the desired state of WebBackendServiceIAMPolicy
type WebBackendServiceIAMPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WebBackendServiceIAMPolicyParameters `json:"forProvider"`
}

// WebBackendServiceIAMPolicyStatus defines the observed state of WebBackendServiceIAMPolicy.
type WebBackendServiceIAMPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WebBackendServiceIAMPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// WebBackendServiceIAMPolicy is the Schema for the WebBackendServiceIAMPolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcpjet}
type WebBackendServiceIAMPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WebBackendServiceIAMPolicySpec   `json:"spec"`
	Status            WebBackendServiceIAMPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WebBackendServiceIAMPolicyList contains a list of WebBackendServiceIAMPolicys
type WebBackendServiceIAMPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []WebBackendServiceIAMPolicy `json:"items"`
}

// Repository type metadata.
var (
	WebBackendServiceIAMPolicy_Kind             = "WebBackendServiceIAMPolicy"
	WebBackendServiceIAMPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: WebBackendServiceIAMPolicy_Kind}.String()
	WebBackendServiceIAMPolicy_KindAPIVersion   = WebBackendServiceIAMPolicy_Kind + "." + CRDGroupVersion.String()
	WebBackendServiceIAMPolicy_GroupVersionKind = CRDGroupVersion.WithKind(WebBackendServiceIAMPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&WebBackendServiceIAMPolicy{}, &WebBackendServiceIAMPolicyList{})
}
