/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DefaultObjectACLObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type DefaultObjectACLParameters struct {

	// +kubebuilder:validation:Required
	Bucket *string `json:"bucket" tf:"bucket,omitempty"`

	// +kubebuilder:validation:Optional
	RoleEntity []*string `json:"roleEntity,omitempty" tf:"role_entity,omitempty"`
}

// DefaultObjectACLSpec defines the desired state of DefaultObjectACL
type DefaultObjectACLSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DefaultObjectACLParameters `json:"forProvider"`
}

// DefaultObjectACLStatus defines the observed state of DefaultObjectACL.
type DefaultObjectACLStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DefaultObjectACLObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DefaultObjectACL is the Schema for the DefaultObjectACLs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcpjet}
type DefaultObjectACL struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DefaultObjectACLSpec   `json:"spec"`
	Status            DefaultObjectACLStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DefaultObjectACLList contains a list of DefaultObjectACLs
type DefaultObjectACLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DefaultObjectACL `json:"items"`
}

// Repository type metadata.
var (
	DefaultObjectACL_Kind             = "DefaultObjectACL"
	DefaultObjectACL_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DefaultObjectACL_Kind}.String()
	DefaultObjectACL_KindAPIVersion   = DefaultObjectACL_Kind + "." + CRDGroupVersion.String()
	DefaultObjectACL_GroupVersionKind = CRDGroupVersion.WithKind(DefaultObjectACL_Kind)
)

func init() {
	SchemeBuilder.Register(&DefaultObjectACL{}, &DefaultObjectACLList{})
}
