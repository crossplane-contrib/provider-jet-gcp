---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: pages.dialogflowcx.gcp.jet.crossplane.io
spec:
  group: dialogflowcx.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Page
    listKind: PageList
    plural: pages
    singular: page
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Page is the Schema for the Pages API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PageSpec defines the desired state of Page
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  displayName:
                    description: The human-readable name of the page, unique within
                      the agent.
                    type: string
                  entryFulfillment:
                    description: The fulfillment to call when the session is entering
                      the page.
                    items:
                      properties:
                        messages:
                          description: The list of rich message responses to present
                            to the user.
                          items:
                            properties:
                              text:
                                description: The text response message.
                                items:
                                  properties:
                                    text:
                                      description: A collection of text responses.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                        returnPartialResponses:
                          description: 'Whether Dialogflow should return currently
                            queued fulfillment response messages in streaming APIs.
                            If a webhook is specified, it happens before Dialogflow
                            invokes webhook. Warning: 1) This flag only affects streaming
                            API. Responses are still queued and returned once in non-streaming
                            API. 2) The flag can be enabled in any fulfillment but
                            only the first 3 partial responses will be returned. You
                            may only want to apply it to fulfillments that have slow
                            webhooks.'
                          type: boolean
                        tag:
                          description: The tag used by the webhook to identify which
                            fulfillment is being called. This field is required if
                            webhook is specified.
                          type: string
                        webhook:
                          description: 'The webhook to call. Format: projects/<Project
                            ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook
                            ID>.'
                          type: string
                      type: object
                    type: array
                  eventHandlers:
                    description: Handlers associated with the page to handle events
                      such as webhook errors, no match or no input.
                    items:
                      properties:
                        event:
                          description: The name of the event to handle.
                          type: string
                        targetFlow:
                          description: 'The target flow to transition to. Format:
                            projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/flows/<Flow ID>.'
                          type: string
                        targetPage:
                          description: 'The target page to transition to. Format:
                            projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/flows/<Flow ID>/pages/<Page ID>.'
                          type: string
                        triggerFulfillment:
                          description: The fulfillment to call when the event occurs.
                            Handling webhook errors with a fulfillment enabled with
                            webhook could cause infinite loop. It is invalid to specify
                            such fulfillment for a handler handling webhooks.
                          items:
                            properties:
                              messages:
                                description: The list of rich message responses to
                                  present to the user.
                                items:
                                  properties:
                                    text:
                                      description: The text response message.
                                      items:
                                        properties:
                                          text:
                                            description: A collection of text responses.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              returnPartialResponses:
                                description: 'Whether Dialogflow should return currently
                                  queued fulfillment response messages in streaming
                                  APIs. If a webhook is specified, it happens before
                                  Dialogflow invokes webhook. Warning: 1) This flag
                                  only affects streaming API. Responses are still
                                  queued and returned once in non-streaming API. 2)
                                  The flag can be enabled in any fulfillment but only
                                  the first 3 partial responses will be returned.
                                  You may only want to apply it to fulfillments that
                                  have slow webhooks.'
                                type: boolean
                              tag:
                                description: The tag used by the webhook to identify
                                  which fulfillment is being called. This field is
                                  required if webhook is specified.
                                type: string
                              webhook:
                                description: 'The webhook to call. Format: projects/<Project
                                  ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook
                                  ID>.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  form:
                    description: The form associated with the page, used for collecting
                      parameters relevant to the page.
                    items:
                      properties:
                        parameters:
                          description: Parameters to collect from the user.
                          items:
                            properties:
                              displayName:
                                description: The human-readable name of the parameter,
                                  unique within the form.
                                type: string
                              entityType:
                                description: 'The entity type of the parameter. Format:
                                  projects/-/locations/-/agents/-/entityTypes/<System
                                  Entity Type ID> for system entity types (for example,
                                  projects/-/locations/-/agents/-/entityTypes/sys.date),
                                  or projects/<Project ID>/locations/<Location ID>/agents/<Agent
                                  ID>/entityTypes/<Entity Type ID> for developer entity
                                  types.'
                                type: string
                              fillBehavior:
                                description: Defines fill behavior for the parameter.
                                items:
                                  properties:
                                    initialPromptFulfillment:
                                      description: The fulfillment to provide the
                                        initial prompt that the agent can present
                                        to the user in order to fill the parameter.
                                      items:
                                        properties:
                                          messages:
                                            description: The list of rich message
                                              responses to present to the user.
                                            items:
                                              properties:
                                                text:
                                                  description: The text response message.
                                                  items:
                                                    properties:
                                                      text:
                                                        description: A collection
                                                          of text responses.
                                                        items:
                                                          type: string
                                                        type: array
                                                    type: object
                                                  type: array
                                              type: object
                                            type: array
                                          returnPartialResponses:
                                            description: 'Whether Dialogflow should
                                              return currently queued fulfillment
                                              response messages in streaming APIs.
                                              If a webhook is specified, it happens
                                              before Dialogflow invokes webhook. Warning:
                                              1) This flag only affects streaming
                                              API. Responses are still queued and
                                              returned once in non-streaming API.
                                              2) The flag can be enabled in any fulfillment
                                              but only the first 3 partial responses
                                              will be returned. You may only want
                                              to apply it to fulfillments that have
                                              slow webhooks.'
                                            type: boolean
                                          tag:
                                            description: The tag used by the webhook
                                              to identify which fulfillment is being
                                              called. This field is required if webhook
                                              is specified.
                                            type: string
                                          webhook:
                                            description: 'The webhook to call. Format:
                                              projects/<Project ID>/locations/<Location
                                              ID>/agents/<Agent ID>/webhooks/<Webhook
                                              ID>.'
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              isList:
                                description: Indicates whether the parameter represents
                                  a list of values.
                                type: boolean
                              redact:
                                description: 'Indicates whether the parameter content
                                  should be redacted in log. If redaction is enabled,
                                  the parameter content will be replaced by parameter
                                  name during logging. Note: the parameter content
                                  is subject to redaction if either parameter level
                                  redaction or entity type level redaction is enabled.'
                                type: boolean
                              required:
                                description: Indicates whether the parameter is required.
                                  Optional parameters will not trigger prompts; however,
                                  they are filled if the user specifies them. Required
                                  parameters must be filled before form filling concludes.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  languageCode:
                    description: "The language of the following fields in page: \n
                      Page.entry_fulfillment.messages Page.entry_fulfillment.conditional_cases
                      Page.event_handlers.trigger_fulfillment.messages Page.event_handlers.trigger_fulfillment.conditional_cases
                      Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages
                      Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases
                      Page.form.parameters.fill_behavior.reprompt_event_handlers.messages
                      Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases
                      Page.transition_routes.trigger_fulfillment.messages Page.transition_routes.trigger_fulfillment.conditional_cases
                      If not specified, the agent's default language is used. Many
                      languages are supported. Note: languages must be enabled in
                      the agent before they can be used."
                    type: string
                  parent:
                    description: 'The flow to create a page for. Format: projects/<Project
                      ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.'
                    type: string
                  transitionRouteGroups:
                    description: 'Ordered list of TransitionRouteGroups associated
                      with the page. Transition route groups must be unique within
                      a page. If multiple transition routes within a page scope refer
                      to the same intent, then the precedence order is: page''s transition
                      route -> page''s transition route group -> flow''s transition
                      routes. If multiple transition route groups within a page contain
                      the same intent, then the first group in the ordered list takes
                      precedence. Format:projects/<Project ID>/locations/<Location
                      ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup
                      ID>.'
                    items:
                      type: string
                    type: array
                  transitionRoutes:
                    description: 'A list of transitions for the transition rules of
                      this page. They route the conversation to another page in the
                      same flow, or another flow. When we are in a certain page, the
                      TransitionRoutes are evalauted in the following order: TransitionRoutes
                      defined in the page with intent specified. TransitionRoutes
                      defined in the transition route groups with intent specified.
                      TransitionRoutes defined in flow with intent specified. TransitionRoutes
                      defined in the transition route groups with intent specified.
                      TransitionRoutes defined in the page with only condition specified.
                      TransitionRoutes defined in the transition route groups with
                      only condition specified.'
                    items:
                      properties:
                        condition:
                          description: The condition to evaluate against form parameters
                            or session parameters. At least one of intent or condition
                            must be specified. When both intent and condition are
                            specified, the transition can only happen when both are
                            fulfilled.
                          type: string
                        intent:
                          description: 'The unique identifier of an Intent. Format:
                            projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/intents/<Intent ID>. Indicates that the transition
                            can only happen when the given intent is matched. At least
                            one of intent or condition must be specified. When both
                            intent and condition are specified, the transition can
                            only happen when both are fulfilled.'
                          type: string
                        targetFlow:
                          description: 'The target flow to transition to. Format:
                            projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/flows/<Flow ID>.'
                          type: string
                        targetPage:
                          description: 'The target page to transition to. Format:
                            projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/flows/<Flow ID>/pages/<Page ID>.'
                          type: string
                        triggerFulfillment:
                          description: The fulfillment to call when the event occurs.
                            Handling webhook errors with a fulfillment enabled with
                            webhook could cause infinite loop. It is invalid to specify
                            such fulfillment for a handler handling webhooks.
                          items:
                            properties:
                              messages:
                                description: The list of rich message responses to
                                  present to the user.
                                items:
                                  properties:
                                    text:
                                      description: The text response message.
                                      items:
                                        properties:
                                          text:
                                            description: A collection of text responses.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              returnPartialResponses:
                                description: 'Whether Dialogflow should return currently
                                  queued fulfillment response messages in streaming
                                  APIs. If a webhook is specified, it happens before
                                  Dialogflow invokes webhook. Warning: 1) This flag
                                  only affects streaming API. Responses are still
                                  queued and returned once in non-streaming API. 2)
                                  The flag can be enabled in any fulfillment but only
                                  the first 3 partial responses will be returned.
                                  You may only want to apply it to fulfillments that
                                  have slow webhooks.'
                                type: boolean
                              tag:
                                description: The tag used by the webhook to identify
                                  which fulfillment is being called. This field is
                                  required if webhook is specified.
                                type: string
                              webhook:
                                description: 'The webhook to call. Format: projects/<Project
                                  ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook
                                  ID>.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                required:
                - displayName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PageStatus defines the observed state of Page.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  name:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
