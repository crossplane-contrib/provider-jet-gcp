apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: services.cloudrun.gcp.jet.crossplane.io
spec:
  group: cloudrun.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Service
    listKind: ServiceList
    plural: services
    singular: service
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Service is the Schema for the Services API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceSpec defines the desired state of Service
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autogenerateRevisionName:
                    type: boolean
                  location:
                    description: The location of the cloud run instance. eg us-central1
                    type: string
                  metadata:
                    description: Metadata associated with this Service, including
                      name, namespace, labels, and annotations.
                    items:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: "Annotations is a key value map stored with
                            a resource that may be set by external tools to store
                            and retrieve arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                            \n **Note**: The Cloud Run API may add additional annotations
                            that were not provided in your config. If terraform plan
                            shows a diff where a server-side annotation is added,
                            you can add it to your config or apply the lifecycle.ignore_changes
                            rule to the metadata.0.annotations field. \n Cloud Run
                            (fully managed) uses the following annotation keys to
                            configure features on a Service: \n - 'run.googleapis.com/ingress'
                            sets the [ingress settings](https://cloud.google.com/sdk/gcloud/reference/run/deploy#--ingress)
                            for the Service. For example, '\"run.googleapis.com/ingress\"
                            = \"all\"'."
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and routes.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        namespace:
                          description: In Cloud Run the namespace must be equal to
                            either the project ID or project number.
                          type: string
                      type: object
                    type: array
                  name:
                    description: 'Name must be unique within a namespace, within a
                      Cloud Run region. Is required when creating resources. Name
                      is primarily intended for creation idempotence and configuration
                      definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  project:
                    type: string
                  template:
                    description: "template holds the latest specification for the
                      Revision to be stamped out. The template references the container
                      image, and may also include labels and annotations that should
                      be attached to the Revision. To correlate a Revision, and/or
                      to force a Revision to be created when the spec doesn't otherwise
                      change, a nonce label may be provided in the template metadata.
                      For more details, see: https://github.com/knative/serving/blob/master/docs/client-conventions.md#associate-modifications-with-revisions
                      \n Cloud Run does not currently support referencing a build
                      that is responsible for materializing the container image from
                      source."
                    items:
                      properties:
                        metadata:
                          description: Optional metadata for this Revision, including
                            labels and annotations. Name will be generated by the
                            Configuration. To set minimum instances for this revision,
                            use the "autoscaling.knative.dev/minScale" annotation
                            key. To set maximum instances for this revision, use the
                            "autoscaling.knative.dev/maxScale" annotation key. To
                            set Cloud SQL connections for the revision, use the "run.googleapis.com/cloudsql-instances"
                            annotation key.
                          items:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: "Annotations is a key value map stored
                                  with a resource that may be set by external tools
                                  to store and retrieve arbitrary metadata. More info:
                                  http://kubernetes.io/docs/user-guide/annotations
                                  \n **Note**: The Cloud Run API may add additional
                                  annotations that were not provided in your config.
                                  If terraform plan shows a diff where a server-side
                                  annotation is added, you can add it to your config
                                  or apply the lifecycle.ignore_changes rule to the
                                  metadata.0.annotations field."
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Map of string keys and values that can
                                  be used to organize and categorize (scope and select)
                                  objects. May match selectors of replication controllers
                                  and routes. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                              name:
                                description: 'Name must be unique within a namespace,
                                  within a Cloud Run region. Is required when creating
                                  resources. Name is primarily intended for creation
                                  idempotence and configuration definition. Cannot
                                  be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: In Cloud Run the namespace must be equal
                                  to either the project ID or project number. It will
                                  default to the resource's project.
                                type: string
                            type: object
                          type: array
                        spec:
                          description: RevisionSpec holds the desired state of the
                            Revision (from the client).
                          items:
                            properties:
                              containerConcurrency:
                                description: 'ContainerConcurrency specifies the maximum
                                  allowed in-flight (concurrent) requests per container
                                  of the Revision. Values are: - ''0'' thread-safe,
                                  the system should manage the max concurrency. This
                                  is the default value. - ''1'' not-thread-safe. Single
                                  concurrency - ''2-N'' thread-safe, max concurrency
                                  of N'
                                format: int64
                                type: integer
                              containers:
                                description: 'Container defines the unit of execution
                                  for this Revision. In the context of a Revision,
                                  we disallow a number of the fields of this Container,
                                  including: name, ports, and volumeMounts. The runtime
                                  contract is documented here: https://github.com/knative/serving/blob/master/docs/runtime-contract.md'
                                items:
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The
                                        docker image''s CMD is used if this is not
                                        provided. Variable references $(VAR_NAME)
                                        are expanded using the container''s environment.
                                        If a variable cannot be resolved, the reference
                                        in the input string will be unchanged. The
                                        $(VAR_NAME) syntax can be escaped with a double
                                        $$, ie: $$(VAR_NAME). Escaped references will
                                        never be expanded, regardless of whether the
                                        variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: 'Entrypoint array. Not executed
                                        within a shell. The docker image''s ENTRYPOINT
                                        is used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded using
                                        the container''s environment. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. The $(VAR_NAME)
                                        syntax can be escaped with a double $$, ie:
                                        $$(VAR_NAME). Escaped references will never
                                        be expanded, regardless of whether the variable
                                        exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container.
                                      items:
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME)
                                              are expanded using the previous defined
                                              environment variables in the container
                                              and any route environment variables.
                                              If a variable cannot be resolved, the
                                              reference in the input string will be
                                              unchanged. The $(VAR_NAME) syntax can
                                              be escaped with a double $$, ie: $$(VAR_NAME).
                                              Escaped references will never be expanded,
                                              regardless of whether the variable exists
                                              or not. Defaults to "".'
                                            type: string
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container. All invalid keys
                                        will be reported as an event when the container
                                        is starting. When a key exists in multiple
                                        sources, the value associated with the last
                                        source will take precedence. Values defined
                                        by an Env with a duplicate key will take precedence.
                                      items:
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from.
                                            items:
                                              properties:
                                                localObjectReference:
                                                  description: The ConfigMap to select
                                                    from.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap must be defined
                                                  type: boolean
                                              type: object
                                            type: array
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from.
                                            items:
                                              properties:
                                                localObjectReference:
                                                  description: The Secret to select
                                                    from.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                optional:
                                                  description: Specify whether the
                                                    Secret must be defined
                                                  type: boolean
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    image:
                                      description: 'Docker image name. This is most
                                        often a reference to a container located in
                                        the container registry, such as gcr.io/cloudrun/hello
                                        More info: https://kubernetes.io/docs/concepts/containers/images'
                                      type: string
                                    ports:
                                      description: 'List of open ports in the container.
                                        More Info: https://cloud.google.com/run/docs/reference/rest/v1/RevisionSpec#ContainerPort'
                                      items:
                                        properties:
                                          containerPort:
                                            description: Port number.
                                            format: int64
                                            type: integer
                                          name:
                                            description: Name of the port.
                                            type: string
                                          protocol:
                                            description: Protocol used on port. Defaults
                                              to TCP.
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                    resources:
                                      description: 'Compute Resources required by
                                        this container. Used to set values such as
                                        max memory More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits'
                                      items:
                                        properties:
                                          limits:
                                            additionalProperties:
                                              type: string
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              The values of the map is string form
                                              of the ''quantity'' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              type: string
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. The values of the map is string
                                              form of the ''quantity'' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                            type: object
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                        If not specified, the container runtime's
                                        default will be used, which might be configured
                                        in the container image.
                                      type: string
                                  required:
                                  - image
                                  type: object
                                type: array
                              serviceAccountName:
                                description: Email address of the IAM service account
                                  associated with the revision of the service. The
                                  service account represents the identity of the running
                                  revision, and determines what permissions the revision
                                  has. If not provided, the revision will use the
                                  project's default service account.
                                type: string
                              timeoutSeconds:
                                description: TimeoutSeconds holds the max duration
                                  the instance is allowed for responding to a request.
                                format: int64
                                type: integer
                            type: object
                          type: array
                      type: object
                    type: array
                  traffic:
                    description: Traffic specifies how to distribute traffic over
                      a collection of Knative Revisions and Configurations
                    items:
                      properties:
                        latestRevision:
                          description: LatestRevision may be optionally provided to
                            indicate that the latest ready Revision of the Configuration
                            should be used for this traffic target. When provided
                            LatestRevision must be true if RevisionName is empty;
                            it must be false when RevisionName is non-empty.
                          type: boolean
                        percent:
                          description: Percent specifies percent of the traffic to
                            this Revision or Configuration.
                          format: int64
                          type: integer
                        revisionName:
                          description: RevisionName of a specific revision to which
                            to send this portion of traffic.
                          type: string
                      required:
                      - percent
                      type: object
                    type: array
                required:
                - location
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ServiceStatus defines the observed state of Service.
            properties:
              atProvider:
                properties:
                  status:
                    items:
                      properties:
                        conditions:
                          items:
                            properties:
                              message:
                                type: string
                              reason:
                                type: string
                              status:
                                type: string
                              type:
                                type: string
                            type: object
                          type: array
                        latestCreatedRevisionName:
                          type: string
                        latestReadyRevisionName:
                          type: string
                        observedGeneration:
                          format: int64
                          type: integer
                        url:
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
