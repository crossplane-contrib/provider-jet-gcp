---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: entitytypes.dialogflowcx.gcp.jet.crossplane.io
spec:
  group: dialogflowcx.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: EntityType
    listKind: EntityTypeList
    plural: entitytypes
    singular: entitytype
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EntityType is the Schema for the EntityTypes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EntityTypeSpec defines the desired state of EntityType
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoExpansionMode:
                    description: 'Represents kinds of entities. * AUTO_EXPANSION_MODE_UNSPECIFIED:
                      Auto expansion disabled for the entity. * AUTO_EXPANSION_MODE_DEFAULT:
                      Allows an agent to recognize values that have not been explicitly
                      listed in the entity. Possible values: ["AUTO_EXPANSION_MODE_DEFAULT",
                      "AUTO_EXPANSION_MODE_UNSPECIFIED"]'
                    type: string
                  displayName:
                    description: The human-readable name of the entity type, unique
                      within the agent.
                    type: string
                  enableFuzzyExtraction:
                    description: Enables fuzzy entity extraction during classification.
                    type: boolean
                  entities:
                    description: The collection of entity entries associated with
                      the entity type.
                    items:
                      properties:
                        synonyms:
                          description: 'A collection of value synonyms. For example,
                            if the entity type is vegetable, and value is scallions,
                            a synonym could be green onions. For KIND_LIST entity
                            types: This collection must contain exactly one synonym
                            equal to value.'
                          items:
                            type: string
                          type: array
                        value:
                          description: 'The primary value associated with this entity
                            entry. For example, if the entity type is vegetable, the
                            value could be scallions. For KIND_MAP entity types: A
                            canonical value to be used in place of synonyms. For KIND_LIST
                            entity types: A string that can contain references to
                            other entity types (with or without aliases).'
                          type: string
                      type: object
                    type: array
                  excludedPhrases:
                    description: Collection of exceptional words and phrases that
                      shouldn't be matched. For example, if you have a size entity
                      type with entry giant(an adjective), you might consider adding
                      giants(a noun) as an exclusion. If the kind of entity type is
                      KIND_MAP, then the phrases specified by entities and excluded
                      phrases should be mutually exclusive.
                    items:
                      properties:
                        value:
                          description: The word or phrase to be excluded.
                          type: string
                      type: object
                    type: array
                  kind:
                    description: 'Indicates whether the entity type can be automatically
                      expanded. * KIND_MAP: Map entity types allow mapping of a group
                      of synonyms to a canonical value. * KIND_LIST: List entity types
                      contain a set of entries that do not map to canonical values.
                      However, list entity types can contain references to other entity
                      types (with or without aliases). * KIND_REGEXP: Regexp entity
                      types allow to specify regular expressions in entries values.
                      Possible values: ["KIND_MAP", "KIND_LIST", "KIND_REGEXP"]'
                    type: string
                  languageCode:
                    description: 'The language of the following fields in entityType:
                      EntityType.entities.value EntityType.entities.synonyms EntityType.excluded_phrases.value
                      If not specified, the agent''s default language is used. Many
                      languages are supported. Note: languages must be enabled in
                      the agent before they can be used.'
                    type: string
                  parent:
                    description: 'The agent to create a entity type for. Format: projects/<Project
                      ID>/locations/<Location ID>/agents/<Agent ID>.'
                    type: string
                  redact:
                    description: Indicates whether parameters of the entity type should
                      be redacted in log. If redaction is enabled, page parameters
                      and intent parameters referring to the entity type will be replaced
                      by parameter name when logging.
                    type: boolean
                required:
                - displayName
                - entities
                - kind
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EntityTypeStatus defines the observed state of EntityType.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  name:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
