apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: intents.dialogflowcx.gcp.jet.crossplane.io
spec:
  group: dialogflowcx.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Intent
    listKind: IntentList
    plural: intents
    singular: intent
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Intent is the Schema for the Intents API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntentSpec defines the desired state of Intent
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: 'Human readable description for better understanding
                      an intent like its scope, content, result etc. Maximum character
                      limit: 140 characters.'
                    type: string
                  displayName:
                    description: The human-readable name of the intent, unique within
                      the agent.
                    type: string
                  isFallback:
                    description: Indicates whether this is a fallback intent. Currently
                      only default fallback intent is allowed in the agent, which
                      is added upon agent creation. Adding training phrases to fallback
                      intent is useful in the case of requests that are mistakenly
                      matched, since training phrases assigned to fallback intents
                      act as negative examples that triggers no-match event.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: 'The key/value metadata to label an intent. Labels
                      can contain lowercase letters, digits and the symbols ''-''
                      and ''_''. International characters are allowed, including letters
                      from unicase alphabets. Keys must start with a letter. Keys
                      and values can be no longer than 63 characters and no more than
                      128 bytes. Prefix "sys-" is reserved for Dialogflow defined
                      labels. Currently allowed Dialogflow defined labels include:
                      * sys-head * sys-contextual The above labels do not require
                      value. "sys-head" means the intent is a head intent. "sys.contextual"
                      means the intent is a contextual intent. An object containing
                      a list of "key": value pairs. Example: { "name": "wrench", "mass":
                      "1.3kg", "count": "3" }.'
                    type: object
                  languageCode:
                    description: 'The language of the following fields in intent:
                      Intent.training_phrases.parts.text If not specified, the agent''s
                      default language is used. Many languages are supported. Note:
                      languages must be enabled in the agent before they can be used.'
                    type: string
                  parameters:
                    description: The collection of parameters associated with the
                      intent.
                    items:
                      properties:
                        entityType:
                          description: 'The entity type of the parameter. Format:
                            projects/-/locations/-/agents/-/entityTypes/<System Entity
                            Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date),
                            or projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/entityTypes/<Entity Type ID> for developer entity
                            types.'
                          type: string
                        id:
                          description: The unique identifier of the parameter. This
                            field is used by training phrases to annotate their parts.
                          type: string
                        isList:
                          description: Indicates whether the parameter represents
                            a list of values.
                          type: boolean
                        redact:
                          description: 'Indicates whether the parameter content should
                            be redacted in log. If redaction is enabled, the parameter
                            content will be replaced by parameter name during logging.
                            Note: the parameter content is subject to redaction if
                            either parameter level redaction or entity type level
                            redaction is enabled.'
                          type: boolean
                      required:
                      - entityType
                      - id
                      type: object
                    type: array
                  parent:
                    description: 'The agent to create an intent for. Format: projects/<Project
                      ID>/locations/<Location ID>/agents/<Agent ID>.'
                    type: string
                  priority:
                    description: The priority of this intent. Higher numbers represent
                      higher priorities. If the supplied value is unspecified or 0,
                      the service translates the value to 500,000, which corresponds
                      to the Normal priority in the console. If the supplied value
                      is negative, the intent is ignored in runtime detect intent
                      requests.
                    format: int64
                    type: integer
                  trainingPhrases:
                    description: The collection of training phrases the agent is trained
                      on to identify the intent.
                    items:
                      properties:
                        parts:
                          description: 'The ordered list of training phrase parts.
                            The parts are concatenated in order to form the training
                            phrase. Note: The API does not automatically annotate
                            training phrases like the Dialogflow Console does. Note:
                            Do not forget to include whitespace at part boundaries,
                            so the training phrase is well formatted when the parts
                            are concatenated. If the training phrase does not need
                            to be annotated with parameters, you just need a single
                            part with only the Part.text field set. If you want to
                            annotate the training phrase, you must create multiple
                            parts, where the fields of each part are populated in
                            one of two ways: Part.text is set to a part of the phrase
                            that has no parameters. Part.text is set to a part of
                            the phrase that you want to annotate, and the parameterId
                            field is set.'
                          items:
                            properties:
                              parameterId:
                                description: The parameter used to annotate this part
                                  of the training phrase. This field is required for
                                  annotated parts of the training phrase.
                                type: string
                              text:
                                description: The text for this part.
                                type: string
                            required:
                            - text
                            type: object
                          type: array
                        repeatCount:
                          description: Indicates how many times this example was added
                            to the intent.
                          format: int64
                          type: integer
                      required:
                      - parts
                      type: object
                    type: array
                required:
                - displayName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: IntentStatus defines the observed state of Intent.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  name:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
