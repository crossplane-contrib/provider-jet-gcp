---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: instances.redis.gcp.jet.crossplane.io
spec:
  group: redis.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the Instances API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  alternativeLocationId:
                    description: Only applicable to STANDARD_HA tier which protects
                      the instance against zonal failures by provisioning it across
                      two zones. If provided, it must be a different zone from the
                      one provided in [locationId].
                    type: string
                  authEnabled:
                    description: Optional. Indicates whether OSS Redis AUTH is enabled
                      for the instance. If set to "true" AUTH is enabled on the instance.
                      Default value is "false" meaning AUTH is disabled.
                    type: boolean
                  authorizedNetwork:
                    description: The full name of the Google Compute Engine network
                      to which the instance is connected. If left unspecified, the
                      default network will be used.
                    type: string
                  connectMode:
                    description: 'The connection mode of the Redis instance. Default
                      value: "DIRECT_PEERING" Possible values: ["DIRECT_PEERING",
                      "PRIVATE_SERVICE_ACCESS"]'
                    type: string
                  displayName:
                    description: An arbitrary and optional user-provided name for
                      the instance.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Resource labels to represent user provided metadata.
                    type: object
                  locationId:
                    description: The zone where the instance will be provisioned.
                      If not provided, the service will choose a zone for the instance.
                      For STANDARD_HA tier, instances will be created across two zones
                      for protection against zonal failures. If [alternativeLocationId]
                      is also provided, it must be different from [locationId].
                    type: string
                  maintenancePolicy:
                    description: Maintenance policy for an instance.
                    items:
                      properties:
                        description:
                          description: Optional. Description of what this policy is
                            for. Create/Update methods return INVALID_ARGUMENT if
                            the length is greater than 512.
                          type: string
                        weeklyMaintenanceWindow:
                          description: Optional. Maintenance window that is applied
                            to resources covered by this policy. Minimum 1. For the
                            current version, the maximum number of weekly_window is
                            expected to be one.
                          items:
                            properties:
                              day:
                                description: "Required. The day of week that maintenance
                                  updates occur. \n - DAY_OF_WEEK_UNSPECIFIED: The
                                  day of the week is unspecified. - MONDAY: Monday
                                  - TUESDAY: Tuesday - WEDNESDAY: Wednesday - THURSDAY:
                                  Thursday - FRIDAY: Friday - SATURDAY: Saturday -
                                  SUNDAY: Sunday Possible values: [\"DAY_OF_WEEK_UNSPECIFIED\",
                                  \"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\",
                                  \"FRIDAY\", \"SATURDAY\", \"SUNDAY\"]"
                                type: string
                              startTime:
                                description: Required. Start time of the window in
                                  UTC time.
                                items:
                                  properties:
                                    hours:
                                      description: Hours of day in 24 hour format.
                                        Should be from 0 to 23. An API may choose
                                        to allow the value "24:00:00" for scenarios
                                        like business closing time.
                                      type: number
                                    minutes:
                                      description: Minutes of hour of day. Must be
                                        from 0 to 59.
                                      type: number
                                    nanos:
                                      description: Fractions of seconds in nanoseconds.
                                        Must be from 0 to 999,999,999.
                                      type: number
                                    seconds:
                                      description: Seconds of minutes of the time.
                                        Must normally be from 0 to 59. An API may
                                        allow the value 60 if it allows leap-seconds.
                                      type: number
                                  type: object
                                type: array
                            required:
                            - day
                            - startTime
                            type: object
                          type: array
                      type: object
                    type: array
                  maintenanceSchedule:
                    description: Upcoming maintenance schedule.
                    items:
                      type: object
                    type: array
                  memorySizeGb:
                    description: Redis memory size in GiB.
                    type: number
                  project:
                    type: string
                  readReplicasMode:
                    description: 'Optional. Read replica mode. Can only be specified
                      when trying to create the instance. If not set, Memorystore
                      Redis backend will default to READ_REPLICAS_DISABLED. - READ_REPLICAS_DISABLED:
                      If disabled, read endpoint will not be provided and the instance
                      cannot scale up or down the number of replicas. - READ_REPLICAS_ENABLED:
                      If enabled, read endpoint will be provided and the instance
                      can scale up and down the number of replicas. Possible values:
                      ["READ_REPLICAS_DISABLED", "READ_REPLICAS_ENABLED"]'
                    type: string
                  redisConfigs:
                    additionalProperties:
                      type: string
                    description: 'Redis configuration parameters, according to http://redis.io/topics/config.
                      Please check Memorystore documentation for the list of supported
                      parameters: https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs'
                    type: object
                  redisVersion:
                    description: The version of Redis software. If not provided, latest
                      supported version will be used. Please check the API documentation
                      linked at the top for the latest valid values.
                    type: string
                  region:
                    description: The name of the Redis region of the instance.
                    type: string
                  replicaCount:
                    description: Optional. The number of replica nodes. The valid
                      range for the Standard Tier with read replicas enabled is [1-5]
                      and defaults to 2. If read replicas are not enabled for a Standard
                      Tier instance, the only valid value is 1 and the default is
                      1. The valid value for basic tier is 0 and the default is also
                      0.
                    type: number
                  reservedIpRange:
                    description: The CIDR range of internal addresses that are reserved
                      for this instance. If not provided, the service will choose
                      an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29.
                      Ranges must be unique and non-overlapping with existing subnets
                      in an authorized network.
                    type: string
                  tier:
                    description: "The service tier of the instance. Must be one of
                      these values: \n - BASIC: standalone instance - STANDARD_HA:
                      highly available primary/replica instances Default value: \"BASIC\"
                      Possible values: [\"BASIC\", \"STANDARD_HA\"]"
                    type: string
                  transitEncryptionMode:
                    description: "The TLS mode of the Redis instance, If not provided,
                      TLS is disabled for the instance. \n - SERVER_AUTHENTICATION:
                      Client to Server traffic encryption enabled with server authentication
                      Default value: \"DISABLED\" Possible values: [\"SERVER_AUTHENTICATION\",
                      \"DISABLED\"]"
                    type: string
                required:
                - memorySizeGb
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  createTime:
                    type: string
                  currentLocationId:
                    type: string
                  host:
                    type: string
                  id:
                    type: string
                  nodes:
                    items:
                      properties:
                        id:
                          type: string
                        zone:
                          type: string
                      type: object
                    type: array
                  persistenceIamIdentity:
                    type: string
                  port:
                    type: number
                  readEndpoint:
                    type: string
                  readEndpointPort:
                    type: number
                  serverCaCerts:
                    items:
                      properties:
                        cert:
                          type: string
                        createTime:
                          type: string
                        expireTime:
                          type: string
                        serialNumber:
                          type: string
                        sha1Fingerprint:
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
