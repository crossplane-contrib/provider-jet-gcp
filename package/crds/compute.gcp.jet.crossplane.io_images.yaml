---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: images.compute.gcp.jet.crossplane.io
spec:
  group: compute.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Image
    listKind: ImageList
    plural: images
    singular: image
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Image is the Schema for the Images API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ImageSpec defines the desired state of Image
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  diskSizeGb:
                    description: Size of the image when restored onto a persistent
                      disk (in GB).
                    type: number
                  family:
                    description: The name of the image family to which this image
                      belongs. You can create disks by specifying an image family
                      instead of a specific image name. The image family always returns
                      its latest image that is not deprecated. The name of the image
                      family must comply with RFC1035.
                    type: string
                  guestOsFeatures:
                    description: A list of features to enable on the guest operating
                      system. Applicable only for bootable images.
                    items:
                      properties:
                        type:
                          description: 'The type of supported feature. Read [Enabling
                            guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features)
                            to see a list of available options. Possible values: ["MULTI_IP_SUBNET",
                            "SECURE_BOOT", "SEV_CAPABLE", "UEFI_COMPATIBLE", "VIRTIO_SCSI_MULTIQUEUE",
                            "WINDOWS", "GVNIC"]'
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this Image.
                    type: object
                  licenses:
                    description: Any applicable license URI.
                    items:
                      type: string
                    type: array
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                  rawDisk:
                    description: The parameters of the raw disk image.
                    items:
                      properties:
                        containerType:
                          description: 'The format used to encode and transmit the
                            block device, which should be TAR. This is just a container
                            and transmission format and not a runtime format. Provided
                            by the client when the disk image is created. Default
                            value: "TAR" Possible values: ["TAR"]'
                          type: string
                        sha1:
                          description: An optional SHA1 checksum of the disk image
                            before unpackaging. This is provided by the client when
                            the disk image is created.
                          type: string
                        source:
                          description: The full Google Cloud Storage URL where disk
                            storage is stored You must provide either this property
                            or the sourceDisk property but not both.
                          type: string
                      required:
                      - source
                      type: object
                    type: array
                  sourceDisk:
                    description: The source disk to create this image based on. You
                      must provide either this property or the rawDisk.source property
                      but not both to create an image.
                    type: string
                  sourceImage:
                    description: "URL of the source image used to create this image.
                      In order to create an image, you must provide the full or partial
                      URL of one of the following: \n * The selfLink URL * This property
                      * The rawDisk.source URL * The sourceDisk URL"
                    type: string
                  sourceSnapshot:
                    description: "URL of the source snapshot used to create this image.
                      \n In order to create an image, you must provide the full or
                      partial URL of one of the following: \n * The selfLink URL *
                      This property * The sourceImage URL * The rawDisk.source URL
                      * The sourceDisk URL"
                    type: string
                required:
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ImageStatus defines the observed state of Image.
            properties:
              atProvider:
                properties:
                  archiveSizeBytes:
                    type: number
                  creationTimestamp:
                    type: string
                  id:
                    type: string
                  labelFingerprint:
                    type: string
                  selfLink:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
