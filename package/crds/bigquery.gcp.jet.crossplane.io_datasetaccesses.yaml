apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: datasetaccesses.bigquery.gcp.jet.crossplane.io
spec:
  group: bigquery.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: DatasetAccess
    listKind: DatasetAccessList
    plural: datasetaccesses
    singular: datasetaccess
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatasetAccess is the Schema for the DatasetAccesss API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatasetAccessSpec defines the desired state of DatasetAccess
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  datasetId:
                    description: A unique ID for this dataset, without the project
                      name. The ID must contain only letters (a-z, A-Z), numbers (0-9),
                      or underscores (_). The maximum length is 1,024 characters.
                    type: string
                  domain:
                    description: A domain to grant access to. Any users signed in
                      with the domain specified will be granted the specified access
                    type: string
                  groupByEmail:
                    description: An email address of a Google Group to grant access
                      to.
                    type: string
                  iamMember:
                    description: 'Some other type of member that appears in the IAM
                      Policy but isn''t a user, group, domain, or special group. For
                      example: ''allUsers'''
                    type: string
                  project:
                    type: string
                  role:
                    description: Describes the rights granted to the user specified
                      by the other member of the access object. Basic, predefined,
                      and custom roles are supported. Predefined roles that have equivalent
                      basic roles are swapped by the API to their basic counterparts,
                      and will show a diff post-create. See [official docs](https://cloud.google.com/bigquery/docs/access-control).
                    type: string
                  specialGroup:
                    description: "A special group to grant access to. Possible values
                      include: \n * 'projectOwners': Owners of the enclosing project.
                      \n * 'projectReaders': Readers of the enclosing project. \n
                      * 'projectWriters': Writers of the enclosing project. \n * 'allAuthenticatedUsers':
                      All authenticated BigQuery users."
                    type: string
                  userByEmail:
                    description: 'An email address of a user to grant access to. For
                      example: fred@example.com'
                    type: string
                  view:
                    description: A view from a different dataset to grant access to.
                      Queries executed against that view will have read access to
                      tables in this dataset. The role field is not required when
                      this field is set. If that view is updated by any user, access
                      to the view needs to be granted again via an update operation.
                    items:
                      properties:
                        datasetId:
                          description: The ID of the dataset containing this table.
                          type: string
                        projectId:
                          description: The ID of the project containing this table.
                          type: string
                        tableId:
                          description: The ID of the table. The ID must contain only
                            letters (a-z, A-Z), numbers (0-9), or underscores (_).
                            The maximum length is 1,024 characters.
                          type: string
                      required:
                      - datasetId
                      - projectId
                      - tableId
                      type: object
                    type: array
                required:
                - datasetId
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DatasetAccessStatus defines the observed state of DatasetAccess.
            properties:
              atProvider:
                properties:
                  apiUpdatedMember:
                    type: boolean
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
