---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: backendbuckets.compute.gcp.jet.crossplane.io
spec:
  group: compute.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: BackendBucket
    listKind: BackendBucketList
    plural: backendbuckets
    singular: backendbucket
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackendBucket is the Schema for the BackendBuckets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackendBucketSpec defines the desired state of BackendBucket
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bucketName:
                    description: Cloud Storage bucket name.
                    type: string
                  cdnPolicy:
                    description: Cloud CDN configuration for this Backend Bucket.
                    items:
                      properties:
                        cacheMode:
                          description: 'Specifies the cache setting for all responses
                            from this backend. The possible values are: USE_ORIGIN_HEADERS,
                            FORCE_CACHE_ALL and CACHE_ALL_STATIC Possible values:
                            ["USE_ORIGIN_HEADERS", "FORCE_CACHE_ALL", "CACHE_ALL_STATIC"]'
                          type: string
                        clientTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        defaultTtl:
                          description: Specifies the default TTL for cached content
                            served by this origin for responses that do not have an
                            existing valid TTL (max-age or s-max-age).
                          type: number
                        maxTtl:
                          description: Specifies the maximum allowed TTL for cached
                            content served by this origin.
                          type: number
                        negativeCaching:
                          description: Negative caching allows per-status code TTLs
                            to be set, in order to apply fine-grained caching for
                            common errors or redirects.
                          type: boolean
                        negativeCachingPolicy:
                          description: Sets a cache TTL for the specified HTTP status
                            code. negativeCaching must be enabled to configure negativeCachingPolicy.
                            Omitting the policy and leaving negativeCaching enabled
                            will use Cloud CDN's default cache TTLs.
                          items:
                            properties:
                              code:
                                description: The HTTP status code to define a TTL
                                  against. Only HTTP status codes 300, 301, 308, 404,
                                  405, 410, 421, 451 and 501 can be specified as values,
                                  and you cannot specify a status code more than once.
                                type: number
                              ttl:
                                description: The TTL (in seconds) for which to cache
                                  responses with the corresponding status code. The
                                  maximum allowed value is 1800s (30 minutes), noting
                                  that infrequently accessed objects may be evicted
                                  from the cache before the defined TTL.
                                type: number
                            type: object
                          type: array
                        serveWhileStale:
                          description: Serve existing content from the cache (if available)
                            when revalidating content with the origin, or when an
                            error is encountered when refreshing the cache.
                          type: number
                        signedUrlCacheMaxAgeSec:
                          description: 'Maximum number of seconds the response to
                            a signed URL request will be considered fresh. After this
                            time period, the response will be revalidated before being
                            served. When serving responses to signed URL requests,
                            Cloud CDN will internally behave as though all responses
                            from this backend had a "Cache-Control: public, max-age=[TTL]"
                            header, regardless of any existing Cache-Control header.
                            The actual headers served in responses will not be altered.'
                          type: number
                      type: object
                    type: array
                  customResponseHeaders:
                    description: Headers that the HTTP/S load balancer should add
                      to proxied responses.
                    items:
                      type: string
                    type: array
                  description:
                    description: An optional textual description of the resource;
                      provided by the client when the resource is created.
                    type: string
                  edgeSecurityPolicy:
                    description: The security policy associated with this backend
                      bucket.
                    type: string
                  enableCdn:
                    description: If true, enable Cloud CDN for this BackendBucket.
                    type: boolean
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035.  Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  project:
                    type: string
                required:
                - bucketName
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BackendBucketStatus defines the observed state of BackendBucket.
            properties:
              atProvider:
                properties:
                  creationTimestamp:
                    type: string
                  id:
                    type: string
                  selfLink:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
