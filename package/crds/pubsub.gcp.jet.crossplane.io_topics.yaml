apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: topics.pubsub.gcp.jet.crossplane.io
spec:
  group: pubsub.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Topic
    listKind: TopicList
    plural: topics
    singular: topic
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Topic is the Schema for the Topics API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TopicSpec defines the desired state of Topic
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  kmsKeyName:
                    description: The resource name of the Cloud KMS CryptoKey to be
                      used to protect access to messages published on this topic.
                      Your project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com')
                      must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use
                      this feature. The expected format is 'projects/*/locations/*/keyRings/*/cryptoKeys/*'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Topic.
                    type: object
                  messageStoragePolicy:
                    description: Policy constraining the set of Google Cloud Platform
                      regions where messages published to the topic may be stored.
                      If not present, then no constraints are in effect.
                    items:
                      properties:
                        allowedPersistenceRegions:
                          description: A list of IDs of GCP regions where messages
                            that are published to the topic may be persisted in storage.
                            Messages published by publishers running in non-allowed
                            GCP regions (or running outside of GCP altogether) will
                            be routed for storage in one of the allowed regions. An
                            empty list means that no regions are allowed, and is not
                            a valid configuration.
                          items:
                            type: string
                          type: array
                      required:
                      - allowedPersistenceRegions
                      type: object
                    type: array
                  name:
                    description: Name of the topic.
                    type: string
                  project:
                    type: string
                  schemaSettings:
                    description: Settings for validating messages published against
                      a schema.
                    items:
                      properties:
                        encoding:
                          description: 'The encoding of messages validated against
                            schema. Default value: "ENCODING_UNSPECIFIED" Possible
                            values: ["ENCODING_UNSPECIFIED", "JSON", "BINARY"]'
                          type: string
                        schema:
                          description: The name of the schema that messages published
                            should be validated against. Format is projects/{project}/schemas/{schema}.
                            The value of this field will be _deleted-schema_ if the
                            schema has been deleted.
                          type: string
                      required:
                      - schema
                      type: object
                    type: array
                required:
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TopicStatus defines the observed state of Topic.
            properties:
              atProvider:
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
