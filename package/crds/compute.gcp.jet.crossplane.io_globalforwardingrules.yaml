---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: globalforwardingrules.compute.gcp.jet.crossplane.io
spec:
  group: compute.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: GlobalForwardingRule
    listKind: GlobalForwardingRuleList
    plural: globalforwardingrules
    singular: globalforwardingrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GlobalForwardingRule is the Schema for the GlobalForwardingRules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GlobalForwardingRuleSpec defines the desired state of GlobalForwardingRule
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  ipAddress:
                    description: 'IP address that this forwarding rule serves. When
                      a client sends traffic to this IP address, the forwarding rule
                      directs the traffic to the target that you specify in the forwarding
                      rule. If you don''t specify a reserved IP address, an ephemeral
                      IP address is assigned. Methods for specifying an IP address:
                      * IPv4 dotted decimal, as in `100.1.2.3` * Full URL, as in `https://www.googleapis.com/compute/v1/projects/project_id/regions/region/addresses/address-name`
                      * Partial URL or by name, as in: * `projects/project_id/regions/region/addresses/address-name`
                      * `regions/region/addresses/address-name` * `global/addresses/address-name`
                      * `address-name` The loadBalancingScheme and the forwarding
                      rule''s target determine the type of IP address that you can
                      use. For detailed information, refer to [IP address specifications](/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).'
                    type: string
                  ipProtocol:
                    description: The IP protocol to which this rule applies. For protocol
                      forwarding, valid options are `TCP`, `UDP`, `ESP`, `AH`, `SCTP`
                      or `ICMP`. For Internal TCP/UDP Load Balancing, the load balancing
                      scheme is `INTERNAL`, and one of `TCP` or `UDP` are valid. For
                      Traffic Director, the load balancing scheme is `INTERNAL_SELF_MANAGED`,
                      and only `TCP`is valid. For Internal HTTP(S) Load Balancing,
                      the load balancing scheme is `INTERNAL_MANAGED`, and only `TCP`
                      is valid. For HTTP(S), SSL Proxy, and TCP Proxy Load Balancing,
                      the load balancing scheme is `EXTERNAL` and only `TCP` is valid.
                      For Network TCP/UDP Load Balancing, the load balancing scheme
                      is `EXTERNAL`, and one of `TCP` or `UDP` is valid.
                    type: string
                  ipVersion:
                    description: 'The IP Version that will be used by this forwarding
                      rule. Valid options are `IPV4` or `IPV6`. This can only be specified
                      for an external global forwarding rule. Possible values: UNSPECIFIED_VERSION,
                      IPV4, IPV6'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this rule.
                    type: object
                  loadBalancingScheme:
                    description: "Specifies the forwarding rule type. \n *   `EXTERNAL`
                      is used for: *   Classic Cloud VPN gateways *   Protocol forwarding
                      to VMs from an external IP address *   The following load balancers:
                      HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP *   `INTERNAL`
                      is used for: *   Protocol forwarding to VMs from an internal
                      IP address *   Internal TCP/UDP load balancers *   `INTERNAL_MANAGED`
                      is used for: *   Internal HTTP(S) load balancers *   `INTERNAL_SELF_MANAGED`
                      is used for: *   Traffic Director *   `EXTERNAL_MANAGED` is
                      used for: *   Global external HTTP(S) load balancers \n For
                      more information about forwarding rules, refer to [Forwarding
                      rule concepts](/load-balancing/docs/forwarding-rule-concepts).
                      Possible values: INVALID, INTERNAL, INTERNAL_MANAGED, INTERNAL_SELF_MANAGED,
                      EXTERNAL, EXTERNAL_MANAGED"
                    type: string
                  metadataFilters:
                    description: "Opaque filter criteria used by Loadbalancer to restrict
                      routing configuration to a limited set of [xDS](https://github.com/envoyproxy/data-plane-api/blob/master/XDS_PROTOCOL.md)
                      compliant clients. In their xDS requests to Loadbalancer, xDS
                      clients present [node metadata](https://github.com/envoyproxy/data-plane-api/search?q=%22message+Node%22+in%3A%2Fenvoy%2Fapi%2Fv2%2Fcore%2Fbase.proto&).
                      If a match takes place, the relevant configuration is made available
                      to those proxies. Otherwise, all the resources (e.g. `TargetHttpProxy`,
                      `UrlMap`) referenced by the `ForwardingRule` will not be visible
                      to those proxies. \n For each `metadataFilter` in this list,
                      if its `filterMatchCriteria` is set to MATCH_ANY, at least one
                      of the `filterLabel`s must match the corresponding label provided
                      in the metadata. If its `filterMatchCriteria` is set to MATCH_ALL,
                      then all of its `filterLabel`s must match with corresponding
                      labels provided in the metadata. \n `metadataFilters` specified
                      here will be applifed before those specified in the `UrlMap`
                      that this `ForwardingRule` references. \n `metadataFilters`
                      only applies to Loadbalancers that have their loadBalancingScheme
                      set to `INTERNAL_SELF_MANAGED`."
                    items:
                      properties:
                        filterLabels:
                          description: "The list of label value pairs that must match
                            labels in the provided metadata based on `filterMatchCriteria`
                            \n This list must not be empty and can have at the most
                            64 entries."
                          items:
                            properties:
                              name:
                                description: "Name of metadata label. \n The name
                                  can have a maximum length of 1024 characters and
                                  must be at least 1 character long."
                                type: string
                              value:
                                description: "The value of the label must match the
                                  specified value. \n value can have a maximum length
                                  of 1024 characters."
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        filterMatchCriteria:
                          description: "Specifies how individual `filterLabel` matches
                            within the list of `filterLabel`s contribute towards the
                            overall `metadataFilter` match. \n Supported values are:
                            \n *   MATCH_ANY: At least one of the `filterLabels` must
                            have a matching label in the provided metadata. *   MATCH_ALL:
                            All `filterLabels` must have matching labels in the provided
                            metadata. Possible values: NOT_SET, MATCH_ALL, MATCH_ANY"
                          type: string
                      required:
                      - filterLabels
                      - filterMatchCriteria
                      type: object
                    type: array
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).
                      Specifically, the name must be 1-63 characters long and match
                      the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
                      the first character must be a lowercase letter, and all following
                      characters must be a dash, lowercase letter, or digit, except
                      the last character, which cannot be a dash.
                    type: string
                  network:
                    description: This field is not used for external load balancing.
                      For `INTERNAL` and `INTERNAL_SELF_MANAGED` load balancing, this
                      field identifies the network that the load balanced IP should
                      belong to for this Forwarding Rule. If this field is not specified,
                      the default network will be used.
                    type: string
                  portRange:
                    description: "When the load balancing scheme is `EXTERNAL`, `INTERNAL_SELF_MANAGED`
                      and `INTERNAL_MANAGED`, you can specify a `port_range`. Use
                      with a forwarding rule that points to a target proxy or a target
                      pool. Do not use with a forwarding rule that points to a backend
                      service. This field is used along with the `target` field for
                      TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy,
                      TargetVpnGateway, TargetPool, TargetInstance. Applicable only
                      when `IPProtocol` is `TCP`, `UDP`, or `SCTP`, only packets addressed
                      to ports in the specified range will be forwarded to `target`.
                      Forwarding rules with the same `[IPAddress, IPProtocol]` pair
                      must have disjoint port ranges. Some types of forwarding target
                      have constraints on the acceptable ports: \n *   TargetHttpProxy:
                      80, 8080 *   TargetHttpsProxy: 443 *   TargetTcpProxy: 25, 43,
                      110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222
                      *   TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700,
                      993, 995, 1688, 1883, 5222 *   TargetVpnGateway: 500, 4500 \n
                      @pattern: d+(?:-d+)?"
                    type: string
                  project:
                    description: The project this resource belongs in.
                    type: string
                  target:
                    description: The URL of the target resource to receive the matched
                      traffic. For regional forwarding rules, this target must live
                      in the same region as the forwarding rule. For global forwarding
                      rules, this target must be a global load balancing resource.
                      The forwarded traffic must be of a type appropriate to the target
                      object. For `INTERNAL_SELF_MANAGED` load balancing, only `targetHttpProxy`
                      is valid, not `targetHttpsProxy`.
                    type: string
                required:
                - name
                - target
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: GlobalForwardingRuleStatus defines the observed state of
              GlobalForwardingRule.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  labelFingerprint:
                    type: string
                  selfLink:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
