---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: agents.dialogflow.gcp.jet.crossplane.io
spec:
  group: dialogflow.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Agent
    listKind: AgentList
    plural: agents
    singular: agent
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Agent is the Schema for the Agents API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AgentSpec defines the desired state of Agent
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  apiVersion:
                    description: 'API version displayed in Dialogflow console. If
                      not specified, V2 API is assumed. Clients are free to query
                      different service endpoints for different API versions. However,
                      bots connectors and webhook calls will follow the specified
                      API version. * API_VERSION_V1: Legacy V1 API. * API_VERSION_V2:
                      V2 API. * API_VERSION_V2_BETA_1: V2beta1 API. Possible values:
                      ["API_VERSION_V1", "API_VERSION_V2", "API_VERSION_V2_BETA_1"]'
                    type: string
                  avatarUri:
                    description: The URI of the agent's avatar, which are used throughout
                      the Dialogflow console. When an image URL is entered into this
                      field, the Dialogflow will save the image in the backend. The
                      address of the backend image returned from the API will be shown
                      in the [avatarUriBackend] field.
                    type: string
                  classificationThreshold:
                    description: To filter out false positive results and still get
                      variety in matched natural language inputs for your agent, you
                      can tune the machine learning classification threshold. If the
                      returned score value is less than the threshold value, then
                      a fallback intent will be triggered or, if there are no fallback
                      intents defined, no intent will be triggered. The score values
                      range from 0.0 (completely uncertain) to 1.0 (completely certain).
                      If set to 0.0, the default of 0.3 is used.
                    type: number
                  defaultLanguageCode:
                    description: The default language of the agent as a language tag.
                      [See Language Support](https://cloud.google.com/dialogflow/docs/reference/language)
                      for a list of the currently supported language codes. This field
                      cannot be updated after creation.
                    type: string
                  description:
                    description: The description of this agent. The maximum length
                      is 500 characters. If exceeded, the request is rejected.
                    type: string
                  displayName:
                    description: The name of this agent.
                    type: string
                  enableLogging:
                    description: Determines whether this agent should log conversation
                      queries.
                    type: boolean
                  matchMode:
                    description: 'Determines how intents are detected from user queries.
                      * MATCH_MODE_HYBRID: Best for agents with a small number of
                      examples in intents and/or wide use of templates syntax and
                      composite entities. * MATCH_MODE_ML_ONLY: Can be used for agents
                      with a large number of examples in intents, especially the ones
                      using @sys.any or very large developer entities. Possible values:
                      ["MATCH_MODE_HYBRID", "MATCH_MODE_ML_ONLY"]'
                    type: string
                  project:
                    type: string
                  supportedLanguageCodes:
                    description: The list of all languages supported by this agent
                      (except for the defaultLanguageCode).
                    items:
                      type: string
                    type: array
                  tier:
                    description: 'The agent tier. If not specified, TIER_STANDARD
                      is assumed. * TIER_STANDARD: Standard tier. * TIER_ENTERPRISE:
                      Enterprise tier (Essentials). * TIER_ENTERPRISE_PLUS: Enterprise
                      tier (Plus). NOTE: Due to consistency issues, the provider will
                      not read this field from the API. Drift is possible between
                      the Terraform state and Dialogflow if the agent tier is changed
                      outside of Terraform. Possible values: ["TIER_STANDARD", "TIER_ENTERPRISE",
                      "TIER_ENTERPRISE_PLUS"]'
                    type: string
                  timeZone:
                    description: The time zone of this agent from the [time zone database](https://www.iana.org/time-zones),
                      e.g., America/New_York, Europe/Paris.
                    type: string
                required:
                - defaultLanguageCode
                - displayName
                - timeZone
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AgentStatus defines the observed state of Agent.
            properties:
              atProvider:
                properties:
                  avatarUriBackend:
                    type: string
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
