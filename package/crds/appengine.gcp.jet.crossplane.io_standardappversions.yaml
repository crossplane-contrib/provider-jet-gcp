apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: standardappversions.appengine.gcp.jet.crossplane.io
spec:
  group: appengine.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: StandardAppVersion
    listKind: StandardAppVersionList
    plural: standardappversions
    singular: standardappversion
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StandardAppVersion is the Schema for the StandardAppVersions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StandardAppVersionSpec defines the desired state of StandardAppVersion
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  automaticScaling:
                    description: Automatic scaling is based on request rate, response
                      latencies, and other application metrics.
                    items:
                      properties:
                        maxConcurrentRequests:
                          description: "Number of concurrent requests an automatic
                            scaling instance can accept before the scheduler spawns
                            a new instance. \n Defaults to a runtime-specific value."
                          format: int64
                          type: integer
                        maxIdleInstances:
                          description: Maximum number of idle instances that should
                            be maintained for this version.
                          format: int64
                          type: integer
                        maxPendingLatency:
                          description: 'Maximum amount of time that a request should
                            wait in the pending queue before starting a new instance
                            to handle it. A duration in seconds with up to nine fractional
                            digits, terminated by ''s''. Example: "3.5s".'
                          type: string
                        minIdleInstances:
                          description: Minimum number of idle instances that should
                            be maintained for this version. Only applicable for the
                            default version of a service.
                          format: int64
                          type: integer
                        minPendingLatency:
                          description: 'Minimum amount of time a request should wait
                            in the pending queue before starting a new instance to
                            handle it. A duration in seconds with up to nine fractional
                            digits, terminated by ''s''. Example: "3.5s".'
                          type: string
                        standardSchedulerSettings:
                          description: Scheduler settings for standard environment.
                          items:
                            properties:
                              maxInstances:
                                description: Maximum number of instances to run for
                                  this version. Set to zero to disable maxInstances
                                  configuration.
                                format: int64
                                type: integer
                              minInstances:
                                description: Minimum number of instances to run for
                                  this version. Set to zero to disable minInstances
                                  configuration.
                                format: int64
                                type: integer
                              targetCpuUtilization:
                                description: Target CPU utilization ratio to maintain
                                  when scaling. Should be a value in the range [0.50,
                                  0.95], zero, or a negative value.
                                type: number
                              targetThroughputUtilization:
                                description: Target throughput utilization ratio to
                                  maintain when scaling. Should be a value in the
                                  range [0.50, 0.95], zero, or a negative value.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  basicScaling:
                    description: Basic scaling creates instances when your application
                      receives requests. Each instance will be shut down when the
                      application becomes idle. Basic scaling is ideal for work that
                      is intermittent or driven by user activity.
                    items:
                      properties:
                        idleTimeout:
                          description: 'Duration of time after the last request that
                            an instance must wait before the instance is shut down.
                            A duration in seconds with up to nine fractional digits,
                            terminated by ''s''. Example: "3.5s". Defaults to 900s.'
                          type: string
                        maxInstances:
                          description: Maximum number of instances to create for this
                            version. Must be in the range [1.0, 200.0].
                          format: int64
                          type: integer
                      required:
                      - maxInstances
                      type: object
                    type: array
                  deleteServiceOnDestroy:
                    type: boolean
                  deployment:
                    description: Code and application artifacts that make up this
                      version.
                    items:
                      properties:
                        files:
                          description: Manifest of the files stored in Google Cloud
                            Storage that are included as part of this version. All
                            files must be readable using the credentials supplied
                            with this call.
                          items:
                            properties:
                              name:
                                type: string
                              sha1Sum:
                                description: SHA1 checksum of the file
                                type: string
                              sourceUrl:
                                description: Source URL
                                type: string
                            required:
                            - name
                            - sourceUrl
                            type: object
                          type: array
                        zip:
                          description: Zip File
                          items:
                            properties:
                              filesCount:
                                description: files count
                                format: int64
                                type: integer
                              sourceUrl:
                                description: Source URL
                                type: string
                            required:
                            - sourceUrl
                            type: object
                          type: array
                      type: object
                    type: array
                  entrypoint:
                    description: The entrypoint for the application.
                    items:
                      properties:
                        shell:
                          description: The format should be a shell command that can
                            be fed to bash -c.
                          type: string
                      required:
                      - shell
                      type: object
                    type: array
                  envVariables:
                    additionalProperties:
                      type: string
                    description: Environment variables available to the application.
                    type: object
                  handlers:
                    description: An ordered list of URL-matching patterns that should
                      be applied to incoming requests. The first matching URL handles
                      the request and other request handlers are not attempted.
                    items:
                      properties:
                        authFailAction:
                          description: 'Actions to take when the user is not logged
                            in. Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]'
                          type: string
                        login:
                          description: 'Methods to restrict access to a URL based
                            on login status. Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN",
                            "LOGIN_REQUIRED"]'
                          type: string
                        redirectHttpResponseCode:
                          description: '30x code to use when performing redirects
                            for the secure field. Possible values: ["REDIRECT_HTTP_RESPONSE_CODE_301",
                            "REDIRECT_HTTP_RESPONSE_CODE_302", "REDIRECT_HTTP_RESPONSE_CODE_303",
                            "REDIRECT_HTTP_RESPONSE_CODE_307"]'
                          type: string
                        script:
                          description: Executes a script to handle the requests that
                            match this URL pattern. Only the auto value is supported
                            for Node.js in the App Engine standard environment, for
                            example "script:" "auto".
                          items:
                            properties:
                              scriptPath:
                                description: Path to the script from the application
                                  root directory.
                                type: string
                            required:
                            - scriptPath
                            type: object
                          type: array
                        securityLevel:
                          description: 'Security (HTTPS) enforcement for this URL.
                            Possible values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL",
                            "SECURE_ALWAYS"]'
                          type: string
                        staticFiles:
                          description: Files served directly to the user for a given
                            URL, such as images, CSS stylesheets, or JavaScript source
                            files. Static file handlers describe which files in the
                            application directory are static files, and which URLs
                            serve them.
                          items:
                            properties:
                              applicationReadable:
                                description: Whether files should also be uploaded
                                  as code data. By default, files declared in static
                                  file handlers are uploaded as static data and are
                                  only served to end users; they cannot be read by
                                  the application. If enabled, uploads are charged
                                  against both your code and static data storage resource
                                  quotas.
                                type: boolean
                              expiration:
                                description: Time a static file served by this handler
                                  should be cached by web proxies and browsers. A
                                  duration in seconds with up to nine fractional digits,
                                  terminated by 's'. Example "3.5s".
                                type: string
                              httpHeaders:
                                additionalProperties:
                                  type: string
                                description: HTTP headers to use for all responses
                                  from these URLs. An object containing a list of
                                  "key:value" value pairs.".
                                type: object
                              mimeType:
                                description: MIME type used to serve all files served
                                  by this handler. Defaults to file-specific MIME
                                  types, which are derived from each file's filename
                                  extension.
                                type: string
                              path:
                                description: Path to the static files matched by the
                                  URL pattern, from the application root directory.
                                  The path can refer to text matched in groupings
                                  in the URL pattern.
                                type: string
                              requireMatchingFile:
                                description: Whether this handler should match the
                                  request if the file referenced by the handler does
                                  not exist.
                                type: boolean
                              uploadPathRegex:
                                description: Regular expression that matches the file
                                  paths for all files that should be referenced by
                                  this handler.
                                type: string
                            type: object
                          type: array
                        urlRegex:
                          description: URL prefix. Uses regular expression syntax,
                            which means regexp special characters must be escaped,
                            but should not contain groupings. All URLs that begin
                            with this prefix are handled by this handler, using the
                            portion of the URL after the prefix as part of the file
                            path.
                          type: string
                      type: object
                    type: array
                  inboundServices:
                    description: 'A list of the types of messages that this application
                      is able to receive. Possible values: ["INBOUND_SERVICE_MAIL",
                      "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR",
                      "INBOUND_SERVICE_XMPP_MESSAGE", "INBOUND_SERVICE_XMPP_SUBSCRIBE",
                      "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE",
                      "INBOUND_SERVICE_WARMUP"]'
                    items:
                      type: string
                    type: array
                  instanceClass:
                    description: 'Instance class that is used to run this version.
                      Valid values are AutomaticScaling: F1, F2, F4, F4_1G BasicScaling
                      or ManualScaling: B1, B2, B4, B4_1G, B8 Defaults to F1 for AutomaticScaling
                      and B2 for ManualScaling and BasicScaling. If no scaling is
                      specified, AutomaticScaling is chosen.'
                    type: string
                  libraries:
                    description: Configuration for third-party Python runtime libraries
                      that are required by the application.
                    items:
                      properties:
                        name:
                          description: Name of the library. Example "django".
                          type: string
                        version:
                          description: Version of the library to select, or "latest".
                          type: string
                      type: object
                    type: array
                  manualScaling:
                    description: A service with manual scaling runs continuously,
                      allowing you to perform complex initialization and rely on the
                      state of its memory over time.
                    items:
                      properties:
                        instances:
                          description: "Number of instances to assign to the service
                            at the start. \n **Note:** When managing the number of
                            instances at runtime through the App Engine Admin API
                            or the (now deprecated) Python 2 Modules API set_num_instances()
                            you must use 'lifecycle.ignore_changes = [\"manual_scaling\"[0].instances]'
                            to prevent drift detection."
                          format: int64
                          type: integer
                      required:
                      - instances
                      type: object
                    type: array
                  noopOnDestroy:
                    type: boolean
                  project:
                    type: string
                  runtime:
                    description: Desired runtime. Example python27.
                    type: string
                  runtimeApiVersion:
                    description: The version of the API in the given runtime environment.
                      Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
                    type: string
                  service:
                    description: AppEngine service resource
                    type: string
                  threadsafe:
                    description: Whether multiple requests can be dispatched to this
                      version at once.
                    type: boolean
                  versionId:
                    description: Relative name of the version within the service.
                      For example, 'v1'. Version names can contain only lowercase
                      letters, numbers, or hyphens. Reserved names,"default", "latest",
                      and any name with the prefix "ah-".
                    type: string
                  vpcAccessConnector:
                    description: Enables VPC connectivity for standard apps.
                    items:
                      properties:
                        name:
                          description: Full Serverless VPC Access Connector name e.g.
                            /projects/my-project/locations/us-central1/connectors/c1.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                required:
                - deployment
                - entrypoint
                - runtime
                - service
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: StandardAppVersionStatus defines the observed state of StandardAppVersion.
            properties:
              atProvider:
                properties:
                  name:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
