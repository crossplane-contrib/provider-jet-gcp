apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: accesslevelconditions.accesscontextmanager.gcp.jet.crossplane.io
spec:
  group: accesscontextmanager.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: AccessLevelCondition
    listKind: AccessLevelConditionList
    plural: accesslevelconditions
    singular: accesslevelcondition
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AccessLevelCondition is the Schema for the AccessLevelConditions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AccessLevelConditionSpec defines the desired state of AccessLevelCondition
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessLevel:
                    description: The name of the Access Level to add this condition
                      to.
                    type: string
                  devicePolicy:
                    description: Device specific restrictions, all restrictions must
                      hold for the Condition to be true. If not specified, all devices
                      are allowed.
                    items:
                      properties:
                        allowedDeviceManagementLevels:
                          description: 'A list of allowed device management levels.
                            An empty list allows all management levels. Possible values:
                            ["MANAGEMENT_UNSPECIFIED", "NONE", "BASIC", "COMPLETE"]'
                          items:
                            type: string
                          type: array
                        allowedEncryptionStatuses:
                          description: 'A list of allowed encryptions statuses. An
                            empty list allows all statuses. Possible values: ["ENCRYPTION_UNSPECIFIED",
                            "ENCRYPTION_UNSUPPORTED", "UNENCRYPTED", "ENCRYPTED"]'
                          items:
                            type: string
                          type: array
                        osConstraints:
                          description: A list of allowed OS versions. An empty list
                            allows all types and all versions.
                          items:
                            properties:
                              minimumVersion:
                                description: 'The minimum allowed OS version. If not
                                  set, any version of this OS satisfies the constraint.
                                  Format: "major.minor.patch" such as "10.5.301",
                                  "9.2.1".'
                                type: string
                              osType:
                                description: 'The operating system type of the device.
                                  Possible values: ["OS_UNSPECIFIED", "DESKTOP_MAC",
                                  "DESKTOP_WINDOWS", "DESKTOP_LINUX", "DESKTOP_CHROME_OS",
                                  "ANDROID", "IOS"]'
                                type: string
                            required:
                            - osType
                            type: object
                          type: array
                        requireAdminApproval:
                          description: Whether the device needs to be approved by
                            the customer admin.
                          type: boolean
                        requireCorpOwned:
                          description: Whether the device needs to be corp owned.
                          type: boolean
                        requireScreenLock:
                          description: Whether or not screenlock is required for the
                            DevicePolicy to be true. Defaults to false.
                          type: boolean
                      type: object
                    type: array
                  ipSubnetworks:
                    description: A list of CIDR block IP subnetwork specification.
                      May be IPv4 or IPv6. Note that for a CIDR IP address block,
                      the specified IP address portion must be properly truncated
                      (i.e. all the host bits must be zero) or the input is considered
                      malformed. For example, "192.0.2.0/24" is accepted but "192.0.2.1/24"
                      is not. Similarly, for IPv6, "2001:db8::/32" is accepted whereas
                      "2001:db8::1/32" is not. The originating IP of a request must
                      be in one of the listed subnets in order for this Condition
                      to be true. If empty, all IP addresses are allowed.
                    items:
                      type: string
                    type: array
                  members:
                    description: "An allowed list of members (users, service accounts).
                      Using groups is not supported yet. \n The signed-in user originating
                      the request must be a part of one of the provided members. If
                      not specified, a request may come from any user (logged in/not
                      logged in, not present in any groups, etc.). Formats: 'user:{emailid}',
                      'serviceAccount:{emailid}'"
                    items:
                      type: string
                    type: array
                  negate:
                    description: Whether to negate the Condition. If true, the Condition
                      becomes a NAND over its non-empty fields, each field must be
                      false for the Condition overall to be satisfied. Defaults to
                      false.
                    type: boolean
                  regions:
                    description: 'The request must originate from one of the provided
                      countries/regions. Format: A valid ISO 3166-1 alpha-2 code.'
                    items:
                      type: string
                    type: array
                  requiredAccessLevels:
                    description: 'A list of other access levels defined in the same
                      Policy, referenced by resource name. Referencing an AccessLevel
                      which does not exist is an error. All access levels listed must
                      be granted for the Condition to be true. Format: accessPolicies/{policy_id}/accessLevels/{short_name}'
                    items:
                      type: string
                    type: array
                required:
                - accessLevel
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AccessLevelConditionStatus defines the observed state of
              AccessLevelCondition.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
