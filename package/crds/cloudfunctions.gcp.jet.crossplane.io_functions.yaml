apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: functions.cloudfunctions.gcp.jet.crossplane.io
spec:
  group: cloudfunctions.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Function is the Schema for the Functions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  availableMemoryMb:
                    description: Memory (in MB), available to the function. Default
                      value is 256. Possible values include 128, 256, 512, 1024, etc.
                    format: int64
                    type: integer
                  buildEnvironmentVariables:
                    additionalProperties:
                      type: string
                    description: A set of key/value environment variable pairs available
                      during build time.
                    type: object
                  description:
                    description: Description of the function.
                    type: string
                  entryPoint:
                    description: Name of the function that will be executed when the
                      Google Cloud Function is triggered.
                    type: string
                  environmentVariables:
                    additionalProperties:
                      type: string
                    description: A set of key/value environment variable pairs to
                      assign to the function.
                    type: object
                  eventTrigger:
                    description: A source that fires events in response to a condition
                      in another service. Cannot be used with trigger_http.
                    items:
                      properties:
                        eventType:
                          description: 'The type of event to observe. For example:
                            "google.storage.object.finalize". See the documentation
                            on calling Cloud Functions for a full reference of accepted
                            triggers.'
                          type: string
                        failurePolicy:
                          description: Specifies policy for failed executions
                          items:
                            properties:
                              retry:
                                description: Whether the function should be retried
                                  on failure. Defaults to false.
                                type: boolean
                            required:
                            - retry
                            type: object
                          type: array
                        resource:
                          description: The name or partial URI of the resource from
                            which to observe events. For example, "myBucket" or "projects/my-project/topics/my-topic"
                          type: string
                      required:
                      - eventType
                      - resource
                      type: object
                    type: array
                  httpsTriggerUrl:
                    description: URL which triggers function execution. Returned only
                      if trigger_http is used.
                    type: string
                  ingressSettings:
                    description: String value that controls what traffic can reach
                      the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
                      Changes to this field will recreate the cloud function.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the function.
                      Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
                    type: object
                  maxInstances:
                    description: The limit on the maximum number of function instances
                      that may coexist at a given time.
                    format: int64
                    type: integer
                  name:
                    description: A user-defined name of the function. Function names
                      must be unique globally.
                    type: string
                  project:
                    description: Project of the function. If it is not provided, the
                      provider project is used.
                    type: string
                  region:
                    description: Region of function. If it is not provided, the provider
                      region is used.
                    type: string
                  runtime:
                    description: The runtime in which the function is going to run.
                      Eg. "nodejs8", "nodejs10", "python37", "go111".
                    type: string
                  serviceAccountEmail:
                    description: If provided, the self-provided service account to
                      run the function with.
                    type: string
                  sourceArchiveBucket:
                    description: The GCS bucket containing the zip archive which contains
                      the function.
                    type: string
                  sourceArchiveObject:
                    description: The source archive object (file) in archive bucket.
                    type: string
                  sourceRepository:
                    description: Represents parameters related to source repository
                      where a function is hosted. Cannot be set alongside source_archive_bucket
                      or source_archive_object.
                    items:
                      properties:
                        url:
                          description: The URL pointing to the hosted repository where
                            the function is defined.
                          type: string
                      required:
                      - url
                      type: object
                    type: array
                  timeout:
                    description: Timeout (in seconds) for the function. Default value
                      is 60 seconds. Cannot be more than 540 seconds.
                    format: int64
                    type: integer
                  triggerHttp:
                    description: 'Boolean variable. Any HTTP request (of a supported
                      type) to the endpoint will trigger function execution. Supported
                      HTTP request types are: POST, PUT, GET, DELETE, and OPTIONS.
                      Endpoint is returned as https_trigger_url. Cannot be used with
                      trigger_bucket and trigger_topic.'
                    type: boolean
                  vpcConnector:
                    description: The VPC Network Connector that this cloud function
                      can connect to. It can be either the fully-qualified URI, or
                      the short name of the network connector resource. The format
                      of this field is projects/*/locations/*/connectors/*.
                    type: string
                  vpcConnectorEgressSettings:
                    description: The egress settings for the connector, controlling
                      what traffic is diverted through it. Allowed values are ALL_TRAFFIC
                      and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If
                      unset, this field preserves the previously set value.
                    type: string
                required:
                - name
                - runtime
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: FunctionStatus defines the observed state of Function.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
