---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: enterprisekeys.recaptcha.gcp.jet.crossplane.io
spec:
  group: recaptcha.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: EnterpriseKey
    listKind: EnterpriseKeyList
    plural: enterprisekeys
    singular: enterprisekey
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnterpriseKey is the Schema for the EnterpriseKeys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EnterpriseKeySpec defines the desired state of EnterpriseKey
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  androidSettings:
                    description: Settings for keys that can be used by Android apps.
                    items:
                      properties:
                        allowAllPackageNames:
                          description: If set to true, it means allowed_package_names
                            will not be enforced.
                          type: boolean
                        allowedPackageNames:
                          description: 'Android package names of apps allowed to use
                            the key. Example: ''com.companyname.appname'''
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  displayName:
                    description: Human-readable display name of this key. Modifiable
                      by user.
                    type: string
                  iosSettings:
                    description: Settings for keys that can be used by iOS apps.
                    items:
                      properties:
                        allowAllBundleIds:
                          description: If set to true, it means allowed_bundle_ids
                            will not be enforced.
                          type: boolean
                        allowedBundleIds:
                          description: 'iOS bundle ids of apps allowed to use the
                            key. Example: ''com.companyname.productname.appname'''
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: See [Creating and managing labels](https://cloud.google.com/recaptcha-enterprise/docs/labels).
                    type: object
                  project:
                    description: The project for the resource
                    type: string
                  testingOptions:
                    description: Options for user acceptance testing.
                    items:
                      properties:
                        testingChallenge:
                          description: 'For challenge-based keys only (CHECKBOX, INVISIBLE),
                            all challenge requests for this site will return nocaptcha
                            if NOCAPTCHA, or an unsolvable challenge if UNSOLVABLE_CHALLENGE.
                            Possible values: TESTING_CHALLENGE_UNSPECIFIED, NOCAPTCHA,
                            UNSOLVABLE_CHALLENGE'
                          type: string
                        testingScore:
                          description: All assessments for this Key will return this
                            score. Must be between 0 (likely not legitimate) and 1
                            (likely legitimate) inclusive.
                          type: number
                      type: object
                    type: array
                  webSettings:
                    description: Settings for keys that can be used by websites.
                    items:
                      properties:
                        allowAllDomains:
                          description: If set to true, it means allowed_domains will
                            not be enforced.
                          type: boolean
                        allowAmpTraffic:
                          description: If set to true, the key can be used on AMP
                            (Accelerated Mobile Pages) websites. This is supported
                            only for the SCORE integration type.
                          type: boolean
                        allowedDomains:
                          description: 'Domains or subdomains of websites allowed
                            to use the key. All subdomains of an allowed domain are
                            automatically allowed. A valid domain requires a host
                            and must not include any path, port, query or fragment.
                            Examples: ''example.com'' or ''subdomain.example.com'''
                          items:
                            type: string
                          type: array
                        challengeSecurityPreference:
                          description: 'Settings for the frequency and difficulty
                            at which this key triggers captcha challenges. This should
                            only be specified for IntegrationTypes CHECKBOX and INVISIBLE.
                            Possible values: CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED,
                            USABILITY, BALANCE, SECURITY'
                          type: string
                        integrationType:
                          description: 'Required. Describes how this key is integrated
                            with the website. Possible values: SCORE, CHECKBOX, INVISIBLE'
                          type: string
                      required:
                      - integrationType
                      type: object
                    type: array
                required:
                - displayName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EnterpriseKeyStatus defines the observed state of EnterpriseKey.
            properties:
              atProvider:
                properties:
                  createTime:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
