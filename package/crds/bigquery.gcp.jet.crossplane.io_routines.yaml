apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: routines.bigquery.gcp.jet.crossplane.io
spec:
  group: bigquery.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Routine
    listKind: RoutineList
    plural: routines
    singular: routine
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Routine is the Schema for the Routines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RoutineSpec defines the desired state of Routine
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  arguments:
                    description: Input/output argument of a function or a stored procedure.
                    items:
                      properties:
                        argumentKind:
                          description: 'Defaults to FIXED_TYPE. Default value: "FIXED_TYPE"
                            Possible values: ["FIXED_TYPE", "ANY_TYPE"]'
                          type: string
                        dataType:
                          description: 'A JSON schema for the data type. Required
                            unless argumentKind = ANY_TYPE. ~>**NOTE**: Because this
                            field expects a JSON string, any changes to the string
                            will create a diff, even if the JSON itself hasn''t changed.
                            If the API returns a different value for the same schema,
                            e.g. it switched the order of values or replaced STRUCT
                            field type with RECORD field type, we currently cannot
                            suppress the recurring diff this causes. As a workaround,
                            we recommend using the schema as returned by the API.'
                          type: string
                        mode:
                          description: 'Specifies whether the argument is input or
                            output. Can be set for procedures only. Possible values:
                            ["IN", "OUT", "INOUT"]'
                          type: string
                        name:
                          description: The name of this argument. Can be absent for
                            function return argument.
                          type: string
                      type: object
                    type: array
                  datasetId:
                    description: The ID of the dataset containing this routine
                    type: string
                  definitionBody:
                    description: The body of the routine. For functions, this is the
                      expression in the AS clause. If language=SQL, it is the substring
                      inside (but excluding) the parentheses.
                    type: string
                  description:
                    description: The description of the routine if defined.
                    type: string
                  determinismLevel:
                    description: 'The determinism level of the JavaScript UDF if defined.
                      Possible values: ["DETERMINISM_LEVEL_UNSPECIFIED", "DETERMINISTIC",
                      "NOT_DETERMINISTIC"]'
                    type: string
                  importedLibraries:
                    description: Optional. If language = "JAVASCRIPT", this field
                      stores the path of the imported JAVASCRIPT libraries.
                    items:
                      type: string
                    type: array
                  language:
                    description: 'The language of the routine. Possible values: ["SQL",
                      "JAVASCRIPT"]'
                    type: string
                  project:
                    type: string
                  returnType:
                    description: 'A JSON schema for the return type. Optional if language
                      = "SQL"; required otherwise. If absent, the return type is inferred
                      from definitionBody at query time in each query that references
                      this routine. If present, then the evaluated result will be
                      cast to the specified returned type at query time. ~>**NOTE**:
                      Because this field expects a JSON string, any changes to the
                      string will create a diff, even if the JSON itself hasn''t changed.
                      If the API returns a different value for the same schema, e.g.
                      it switche d the order of values or replaced STRUCT field type
                      with RECORD field type, we currently cannot suppress the recurring
                      diff this causes. As a workaround, we recommend using the schema
                      as returned by the API.'
                    type: string
                  routineId:
                    description: The ID of the the routine. The ID must contain only
                      letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
                      length is 256 characters.
                    type: string
                  routineType:
                    description: 'The type of routine. Possible values: ["SCALAR_FUNCTION",
                      "PROCEDURE"]'
                    type: string
                required:
                - datasetId
                - definitionBody
                - routineId
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RoutineStatus defines the observed state of Routine.
            properties:
              atProvider:
                properties:
                  creationTime:
                    format: int64
                    type: integer
                  lastModifiedTime:
                    format: int64
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
