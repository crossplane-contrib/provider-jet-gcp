apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: policies.binaryauthorization.gcp.jet.crossplane.io
spec:
  group: binaryauthorization.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Policy is the Schema for the Policys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PolicySpec defines the desired state of Policy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  admissionWhitelistPatterns:
                    description: A whitelist of image patterns to exclude from admission
                      rules. If an image's name matches a whitelist pattern, the image's
                      admission requests will always be permitted regardless of your
                      admission rules.
                    items:
                      properties:
                        namePattern:
                          description: An image name pattern to whitelist, in the
                            form 'registry/path/to/image'. This supports a trailing
                            * as a wildcard, but this is allowed only in text after
                            the registry/ part.
                          type: string
                      required:
                      - namePattern
                      type: object
                    type: array
                  clusterAdmissionRules:
                    description: "Per-cluster admission rules. An admission rule specifies
                      either that all container images used in a pod creation request
                      must be attested to by one or more attestors, that all pod creations
                      will be allowed, or that all pod creations will be denied. There
                      can be at most one admission rule per cluster spec. \n Identifier
                      format: '{{location}}.{{clusterId}}'. A location is either a
                      compute zone (e.g. 'us-central1-a') or a region (e.g. 'us-central1')."
                    items:
                      properties:
                        cluster:
                          type: string
                        enforcementMode:
                          description: 'The action when a pod creation is denied by
                            the admission rule. Possible values: ["ENFORCED_BLOCK_AND_AUDIT_LOG",
                            "DRYRUN_AUDIT_LOG_ONLY"]'
                          type: string
                        evaluationMode:
                          description: 'How this admission rule will be evaluated.
                            Possible values: ["ALWAYS_ALLOW", "REQUIRE_ATTESTATION",
                            "ALWAYS_DENY"]'
                          type: string
                        requireAttestationsBy:
                          description: "The resource names of the attestors that must
                            attest to a container image. If the attestor is in a different
                            project from the policy, it should be specified in the
                            format 'projects/*/attestors/*'. Each attestor must exist
                            before a policy can reference it. To add an attestor to
                            a policy the principal issuing the policy change request
                            must be able to read the attestor resource. \n Note: this
                            field must be non-empty when the evaluation_mode field
                            specifies REQUIRE_ATTESTATION, otherwise it must be empty."
                          items:
                            type: string
                          type: array
                      required:
                      - cluster
                      - enforcementMode
                      - evaluationMode
                      type: object
                    type: array
                  defaultAdmissionRule:
                    description: Default admission rule for a cluster without a per-cluster
                      admission rule.
                    items:
                      properties:
                        enforcementMode:
                          description: 'The action when a pod creation is denied by
                            the admission rule. Possible values: ["ENFORCED_BLOCK_AND_AUDIT_LOG",
                            "DRYRUN_AUDIT_LOG_ONLY"]'
                          type: string
                        evaluationMode:
                          description: 'How this admission rule will be evaluated.
                            Possible values: ["ALWAYS_ALLOW", "REQUIRE_ATTESTATION",
                            "ALWAYS_DENY"]'
                          type: string
                        requireAttestationsBy:
                          description: "The resource names of the attestors that must
                            attest to a container image. If the attestor is in a different
                            project from the policy, it should be specified in the
                            format 'projects/*/attestors/*'. Each attestor must exist
                            before a policy can reference it. To add an attestor to
                            a policy the principal issuing the policy change request
                            must be able to read the attestor resource. \n Note: this
                            field must be non-empty when the evaluation_mode field
                            specifies REQUIRE_ATTESTATION, otherwise it must be empty."
                          items:
                            type: string
                          type: array
                      required:
                      - enforcementMode
                      - evaluationMode
                      type: object
                    type: array
                  description:
                    description: A descriptive comment.
                    type: string
                  globalPolicyEvaluationMode:
                    description: 'Controls the evaluation of a Google-maintained global
                      admission policy for common system-level images. Images not
                      covered by the global policy will be subject to the project
                      admission policy. Possible values: ["ENABLE", "DISABLE"]'
                    type: string
                  project:
                    type: string
                required:
                - defaultAdmissionRule
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PolicyStatus defines the observed state of Policy.
            properties:
              atProvider:
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
