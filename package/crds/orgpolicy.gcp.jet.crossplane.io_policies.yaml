apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: policies.orgpolicy.gcp.jet.crossplane.io
spec:
  group: orgpolicy.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Policy is the Schema for the Policys API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PolicySpec defines the desired state of Policy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  name:
                    description: 'Immutable. The resource name of the Policy. Must
                      be one of the following forms, where constraint_name is the
                      name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}`
                      * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}`
                      For example, "projects/123/policies/compute.disableSerialPortAccess".
                      Note: `projects/{project_id}/policies/{constraint_name}` is
                      also an acceptable name for API requests, but responses will
                      return the name using the equivalent project number.'
                    type: string
                  parent:
                    description: The parent of the resource.
                    type: string
                  spec:
                    description: Basic information about the Organization Policy.
                    items:
                      properties:
                        inheritFromParent:
                          description: Determines the inheritance behavior for this
                            `Policy`. If `inherit_from_parent` is true, PolicyRules
                            set higher up in the hierarchy (up to the closest root)
                            are inherited and present in the effective policy. If
                            it is false, then no rules are inherited, and this Policy
                            becomes the new root for evaluation. This field can be
                            set only for Policies which configure list constraints.
                          type: boolean
                        reset:
                          description: Ignores policies set above this resource and
                            restores the `constraint_default` enforcement behavior
                            of the specific `Constraint` at this resource. This field
                            can be set in policies for either list or boolean constraints.
                            If set, `rules` must be empty and `inherit_from_parent`
                            must be set to false.
                          type: boolean
                        rules:
                          description: 'Up to 10 PolicyRules are allowed. In Policies
                            for boolean constraints, the following requirements apply:
                            - There must be one and only one PolicyRule where condition
                            is unset. - BooleanPolicyRules with conditions must set
                            `enforced` to the opposite of the PolicyRule without a
                            condition. - During policy evaluation, PolicyRules with
                            conditions that are true for a target resource take precedence.'
                          items:
                            properties:
                              allowAll:
                                description: Setting this to true means that all values
                                  are allowed. This field can be set only in Policies
                                  for list constraints.
                                type: string
                              condition:
                                description: 'A condition which determines whether
                                  this rule is used in the evaluation of the policy.
                                  When set, the `expression` field in the `Expr''
                                  must include from 1 to 10 subexpressions, joined
                                  by the "||" or "&&" operators. Each subexpression
                                  must be of the form "resource.matchTag(''/tag_key_short_name,
                                  ''tag_value_short_name'')". or "resource.matchTagId(''tagKeys/key_id'',
                                  ''tagValues/value_id'')". where key_name and value_name
                                  are the resource names for Label Keys and Values.
                                  These names are available from the Tag Manager Service.
                                  An example expression is: "resource.matchTag(''123456789/environment,
                                  ''prod'')". or "resource.matchTagId(''tagKeys/123'',
                                  ''tagValues/456'')".'
                                items:
                                  properties:
                                    description:
                                      description: Optional. Description of the expression.
                                        This is a longer text which describes the
                                        expression, e.g. when hovered over it in a
                                        UI.
                                      type: string
                                    expression:
                                      description: Textual representation of an expression
                                        in Common Expression Language syntax.
                                      type: string
                                    location:
                                      description: Optional. String indicating the
                                        location of the expression for error reporting,
                                        e.g. a file name and a position in the file.
                                      type: string
                                    title:
                                      description: Optional. Title for the expression,
                                        i.e. a short string describing its purpose.
                                        This can be used e.g. in UIs which allow to
                                        enter the expression.
                                      type: string
                                  type: object
                                type: array
                              denyAll:
                                description: Setting this to true means that all values
                                  are denied. This field can be set only in Policies
                                  for list constraints.
                                type: string
                              enforce:
                                description: If `true`, then the `Policy` is enforced.
                                  If `false`, then any configuration is acceptable.
                                  This field can be set only in Policies for boolean
                                  constraints.
                                type: string
                              values:
                                description: List of values to be used for this PolicyRule.
                                  This field can be set only in Policies for list
                                  constraints.
                                items:
                                  properties:
                                    allowedValues:
                                      description: List of values allowed at this
                                        resource.
                                      items:
                                        type: string
                                      type: array
                                    deniedValues:
                                      description: List of values denied at this resource.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                required:
                - name
                - parent
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PolicyStatus defines the observed state of Policy.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
