apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: instancegroupmanagers.compute.gcp.jet.crossplane.io
spec:
  group: compute.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: InstanceGroupManager
    listKind: InstanceGroupManagerList
    plural: instancegroupmanagers
    singular: instancegroupmanager
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InstanceGroupManager is the Schema for the InstanceGroupManagers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceGroupManagerSpec defines the desired state of InstanceGroupManager
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoHealingPolicies:
                    description: The autohealing policies for this managed instance
                      group. You can specify only one value.
                    items:
                      properties:
                        healthCheck:
                          description: The health check resource that signals autohealing.
                          type: string
                        initialDelaySec:
                          description: The number of seconds that the managed instance
                            group waits before it applies autohealing policies to
                            new instances or recently recreated instances. Between
                            0 and 3600.
                          format: int64
                          type: integer
                      required:
                      - healthCheck
                      - initialDelaySec
                      type: object
                    type: array
                  baseInstanceName:
                    description: The base instance name to use for instances in this
                      group. The value must be a valid RFC1035 name. Supported characters
                      are lowercase letters, numbers, and hyphens (-). Instances are
                      named by appending a hyphen and a random four-character string
                      to the base instance name.
                    type: string
                  description:
                    description: An optional textual description of the instance group
                      manager.
                    type: string
                  name:
                    description: The name of the instance group manager. Must be 1-63
                      characters long and comply with RFC1035. Supported characters
                      include lowercase letters, numbers, and hyphens.
                    type: string
                  namedPort:
                    description: The named port configuration.
                    items:
                      properties:
                        name:
                          description: The name of the port.
                          type: string
                        port:
                          description: The port number.
                          format: int64
                          type: integer
                      required:
                      - name
                      - port
                      type: object
                    type: array
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  statefulDisk:
                    description: Disks created on the instances that will be preserved
                      on instance delete, update, etc.
                    items:
                      properties:
                        deleteRule:
                          description: A value that prescribes what should happen
                            to the stateful disk when the VM instance is deleted.
                            The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION.
                            NEVER - detach the disk when the VM is deleted, but do
                            not delete the disk. ON_PERMANENT_INSTANCE_DELETION will
                            delete the stateful disk when the VM is permanently deleted
                            from the instance group. The default is NEVER.
                          type: string
                        deviceName:
                          description: The device name of the disk to be attached.
                          type: string
                      required:
                      - deviceName
                      type: object
                    type: array
                  targetPools:
                    description: The full URL of all target pools to which new instances
                      in the group are added. Updating the target pools attribute
                      does not affect existing instances.
                    items:
                      type: string
                    type: array
                  targetSize:
                    description: The target number of running instances for this managed
                      instance group. This value should always be explicitly set unless
                      this resource is attached to an autoscaler, in which case it
                      should never be set. Defaults to 0.
                    format: int64
                    type: integer
                  updatePolicy:
                    description: The update policy for this managed instance group.
                    items:
                      properties:
                        maxSurgeFixed:
                          description: The maximum number of instances that can be
                            created above the specified targetSize during the update
                            process. Conflicts with max_surge_percent. If neither
                            is set, defaults to 1
                          format: int64
                          type: integer
                        maxSurgePercent:
                          description: The maximum number of instances(calculated
                            as percentage) that can be created above the specified
                            targetSize during the update process. Conflicts with max_surge_fixed.
                          format: int64
                          type: integer
                        maxUnavailableFixed:
                          description: The maximum number of instances that can be
                            unavailable during the update process. Conflicts with
                            max_unavailable_percent. If neither is set, defaults to
                            1.
                          format: int64
                          type: integer
                        maxUnavailablePercent:
                          description: The maximum number of instances(calculated
                            as percentage) that can be unavailable during the update
                            process. Conflicts with max_unavailable_fixed.
                          format: int64
                          type: integer
                        minimalAction:
                          description: Minimal action to be taken on an instance.
                            You can specify either RESTART to restart existing instances
                            or REPLACE to delete and create new instances from the
                            target template. If you specify a RESTART, the Updater
                            will attempt to perform that action only. However, if
                            the Updater determines that the minimal action you specify
                            is not enough to perform the update, it might perform
                            a more disruptive action.
                          type: string
                        replacementMethod:
                          description: 'The instance replacement method for managed
                            instance groups. Valid values are: "RECREATE", "SUBSTITUTE".
                            If SUBSTITUTE (default), the group replaces VM instances
                            with new instances that have randomly generated names.
                            If RECREATE, instance names are preserved.  You must also
                            set max_unavailable_fixed or max_unavailable_percent to
                            be greater than 0.'
                          type: string
                        type:
                          description: The type of update process. You can specify
                            either PROACTIVE so that the instance group manager proactively
                            executes actions in order to bring instances to their
                            target versions or OPPORTUNISTIC so that no action is
                            proactively executed but the update will be performed
                            as part of other actions (for example, resizes or recreateInstances
                            calls).
                          type: string
                      required:
                      - minimalAction
                      - type
                      type: object
                    type: array
                  version:
                    description: Application versions managed by this instance group.
                      Each version deals with a specific instance template, allowing
                      canary release scenarios.
                    items:
                      properties:
                        instanceTemplate:
                          description: The full URL to an instance template from which
                            all new instances of this version will be created.
                          type: string
                        name:
                          description: Version name.
                          type: string
                        targetSize:
                          description: The number of instances calculated as a fixed
                            number or a percentage depending on the settings.
                          items:
                            properties:
                              fixed:
                                description: The number of instances which are managed
                                  for this version. Conflicts with percent.
                                format: int64
                                type: integer
                              percent:
                                description: The number of instances (calculated as
                                  percentage) which are managed for this version.
                                  Conflicts with fixed. Note that when using percent,
                                  rounding will be in favor of explicitly set target_size
                                  values; a managed instance group with 2 instances
                                  and 2 versions, one of which has a target_size.percent
                                  of 60 will create 2 instances of that version.
                                format: int64
                                type: integer
                            type: object
                          type: array
                      required:
                      - instanceTemplate
                      type: object
                    type: array
                  waitForInstances:
                    description: Whether to wait for all instances to be created/updated
                      before returning. Note that if this is set to true and the operation
                      does not succeed, Terraform will continue trying until it times
                      out.
                    type: boolean
                  waitForInstancesStatus:
                    description: When used with wait_for_instances specifies the status
                      to wait for. When STABLE is specified this resource will wait
                      until the instances are stable before returning. When UPDATED
                      is set, it will wait for the version target to be reached and
                      any per instance configs to be effective as well as all instances
                      to be stable before returning.
                    type: string
                  zone:
                    description: The zone that instances in this group should be created
                      in.
                    type: string
                required:
                - baseInstanceName
                - name
                - version
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceGroupManagerStatus defines the observed state of
              InstanceGroupManager.
            properties:
              atProvider:
                properties:
                  fingerprint:
                    type: string
                  id:
                    type: string
                  instanceGroup:
                    type: string
                  operation:
                    type: string
                  selfLink:
                    type: string
                  status:
                    items:
                      properties:
                        isStable:
                          type: boolean
                        stateful:
                          items:
                            properties:
                              hasStatefulConfig:
                                type: boolean
                              perInstanceConfigs:
                                items:
                                  properties:
                                    allEffective:
                                      type: boolean
                                  type: object
                                type: array
                            type: object
                          type: array
                        versionTarget:
                          items:
                            properties:
                              isReached:
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
