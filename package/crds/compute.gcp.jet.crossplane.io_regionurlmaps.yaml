apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: regionurlmaps.compute.gcp.jet.crossplane.io
spec:
  group: compute.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: RegionURLMap
    listKind: RegionURLMapList
    plural: regionurlmaps
    singular: regionurlmap
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RegionURLMap is the Schema for the RegionURLMaps API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RegionURLMapSpec defines the desired state of RegionURLMap
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  defaultService:
                    description: The full or partial URL of the defaultService resource
                      to which traffic is directed if none of the hostRules match.
                      If defaultRouteAction is additionally specified, advanced routing
                      actions like URL Rewrites, etc. take effect prior to sending
                      the request to the backend. However, if defaultService is specified,
                      defaultRouteAction cannot contain any weightedBackendServices.
                      Conversely, if routeAction specifies any weightedBackendServices,
                      service must not be specified.  Only one of defaultService,
                      defaultUrlRedirect or defaultRouteAction.weightedBackendService
                      must be set.
                    type: string
                  defaultUrlRedirect:
                    description: When none of the specified hostRules match, the request
                      is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect
                      is specified, defaultService or defaultRouteAction must not
                      be set.
                    items:
                      properties:
                        hostRedirect:
                          description: The host that will be used in the redirect
                            response instead of the one that was supplied in the request.
                            The value must be between 1 and 255 characters.
                          type: string
                        httpsRedirect:
                          description: If set to true, the URL scheme in the redirected
                            request is set to https. If set to false, the URL scheme
                            of the redirected request will remain the same as that
                            of the request. This must only be set for UrlMaps used
                            in TargetHttpProxys. Setting this true for TargetHttpsProxy
                            is not permitted. The default is set to false.
                          type: boolean
                        pathRedirect:
                          description: The path that will be used in the redirect
                            response instead of the one that was supplied in the request.
                            pathRedirect cannot be supplied together with prefixRedirect.
                            Supply one alone or neither. If neither is supplied, the
                            path of the original request will be used for the redirect.
                            The value must be between 1 and 1024 characters.
                          type: string
                        prefixRedirect:
                          description: The prefix that replaces the prefixMatch specified
                            in the HttpRouteRuleMatch, retaining the remaining portion
                            of the URL before redirecting the request. prefixRedirect
                            cannot be supplied together with pathRedirect. Supply
                            one alone or neither. If neither is supplied, the path
                            of the original request will be used for the redirect.
                            The value must be between 1 and 1024 characters.
                          type: string
                        redirectResponseCode:
                          description: "The HTTP Status code to use for this RedirectAction.
                            Supported values are: \n * MOVED_PERMANENTLY_DEFAULT,
                            which is the default value and corresponds to 301. \n
                            * FOUND, which corresponds to 302. \n * SEE_OTHER which
                            corresponds to 303. \n * TEMPORARY_REDIRECT, which corresponds
                            to 307. In this case, the request method will be retained.
                            \n * PERMANENT_REDIRECT, which corresponds to 308. In
                            this case, the request method will be retained. Possible
                            values: [\"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                            \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                          type: string
                        stripQuery:
                          description: If set to true, any accompanying query portion
                            of the original URL is removed prior to redirecting the
                            request. If set to false, the query portion of the original
                            URL is retained. This field is required to ensure an empty
                            block is not set. The normal default value is false.
                          type: boolean
                      required:
                      - stripQuery
                      type: object
                    type: array
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  hostRule:
                    description: The list of HostRules to use against the URL.
                    items:
                      properties:
                        description:
                          description: An optional description of this HostRule. Provide
                            this property when you create the resource.
                          type: string
                        hosts:
                          description: The list of host patterns to match. They must
                            be valid hostnames, except * will match any string of
                            ([a-z0-9-.]*). In that case, * must be the first character
                            and must be followed in the pattern by either - or ..
                          items:
                            type: string
                          type: array
                        pathMatcher:
                          description: The name of the PathMatcher to use to match
                            the path portion of the URL if the hostRule matches the
                            URL's host portion.
                          type: string
                      required:
                      - hosts
                      - pathMatcher
                      type: object
                    type: array
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  pathMatcher:
                    description: The list of named PathMatchers to use against the
                      URL.
                    items:
                      properties:
                        defaultService:
                          description: A reference to a RegionBackendService resource.
                            This will be used if none of the pathRules defined by
                            this PathMatcher is matched by the URL's path portion.
                          type: string
                        defaultUrlRedirect:
                          description: When none of the specified hostRules match,
                            the request is redirected to a URL specified by defaultUrlRedirect.
                            If defaultUrlRedirect is specified, defaultService or
                            defaultRouteAction must not be set.
                          items:
                            properties:
                              hostRedirect:
                                description: The host that will be used in the redirect
                                  response instead of the one that was supplied in
                                  the request. The value must be between 1 and 255
                                  characters.
                                type: string
                              httpsRedirect:
                                description: If set to true, the URL scheme in the
                                  redirected request is set to https. If set to false,
                                  the URL scheme of the redirected request will remain
                                  the same as that of the request. This must only
                                  be set for UrlMaps used in TargetHttpProxys. Setting
                                  this true for TargetHttpsProxy is not permitted.
                                  The default is set to false.
                                type: boolean
                              pathRedirect:
                                description: The path that will be used in the redirect
                                  response instead of the one that was supplied in
                                  the request. pathRedirect cannot be supplied together
                                  with prefixRedirect. Supply one alone or neither.
                                  If neither is supplied, the path of the original
                                  request will be used for the redirect. The value
                                  must be between 1 and 1024 characters.
                                type: string
                              prefixRedirect:
                                description: The prefix that replaces the prefixMatch
                                  specified in the HttpRouteRuleMatch, retaining the
                                  remaining portion of the URL before redirecting
                                  the request. prefixRedirect cannot be supplied together
                                  with pathRedirect. Supply one alone or neither.
                                  If neither is supplied, the path of the original
                                  request will be used for the redirect. The value
                                  must be between 1 and 1024 characters.
                                type: string
                              redirectResponseCode:
                                description: "The HTTP Status code to use for this
                                  RedirectAction. Supported values are: \n * MOVED_PERMANENTLY_DEFAULT,
                                  which is the default value and corresponds to 301.
                                  \n * FOUND, which corresponds to 302. \n * SEE_OTHER
                                  which corresponds to 303. \n * TEMPORARY_REDIRECT,
                                  which corresponds to 307. In this case, the request
                                  method will be retained. \n * PERMANENT_REDIRECT,
                                  which corresponds to 308. In this case, the request
                                  method will be retained. Possible values: [\"FOUND\",
                                  \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\",
                                  \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                type: string
                              stripQuery:
                                description: If set to true, any accompanying query
                                  portion of the original URL is removed prior to
                                  redirecting the request. If set to false, the query
                                  portion of the original URL is retained. This field
                                  is required to ensure an empty block is not set.
                                  The normal default value is false.
                                type: boolean
                            required:
                            - stripQuery
                            type: object
                          type: array
                        description:
                          description: An optional description of this resource.
                          type: string
                        name:
                          description: The name to which this PathMatcher is referred
                            by the HostRule.
                          type: string
                        pathRule:
                          description: 'The list of path rules. Use this list instead
                            of routeRules when routing based on simple path matching
                            is all that''s required. The order by which path rules
                            are specified does not matter. Matches are always done
                            on the longest-path-first basis. For example: a pathRule
                            with a path /a/b/c/* will match before /a/b/* irrespective
                            of the order in which those paths appear in this list.
                            Within a given pathMatcher, only one of pathRules or routeRules
                            must be set.'
                          items:
                            properties:
                              paths:
                                description: 'The list of path patterns to match.
                                  Each must start with / and the only place a \* is
                                  allowed is at the end following a /. The string
                                  fed to the path matcher does not include any text
                                  after the first ? or #, and those chars are not
                                  allowed here.'
                                items:
                                  type: string
                                type: array
                              routeAction:
                                description: In response to a matching path, the load
                                  balancer performs advanced routing actions like
                                  URL rewrites, header transformations, etc. prior
                                  to forwarding the request to the selected backend.
                                  If routeAction specifies any weightedBackendServices,
                                  service must not be set. Conversely if service is
                                  set, routeAction cannot contain any  weightedBackendServices.
                                  Only one of routeAction or urlRedirect must be set.
                                items:
                                  properties:
                                    corsPolicy:
                                      description: The specification for allowing
                                        client side cross-origin requests. Please
                                        see W3C Recommendation for Cross Origin Resource
                                        Sharing
                                      items:
                                        properties:
                                          allowCredentials:
                                            description: In response to a preflight
                                              request, setting this to true indicates
                                              that the actual request can include
                                              user credentials. This translates to
                                              the Access- Control-Allow-Credentials
                                              header. Defaults to false.
                                            type: boolean
                                          allowHeaders:
                                            description: Specifies the content for
                                              the Access-Control-Allow-Headers header.
                                            items:
                                              type: string
                                            type: array
                                          allowMethods:
                                            description: Specifies the content for
                                              the Access-Control-Allow-Methods header.
                                            items:
                                              type: string
                                            type: array
                                          allowOriginRegexes:
                                            description: Specifies the regular expression
                                              patterns that match allowed origins.
                                              For regular expression grammar please
                                              see en.cppreference.com/w/cpp/regex/ecmascript
                                              An origin is allowed if it matches either
                                              allow_origins or allow_origin_regex.
                                            items:
                                              type: string
                                            type: array
                                          allowOrigins:
                                            description: Specifies the list of origins
                                              that will be allowed to do CORS requests.
                                              An origin is allowed if it matches either
                                              allow_origins or allow_origin_regex.
                                            items:
                                              type: string
                                            type: array
                                          disabled:
                                            description: If true, specifies the CORS
                                              policy is disabled.
                                            type: boolean
                                          exposeHeaders:
                                            description: Specifies the content for
                                              the Access-Control-Expose-Headers header.
                                            items:
                                              type: string
                                            type: array
                                          maxAge:
                                            description: Specifies how long the results
                                              of a preflight request can be cached.
                                              This translates to the content for the
                                              Access-Control-Max-Age header.
                                            format: int64
                                            type: integer
                                        required:
                                        - disabled
                                        type: object
                                      type: array
                                    faultInjectionPolicy:
                                      description: The specification for fault injection
                                        introduced into traffic to test the resiliency
                                        of clients to backend service failure. As
                                        part of fault injection, when clients send
                                        requests to a backend service, delays can
                                        be introduced by Loadbalancer on a percentage
                                        of requests before sending those request to
                                        the backend service. Similarly requests from
                                        clients can be aborted by the Loadbalancer
                                        for a percentage of requests. timeout and
                                        retry_policy will be ignored by clients that
                                        are configured with a fault_injection_policy.
                                      items:
                                        properties:
                                          abort:
                                            description: The specification for how
                                              client requests are aborted as part
                                              of fault injection.
                                            items:
                                              properties:
                                                httpStatus:
                                                  description: The HTTP status code
                                                    used to abort the request. The
                                                    value must be between 200 and
                                                    599 inclusive.
                                                  format: int64
                                                  type: integer
                                                percentage:
                                                  description: The percentage of traffic
                                                    (connections/operations/requests)
                                                    which will be aborted as part
                                                    of fault injection. The value
                                                    must be between 0.0 and 100.0
                                                    inclusive.
                                                  type: number
                                              required:
                                              - httpStatus
                                              - percentage
                                              type: object
                                            type: array
                                          delay:
                                            description: The specification for how
                                              client requests are delayed as part
                                              of fault injection, before being sent
                                              to a backend service.
                                            items:
                                              properties:
                                                fixedDelay:
                                                  description: Specifies the value
                                                    of the fixed delay interval.
                                                  items:
                                                    properties:
                                                      nanos:
                                                        description: Span of time
                                                          that's a fraction of a second
                                                          at nanosecond resolution.
                                                          Durations less than one
                                                          second are represented with
                                                          a 0 'seconds' field and
                                                          a positive 'nanos' field.
                                                          Must be from 0 to 999,999,999
                                                          inclusive.
                                                        format: int64
                                                        type: integer
                                                      seconds:
                                                        description: Span of time
                                                          at a resolution of a second.
                                                          Must be from 0 to 315,576,000,000
                                                          inclusive.
                                                        type: string
                                                    required:
                                                    - seconds
                                                    type: object
                                                  type: array
                                                percentage:
                                                  description: The percentage of traffic
                                                    (connections/operations/requests)
                                                    on which delay will be introduced
                                                    as part of fault injection. The
                                                    value must be between 0.0 and
                                                    100.0 inclusive.
                                                  type: number
                                              required:
                                              - fixedDelay
                                              - percentage
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    requestMirrorPolicy:
                                      description: Specifies the policy on how requests
                                        intended for the route's backends are shadowed
                                        to a separate mirrored backend service. Loadbalancer
                                        does not wait for responses from the shadow
                                        service. Prior to sending traffic to the shadow
                                        service, the host / authority header is suffixed
                                        with -shadow.
                                      items:
                                        properties:
                                          backendService:
                                            description: The RegionBackendService
                                              resource being mirrored to.
                                            type: string
                                        required:
                                        - backendService
                                        type: object
                                      type: array
                                    retryPolicy:
                                      description: Specifies the retry policy associated
                                        with this route.
                                      items:
                                        properties:
                                          numRetries:
                                            description: Specifies the allowed number
                                              retries. This number must be > 0.
                                            format: int64
                                            type: integer
                                          perTryTimeout:
                                            description: Specifies a non-zero timeout
                                              per retry attempt.
                                            items:
                                              properties:
                                                nanos:
                                                  description: Span of time that's
                                                    a fraction of a second at nanosecond
                                                    resolution. Durations less than
                                                    one second are represented with
                                                    a 0 'seconds' field and a positive
                                                    'nanos' field. Must be from 0
                                                    to 999,999,999 inclusive.
                                                  format: int64
                                                  type: integer
                                                seconds:
                                                  description: Span of time at a resolution
                                                    of a second. Must be from 0 to
                                                    315,576,000,000 inclusive.
                                                  type: string
                                              required:
                                              - seconds
                                              type: object
                                            type: array
                                          retryConditions:
                                            description: "Specifies one or more conditions
                                              when this retry rule applies. Valid
                                              values are: \n - 5xx: Loadbalancer will
                                              attempt a retry if the backend service
                                              responds with any 5xx response code,
                                              or if the backend service does not respond
                                              at all, example: disconnects, reset,
                                              read timeout, connection failure, and
                                              refused streams. - gateway-error: Similar
                                              to 5xx, but only applies to response
                                              codes 502, 503 or 504. - connect-failure:
                                              Loadbalancer will retry on failures
                                              connecting to backend services, for
                                              example due to connection timeouts.
                                              - retriable-4xx: Loadbalancer will retry
                                              for retriable 4xx response codes. Currently
                                              the only retriable error supported is
                                              409. - refused-stream: Loadbalancer
                                              will retry if the backend service resets
                                              the stream with a REFUSED_STREAM error
                                              code. This reset type indicates that
                                              it is safe to retry. - cancelled: Loadbalancer
                                              will retry if the gRPC status code in
                                              the response header is set to cancelled
                                              - deadline-exceeded: Loadbalancer will
                                              retry if the gRPC status code in the
                                              response header is set to deadline-exceeded
                                              - resource-exhausted: Loadbalancer will
                                              retry if the gRPC status code in the
                                              response header is set to resource-exhausted
                                              - unavailable: Loadbalancer will retry
                                              if the gRPC status code in the response
                                              header is set to unavailable"
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                    timeout:
                                      description: Specifies the timeout for the selected
                                        route. Timeout is computed from the time the
                                        request is has been fully processed (i.e.
                                        end-of-stream) up until the response has been
                                        completely processed. Timeout includes all
                                        retries. If not specified, the default value
                                        is 15 seconds.
                                      items:
                                        properties:
                                          nanos:
                                            description: Span of time that's a fraction
                                              of a second at nanosecond resolution.
                                              Durations less than one second are represented
                                              with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999
                                              inclusive.
                                            format: int64
                                            type: integer
                                          seconds:
                                            description: Span of time at a resolution
                                              of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      type: array
                                    urlRewrite:
                                      description: The spec to modify the URL of the
                                        request, prior to forwarding the request to
                                        the matched service
                                      items:
                                        properties:
                                          hostRewrite:
                                            description: Prior to forwarding the request
                                              to the selected service, the request's
                                              host header is replaced with contents
                                              of hostRewrite. The value must be between
                                              1 and 255 characters.
                                            type: string
                                          pathPrefixRewrite:
                                            description: Prior to forwarding the request
                                              to the selected backend service, the
                                              matching portion of the request's path
                                              is replaced by pathPrefixRewrite. The
                                              value must be between 1 and 1024 characters.
                                            type: string
                                        type: object
                                      type: array
                                    weightedBackendServices:
                                      description: A list of weighted backend services
                                        to send traffic to when a route match occurs.
                                        The weights determine the fraction of traffic
                                        that flows to their corresponding backend
                                        service. If all traffic needs to go to a single
                                        backend service, there must be one  weightedBackendService
                                        with weight set to a non 0 number. Once a
                                        backendService is identified and before forwarding
                                        the request to the backend service, advanced
                                        routing actions like Url rewrites and header
                                        transformations are applied depending on additional
                                        settings specified in this HttpRouteAction.
                                      items:
                                        properties:
                                          backendService:
                                            description: The default RegionBackendService
                                              resource. Before forwarding the request
                                              to backendService, the loadbalancer
                                              applies any relevant headerActions specified
                                              as part of this backendServiceWeight.
                                            type: string
                                          headerAction:
                                            description: Specifies changes to request
                                              and response headers that need to take
                                              effect for the selected backendService.
                                              headerAction specified here take effect
                                              before headerAction in the enclosing
                                              HttpRouteRule, PathMatcher and UrlMap.
                                            items:
                                              properties:
                                                requestHeadersToAdd:
                                                  description: Headers to add to a
                                                    matching request prior to forwarding
                                                    the request to the backendService.
                                                  items:
                                                    properties:
                                                      headerName:
                                                        description: The name of the
                                                          header.
                                                        type: string
                                                      headerValue:
                                                        description: The value of
                                                          the header to add.
                                                        type: string
                                                      replace:
                                                        description: If false, headerValue
                                                          is appended to any values
                                                          that already exist for the
                                                          header. If true, headerValue
                                                          is set for the header, discarding
                                                          any values that were set
                                                          for that header.
                                                        type: boolean
                                                    required:
                                                    - headerName
                                                    - headerValue
                                                    - replace
                                                    type: object
                                                  type: array
                                                requestHeadersToRemove:
                                                  description: A list of header names
                                                    for headers that need to be removed
                                                    from the request prior to forwarding
                                                    the request to the backendService.
                                                  items:
                                                    type: string
                                                  type: array
                                                responseHeadersToAdd:
                                                  description: Headers to add the
                                                    response prior to sending the
                                                    response back to the client.
                                                  items:
                                                    properties:
                                                      headerName:
                                                        description: The name of the
                                                          header.
                                                        type: string
                                                      headerValue:
                                                        description: The value of
                                                          the header to add.
                                                        type: string
                                                      replace:
                                                        description: If false, headerValue
                                                          is appended to any values
                                                          that already exist for the
                                                          header. If true, headerValue
                                                          is set for the header, discarding
                                                          any values that were set
                                                          for that header.
                                                        type: boolean
                                                    required:
                                                    - headerName
                                                    - headerValue
                                                    - replace
                                                    type: object
                                                  type: array
                                                responseHeadersToRemove:
                                                  description: A list of header names
                                                    for headers that need to be removed
                                                    from the response prior to sending
                                                    the response back to the client.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          weight:
                                            description: Specifies the fraction of
                                              traffic sent to backendService, computed
                                              as weight / (sum of all weightedBackendService
                                              weights in routeAction) . The selection
                                              of a backend service is determined only
                                              for new traffic. Once a user's request
                                              has been directed to a backendService,
                                              subsequent requests will be sent to
                                              the same backendService as determined
                                              by the BackendService's session affinity
                                              policy. The value must be between 0
                                              and 1000
                                            format: int64
                                            type: integer
                                        required:
                                        - backendService
                                        - weight
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              service:
                                description: The region backend service resource to
                                  which traffic is directed if this rule is matched.
                                  If routeAction is additionally specified, advanced
                                  routing actions like URL Rewrites, etc. take effect
                                  prior to sending the request to the backend. However,
                                  if service is specified, routeAction cannot contain
                                  any weightedBackendService s. Conversely, if routeAction
                                  specifies any weightedBackendServices, service must
                                  not be specified. Only one of urlRedirect, service
                                  or routeAction.weightedBackendService must be set.
                                type: string
                              urlRedirect:
                                description: When a path pattern is matched, the request
                                  is redirected to a URL specified by urlRedirect.
                                  If urlRedirect is specified, service or routeAction
                                  must not be set.
                                items:
                                  properties:
                                    hostRedirect:
                                      description: The host that will be used in the
                                        redirect response instead of the one that
                                        was supplied in the request. The value must
                                        be between 1 and 255 characters.
                                      type: string
                                    httpsRedirect:
                                      description: If set to true, the URL scheme
                                        in the redirected request is set to https.
                                        If set to false, the URL scheme of the redirected
                                        request will remain the same as that of the
                                        request. This must only be set for UrlMaps
                                        used in TargetHttpProxys. Setting this true
                                        for TargetHttpsProxy is not permitted. The
                                        default is set to false.
                                      type: boolean
                                    pathRedirect:
                                      description: The path that will be used in the
                                        redirect response instead of the one that
                                        was supplied in the request. pathRedirect
                                        cannot be supplied together with prefixRedirect.
                                        Supply one alone or neither. If neither is
                                        supplied, the path of the original request
                                        will be used for the redirect. The value must
                                        be between 1 and 1024 characters.
                                      type: string
                                    prefixRedirect:
                                      description: The prefix that replaces the prefixMatch
                                        specified in the HttpRouteRuleMatch, retaining
                                        the remaining portion of the URL before redirecting
                                        the request. prefixRedirect cannot be supplied
                                        together with pathRedirect. Supply one alone
                                        or neither. If neither is supplied, the path
                                        of the original request will be used for the
                                        redirect. The value must be between 1 and
                                        1024 characters.
                                      type: string
                                    redirectResponseCode:
                                      description: "The HTTP Status code to use for
                                        this RedirectAction. Supported values are:
                                        \n * MOVED_PERMANENTLY_DEFAULT, which is the
                                        default value and corresponds to 301. \n *
                                        FOUND, which corresponds to 302. \n * SEE_OTHER
                                        which corresponds to 303. \n * TEMPORARY_REDIRECT,
                                        which corresponds to 307. In this case, the
                                        request method will be retained. \n * PERMANENT_REDIRECT,
                                        which corresponds to 308. In this case, the
                                        request method will be retained. Possible
                                        values: [\"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\",
                                        \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                      type: string
                                    stripQuery:
                                      description: If set to true, any accompanying
                                        query portion of the original URL is removed
                                        prior to redirecting the request. If set to
                                        false, the query portion of the original URL
                                        is retained. This field is required to ensure
                                        an empty block is not set. The normal default
                                        value is false.
                                      type: boolean
                                  required:
                                  - stripQuery
                                  type: object
                                type: array
                            required:
                            - paths
                            type: object
                          type: array
                        routeRules:
                          description: 'The list of ordered HTTP route rules. Use
                            this list instead of pathRules when advanced route matching
                            and routing actions are desired. The order of specifying
                            routeRules matters: the first rule that matches will cause
                            its specified routing action to take effect. Within a
                            given pathMatcher, only one of pathRules or routeRules
                            must be set. routeRules are not supported in UrlMaps intended
                            for External load balancers.'
                          items:
                            properties:
                              headerAction:
                                description: Specifies changes to request and response
                                  headers that need to take effect for the selected
                                  backendService. The headerAction specified here
                                  are applied before the matching pathMatchers[].headerAction
                                  and after pathMatchers[].routeRules[].r outeAction.weightedBackendService.backendServiceWeightAction[].headerAction
                                items:
                                  properties:
                                    requestHeadersToAdd:
                                      description: Headers to add to a matching request
                                        prior to forwarding the request to the backendService.
                                      items:
                                        properties:
                                          headerName:
                                            description: The name of the header.
                                            type: string
                                          headerValue:
                                            description: The value of the header to
                                              add.
                                            type: string
                                          replace:
                                            description: If false, headerValue is
                                              appended to any values that already
                                              exist for the header. If true, headerValue
                                              is set for the header, discarding any
                                              values that were set for that header.
                                            type: boolean
                                        required:
                                        - headerName
                                        - headerValue
                                        - replace
                                        type: object
                                      type: array
                                    requestHeadersToRemove:
                                      description: A list of header names for headers
                                        that need to be removed from the request prior
                                        to forwarding the request to the backendService.
                                      items:
                                        type: string
                                      type: array
                                    responseHeadersToAdd:
                                      description: Headers to add the response prior
                                        to sending the response back to the client.
                                      items:
                                        properties:
                                          headerName:
                                            description: The name of the header.
                                            type: string
                                          headerValue:
                                            description: The value of the header to
                                              add.
                                            type: string
                                          replace:
                                            description: If false, headerValue is
                                              appended to any values that already
                                              exist for the header. If true, headerValue
                                              is set for the header, discarding any
                                              values that were set for that header.
                                            type: boolean
                                        required:
                                        - headerName
                                        - headerValue
                                        - replace
                                        type: object
                                      type: array
                                    responseHeadersToRemove:
                                      description: A list of header names for headers
                                        that need to be removed from the response
                                        prior to sending the response back to the
                                        client.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchRules:
                                description: The rules for determining a match.
                                items:
                                  properties:
                                    fullPathMatch:
                                      description: For satisfying the matchRule condition,
                                        the path of the request must exactly match
                                        the value specified in fullPathMatch after
                                        removing any query parameters and anchor that
                                        may be part of the original URL. FullPathMatch
                                        must be between 1 and 1024 characters. Only
                                        one of prefixMatch, fullPathMatch or regexMatch
                                        must be specified.
                                      type: string
                                    headerMatches:
                                      description: Specifies a list of header match
                                        criteria, all of which must match corresponding
                                        headers in the request.
                                      items:
                                        properties:
                                          exactMatch:
                                            description: The value should exactly
                                              match contents of exactMatch. Only one
                                              of exactMatch, prefixMatch, suffixMatch,
                                              regexMatch, presentMatch or rangeMatch
                                              must be set.
                                            type: string
                                          headerName:
                                            description: The name of the HTTP header
                                              to match. For matching against the HTTP
                                              request's authority, use a headerMatch
                                              with the header name ":authority". For
                                              matching a request's method, use the
                                              headerName ":method".
                                            type: string
                                          invertMatch:
                                            description: If set to false, the headerMatch
                                              is considered a match if the match criteria
                                              above are met. If set to true, the headerMatch
                                              is considered a match if the match criteria
                                              above are NOT met. Defaults to false.
                                            type: boolean
                                          prefixMatch:
                                            description: The value of the header must
                                              start with the contents of prefixMatch.
                                              Only one of exactMatch, prefixMatch,
                                              suffixMatch, regexMatch, presentMatch
                                              or rangeMatch must be set.
                                            type: string
                                          presentMatch:
                                            description: A header with the contents
                                              of headerName must exist. The match
                                              takes place whether or not the request's
                                              header has a value or not. Only one
                                              of exactMatch, prefixMatch, suffixMatch,
                                              regexMatch, presentMatch or rangeMatch
                                              must be set.
                                            type: boolean
                                          rangeMatch:
                                            description: "The header value must be
                                              an integer and its value must be in
                                              the range specified in rangeMatch. If
                                              the header does not contain an integer,
                                              number or is empty, the match fails.
                                              For example for a range [-5, 0] \n *
                                              -3 will match * 0 will not match * 0.25
                                              will not match * -3someString will not
                                              match. \n Only one of exactMatch, prefixMatch,
                                              suffixMatch, regexMatch, presentMatch
                                              or rangeMatch must be set."
                                            items:
                                              properties:
                                                rangeEnd:
                                                  description: The end of the range
                                                    (exclusive).
                                                  format: int64
                                                  type: integer
                                                rangeStart:
                                                  description: The start of the range
                                                    (inclusive).
                                                  format: int64
                                                  type: integer
                                              required:
                                              - rangeEnd
                                              - rangeStart
                                              type: object
                                            type: array
                                          regexMatch:
                                            description: 'The value of the header
                                              must match the regular expression specified
                                              in regexMatch. For regular expression
                                              grammar, please see: en.cppreference.com/w/cpp/regex/ecmascript  For
                                              matching against a port specified in
                                              the HTTP request, use a headerMatch
                                              with headerName set to PORT and a regular
                                              expression that satisfies the RFC2616
                                              Host header''s port specifier. Only
                                              one of exactMatch, prefixMatch, suffixMatch,
                                              regexMatch, presentMatch or rangeMatch
                                              must be set.'
                                            type: string
                                          suffixMatch:
                                            description: The value of the header must
                                              end with the contents of suffixMatch.
                                              Only one of exactMatch, prefixMatch,
                                              suffixMatch, regexMatch, presentMatch
                                              or rangeMatch must be set.
                                            type: string
                                        required:
                                        - headerName
                                        type: object
                                      type: array
                                    ignoreCase:
                                      description: Specifies that prefixMatch and
                                        fullPathMatch matches are case sensitive.
                                        Defaults to false.
                                      type: boolean
                                    metadataFilters:
                                      description: Opaque filter criteria used by
                                        Loadbalancer to restrict routing configuration
                                        to a limited set xDS compliant clients. In
                                        their xDS requests to Loadbalancer, xDS clients
                                        present node metadata. If a match takes place,
                                        the relevant routing configuration is made
                                        available to those proxies. For each metadataFilter
                                        in this list, if its filterMatchCriteria is
                                        set to MATCH_ANY, at least one of the filterLabels
                                        must match the corresponding label provided
                                        in the metadata. If its filterMatchCriteria
                                        is set to MATCH_ALL, then all of its filterLabels
                                        must match with corresponding labels in the
                                        provided metadata. metadataFilters specified
                                        here can be overrides those specified in ForwardingRule
                                        that refers to this UrlMap. metadataFilters
                                        only applies to Loadbalancers that have their
                                        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
                                      items:
                                        properties:
                                          filterLabels:
                                            description: The list of label value pairs
                                              that must match labels in the provided
                                              metadata based on filterMatchCriteria  This
                                              list must not be empty and can have
                                              at the most 64 entries.
                                            items:
                                              properties:
                                                name:
                                                  description: Name of metadata label.
                                                    The name can have a maximum length
                                                    of 1024 characters and must be
                                                    at least 1 character long.
                                                  type: string
                                                value:
                                                  description: The value of the label
                                                    must match the specified value.
                                                    value can have a maximum length
                                                    of 1024 characters.
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            type: array
                                          filterMatchCriteria:
                                            description: "Specifies how individual
                                              filterLabel matches within the list
                                              of filterLabels contribute towards the
                                              overall metadataFilter match. Supported
                                              values are: \n * MATCH_ANY: At least
                                              one of the filterLabels must have a
                                              matching label in the provided metadata.
                                              * MATCH_ALL: All filterLabels must have
                                              matching labels in the provided metadata.
                                              Possible values: [\"MATCH_ALL\", \"MATCH_ANY\"]"
                                            type: string
                                        required:
                                        - filterLabels
                                        - filterMatchCriteria
                                        type: object
                                      type: array
                                    prefixMatch:
                                      description: For satisfying the matchRule condition,
                                        the request's path must begin with the specified
                                        prefixMatch. prefixMatch must begin with a
                                        /. The value must be between 1 and 1024 characters.
                                        Only one of prefixMatch, fullPathMatch or
                                        regexMatch must be specified.
                                      type: string
                                    queryParameterMatches:
                                      description: Specifies a list of query parameter
                                        match criteria, all of which must match corresponding
                                        query parameters in the request.
                                      items:
                                        properties:
                                          exactMatch:
                                            description: The queryParameterMatch matches
                                              if the value of the parameter exactly
                                              matches the contents of exactMatch.
                                              Only one of presentMatch, exactMatch
                                              and regexMatch must be set.
                                            type: string
                                          name:
                                            description: The name of the query parameter
                                              to match. The query parameter must exist
                                              in the request, in the absence of which
                                              the request match fails.
                                            type: string
                                          presentMatch:
                                            description: Specifies that the queryParameterMatch
                                              matches if the request contains the
                                              query parameter, irrespective of whether
                                              the parameter has a value or not. Only
                                              one of presentMatch, exactMatch and
                                              regexMatch must be set.
                                            type: boolean
                                          regexMatch:
                                            description: The queryParameterMatch matches
                                              if the value of the parameter matches
                                              the regular expression specified by
                                              regexMatch. For the regular expression
                                              grammar, please see en.cppreference.com/w/cpp/regex/ecmascript  Only
                                              one of presentMatch, exactMatch and
                                              regexMatch must be set.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    regexMatch:
                                      description: For satisfying the matchRule condition,
                                        the path of the request must satisfy the regular
                                        expression specified in regexMatch after removing
                                        any query parameters and anchor supplied with
                                        the original URL. For regular expression grammar
                                        please see en.cppreference.com/w/cpp/regex/ecmascript  Only
                                        one of prefixMatch, fullPathMatch or regexMatch
                                        must be specified.
                                      type: string
                                  type: object
                                type: array
                              priority:
                                description: "For routeRules within a given pathMatcher,
                                  priority determines the order in which load balancer
                                  will interpret routeRules. RouteRules are evaluated
                                  in order of priority, from the lowest to highest
                                  number. The priority of a rule decreases as its
                                  number increases (1, 2, 3, N+1). The first rule
                                  that matches the request is applied. \n You cannot
                                  configure two or more routeRules with the same priority.
                                  Priority for each rule must be set to a number between
                                  0 and 2147483647 inclusive. \n Priority numbers
                                  can have gaps, which enable you to add or remove
                                  rules in the future without affecting the rest of
                                  the rules. For example, 1, 2, 3, 4, 5, 9, 12, 16
                                  is a valid series of priority numbers to which you
                                  could add rules numbered from 6 to 8, 10 to 11,
                                  and 13 to 15 in the future without any impact on
                                  existing rules."
                                format: int64
                                type: integer
                              routeAction:
                                description: In response to a matching matchRule,
                                  the load balancer performs advanced routing actions
                                  like URL rewrites, header transformations, etc.
                                  prior to forwarding the request to the selected
                                  backend. If  routeAction specifies any weightedBackendServices,
                                  service must not be set. Conversely if service is
                                  set, routeAction cannot contain any  weightedBackendServices.
                                  Only one of routeAction or urlRedirect must be set.
                                items:
                                  properties:
                                    corsPolicy:
                                      description: The specification for allowing
                                        client side cross-origin requests. Please
                                        see W3C Recommendation for Cross Origin Resource
                                        Sharing
                                      items:
                                        properties:
                                          allowCredentials:
                                            description: In response to a preflight
                                              request, setting this to true indicates
                                              that the actual request can include
                                              user credentials. This translates to
                                              the Access- Control-Allow-Credentials
                                              header. Defaults to false.
                                            type: boolean
                                          allowHeaders:
                                            description: Specifies the content for
                                              the Access-Control-Allow-Headers header.
                                            items:
                                              type: string
                                            type: array
                                          allowMethods:
                                            description: Specifies the content for
                                              the Access-Control-Allow-Methods header.
                                            items:
                                              type: string
                                            type: array
                                          allowOriginRegexes:
                                            description: Specifies the regular expression
                                              patterns that match allowed origins.
                                              For regular expression grammar please
                                              see en.cppreference.com/w/cpp/regex/ecmascript
                                              An origin is allowed if it matches either
                                              allow_origins or allow_origin_regex.
                                            items:
                                              type: string
                                            type: array
                                          allowOrigins:
                                            description: Specifies the list of origins
                                              that will be allowed to do CORS requests.
                                              An origin is allowed if it matches either
                                              allow_origins or allow_origin_regex.
                                            items:
                                              type: string
                                            type: array
                                          disabled:
                                            description: If true, specifies the CORS
                                              policy is disabled. which indicates
                                              that the CORS policy is in effect. Defaults
                                              to false.
                                            type: boolean
                                          exposeHeaders:
                                            description: Specifies the content for
                                              the Access-Control-Expose-Headers header.
                                            items:
                                              type: string
                                            type: array
                                          maxAge:
                                            description: Specifies how long the results
                                              of a preflight request can be cached.
                                              This translates to the content for the
                                              Access-Control-Max-Age header.
                                            format: int64
                                            type: integer
                                        type: object
                                      type: array
                                    faultInjectionPolicy:
                                      description: The specification for fault injection
                                        introduced into traffic to test the resiliency
                                        of clients to backend service failure. As
                                        part of fault injection, when clients send
                                        requests to a backend service, delays can
                                        be introduced by Loadbalancer on a percentage
                                        of requests before sending those request to
                                        the backend service. Similarly requests from
                                        clients can be aborted by the Loadbalancer
                                        for a percentage of requests. timeout and
                                        retry_policy will be ignored by clients that
                                        are configured with a fault_injection_policy.
                                      items:
                                        properties:
                                          abort:
                                            description: The specification for how
                                              client requests are aborted as part
                                              of fault injection.
                                            items:
                                              properties:
                                                httpStatus:
                                                  description: The HTTP status code
                                                    used to abort the request. The
                                                    value must be between 200 and
                                                    599 inclusive.
                                                  format: int64
                                                  type: integer
                                                percentage:
                                                  description: The percentage of traffic
                                                    (connections/operations/requests)
                                                    which will be aborted as part
                                                    of fault injection. The value
                                                    must be between 0.0 and 100.0
                                                    inclusive.
                                                  type: number
                                              type: object
                                            type: array
                                          delay:
                                            description: The specification for how
                                              client requests are delayed as part
                                              of fault injection, before being sent
                                              to a backend service.
                                            items:
                                              properties:
                                                fixedDelay:
                                                  description: Specifies the value
                                                    of the fixed delay interval.
                                                  items:
                                                    properties:
                                                      nanos:
                                                        description: Span of time
                                                          that's a fraction of a second
                                                          at nanosecond resolution.
                                                          Durations less than one
                                                          second are represented with
                                                          a 0 'seconds' field and
                                                          a positive 'nanos' field.
                                                          Must be from 0 to 999,999,999
                                                          inclusive.
                                                        format: int64
                                                        type: integer
                                                      seconds:
                                                        description: Span of time
                                                          at a resolution of a second.
                                                          Must be from 0 to 315,576,000,000
                                                          inclusive.
                                                        type: string
                                                    required:
                                                    - seconds
                                                    type: object
                                                  type: array
                                                percentage:
                                                  description: The percentage of traffic
                                                    (connections/operations/requests)
                                                    on which delay will be introduced
                                                    as part of fault injection. The
                                                    value must be between 0.0 and
                                                    100.0 inclusive.
                                                  type: number
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    requestMirrorPolicy:
                                      description: Specifies the policy on how requests
                                        intended for the route's backends are shadowed
                                        to a separate mirrored backend service. Loadbalancer
                                        does not wait for responses from the shadow
                                        service. Prior to sending traffic to the shadow
                                        service, the host / authority header is suffixed
                                        with -shadow.
                                      items:
                                        properties:
                                          backendService:
                                            description: The RegionBackendService
                                              resource being mirrored to.
                                            type: string
                                        required:
                                        - backendService
                                        type: object
                                      type: array
                                    retryPolicy:
                                      description: Specifies the retry policy associated
                                        with this route.
                                      items:
                                        properties:
                                          numRetries:
                                            description: Specifies the allowed number
                                              retries. This number must be > 0.
                                            format: int64
                                            type: integer
                                          perTryTimeout:
                                            description: Specifies a non-zero timeout
                                              per retry attempt.
                                            items:
                                              properties:
                                                nanos:
                                                  description: Span of time that's
                                                    a fraction of a second at nanosecond
                                                    resolution. Durations less than
                                                    one second are represented with
                                                    a 0 'seconds' field and a positive
                                                    'nanos' field. Must be from 0
                                                    to 999,999,999 inclusive.
                                                  format: int64
                                                  type: integer
                                                seconds:
                                                  description: Span of time at a resolution
                                                    of a second. Must be from 0 to
                                                    315,576,000,000 inclusive.
                                                  type: string
                                              required:
                                              - seconds
                                              type: object
                                            type: array
                                          retryConditions:
                                            description: "Specifies one or more conditions
                                              when this retry rule applies. Valid
                                              values are: \n * 5xx: Loadbalancer will
                                              attempt a retry if the backend service
                                              responds with any 5xx response code,
                                              or if the backend service does not respond
                                              at all, example: disconnects, reset,
                                              read timeout, connection failure, and
                                              refused streams. * gateway-error: Similar
                                              to 5xx, but only applies to response
                                              codes 502, 503 or 504. * connect-failure:
                                              Loadbalancer will retry on failures
                                              connecting to backend services, for
                                              example due to connection timeouts.
                                              * retriable-4xx: Loadbalancer will retry
                                              for retriable 4xx response codes. Currently
                                              the only retriable error supported is
                                              409. * refused-stream: Loadbalancer
                                              will retry if the backend service resets
                                              the stream with a REFUSED_STREAM error
                                              code. This reset type indicates that
                                              it is safe to retry. * cancelled: Loadbalancer
                                              will retry if the gRPC status code in
                                              the response header is set to cancelled
                                              * deadline-exceeded: Loadbalancer will
                                              retry if the gRPC status code in the
                                              response header is set to deadline-exceeded
                                              * resource-exhausted: Loadbalancer will
                                              retry if the gRPC status code in the
                                              response header is set to resource-exhausted
                                              * unavailable: Loadbalancer will retry
                                              if the gRPC status code in the response
                                              header is set to unavailable"
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - numRetries
                                        type: object
                                      type: array
                                    timeout:
                                      description: Specifies the timeout for the selected
                                        route. Timeout is computed from the time the
                                        request is has been fully processed (i.e.
                                        end-of-stream) up until the response has been
                                        completely processed. Timeout includes all
                                        retries. If not specified, the default value
                                        is 15 seconds.
                                      items:
                                        properties:
                                          nanos:
                                            description: Span of time that's a fraction
                                              of a second at nanosecond resolution.
                                              Durations less than one second are represented
                                              with a 0 'seconds' field and a positive
                                              'nanos' field. Must be from 0 to 999,999,999
                                              inclusive.
                                            format: int64
                                            type: integer
                                          seconds:
                                            description: Span of time at a resolution
                                              of a second. Must be from 0 to 315,576,000,000
                                              inclusive.
                                            type: string
                                        required:
                                        - seconds
                                        type: object
                                      type: array
                                    urlRewrite:
                                      description: The spec to modify the URL of the
                                        request, prior to forwarding the request to
                                        the matched service
                                      items:
                                        properties:
                                          hostRewrite:
                                            description: Prior to forwarding the request
                                              to the selected service, the request's
                                              host header is replaced with contents
                                              of hostRewrite. The value must be between
                                              1 and 255 characters.
                                            type: string
                                          pathPrefixRewrite:
                                            description: Prior to forwarding the request
                                              to the selected backend service, the
                                              matching portion of the request's path
                                              is replaced by pathPrefixRewrite. The
                                              value must be between 1 and 1024 characters.
                                            type: string
                                        type: object
                                      type: array
                                    weightedBackendServices:
                                      description: A list of weighted backend services
                                        to send traffic to when a route match occurs.
                                        The weights determine the fraction of traffic
                                        that flows to their corresponding backend
                                        service. If all traffic needs to go to a single
                                        backend service, there must be one  weightedBackendService
                                        with weight set to a non 0 number. Once a
                                        backendService is identified and before forwarding
                                        the request to the backend service, advanced
                                        routing actions like Url rewrites and header
                                        transformations are applied depending on additional
                                        settings specified in this HttpRouteAction.
                                      items:
                                        properties:
                                          backendService:
                                            description: The default RegionBackendService
                                              resource. Before forwarding the request
                                              to backendService, the loadbalancer
                                              applies any relevant headerActions specified
                                              as part of this backendServiceWeight.
                                            type: string
                                          headerAction:
                                            description: Specifies changes to request
                                              and response headers that need to take
                                              effect for the selected backendService.
                                              headerAction specified here take effect
                                              before headerAction in the enclosing
                                              HttpRouteRule, PathMatcher and UrlMap.
                                            items:
                                              properties:
                                                requestHeadersToAdd:
                                                  description: Headers to add to a
                                                    matching request prior to forwarding
                                                    the request to the backendService.
                                                  items:
                                                    properties:
                                                      headerName:
                                                        description: The name of the
                                                          header.
                                                        type: string
                                                      headerValue:
                                                        description: The value of
                                                          the header to add.
                                                        type: string
                                                      replace:
                                                        description: If false, headerValue
                                                          is appended to any values
                                                          that already exist for the
                                                          header. If true, headerValue
                                                          is set for the header, discarding
                                                          any values that were set
                                                          for that header.
                                                        type: boolean
                                                    required:
                                                    - headerName
                                                    - headerValue
                                                    - replace
                                                    type: object
                                                  type: array
                                                requestHeadersToRemove:
                                                  description: A list of header names
                                                    for headers that need to be removed
                                                    from the request prior to forwarding
                                                    the request to the backendService.
                                                  items:
                                                    type: string
                                                  type: array
                                                responseHeadersToAdd:
                                                  description: Headers to add the
                                                    response prior to sending the
                                                    response back to the client.
                                                  items:
                                                    properties:
                                                      headerName:
                                                        description: The name of the
                                                          header.
                                                        type: string
                                                      headerValue:
                                                        description: The value of
                                                          the header to add.
                                                        type: string
                                                      replace:
                                                        description: If false, headerValue
                                                          is appended to any values
                                                          that already exist for the
                                                          header. If true, headerValue
                                                          is set for the header, discarding
                                                          any values that were set
                                                          for that header.
                                                        type: boolean
                                                    required:
                                                    - headerName
                                                    - headerValue
                                                    - replace
                                                    type: object
                                                  type: array
                                                responseHeadersToRemove:
                                                  description: A list of header names
                                                    for headers that need to be removed
                                                    from the response prior to sending
                                                    the response back to the client.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          weight:
                                            description: Specifies the fraction of
                                              traffic sent to backendService, computed
                                              as weight / (sum of all weightedBackendService
                                              weights in routeAction) . The selection
                                              of a backend service is determined only
                                              for new traffic. Once a user's request
                                              has been directed to a backendService,
                                              subsequent requests will be sent to
                                              the same backendService as determined
                                              by the BackendService's session affinity
                                              policy. The value must be between 0
                                              and 1000
                                            format: int64
                                            type: integer
                                        required:
                                        - backendService
                                        - weight
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              service:
                                description: The region backend service resource to
                                  which traffic is directed if this rule is matched.
                                  If routeAction is additionally specified, advanced
                                  routing actions like URL Rewrites, etc. take effect
                                  prior to sending the request to the backend. However,
                                  if service is specified, routeAction cannot contain
                                  any weightedBackendService s. Conversely, if routeAction
                                  specifies any weightedBackendServices, service must
                                  not be specified. Only one of urlRedirect, service
                                  or routeAction.weightedBackendService must be set.
                                type: string
                              urlRedirect:
                                description: When this rule is matched, the request
                                  is redirected to a URL specified by urlRedirect.
                                  If urlRedirect is specified, service or routeAction
                                  must not be set.
                                items:
                                  properties:
                                    hostRedirect:
                                      description: The host that will be used in the
                                        redirect response instead of the one that
                                        was supplied in the request. The value must
                                        be between 1 and 255 characters.
                                      type: string
                                    httpsRedirect:
                                      description: If set to true, the URL scheme
                                        in the redirected request is set to https.
                                        If set to false, the URL scheme of the redirected
                                        request will remain the same as that of the
                                        request. This must only be set for UrlMaps
                                        used in TargetHttpProxys. Setting this true
                                        for TargetHttpsProxy is not permitted. The
                                        default is set to false.
                                      type: boolean
                                    pathRedirect:
                                      description: The path that will be used in the
                                        redirect response instead of the one that
                                        was supplied in the request. pathRedirect
                                        cannot be supplied together with prefixRedirect.
                                        Supply one alone or neither. If neither is
                                        supplied, the path of the original request
                                        will be used for the redirect. The value must
                                        be between 1 and 1024 characters.
                                      type: string
                                    prefixRedirect:
                                      description: The prefix that replaces the prefixMatch
                                        specified in the HttpRouteRuleMatch, retaining
                                        the remaining portion of the URL before redirecting
                                        the request. prefixRedirect cannot be supplied
                                        together with pathRedirect. Supply one alone
                                        or neither. If neither is supplied, the path
                                        of the original request will be used for the
                                        redirect. The value must be between 1 and
                                        1024 characters.
                                      type: string
                                    redirectResponseCode:
                                      description: "The HTTP Status code to use for
                                        this RedirectAction. Supported values are:
                                        \n * MOVED_PERMANENTLY_DEFAULT, which is the
                                        default value and corresponds to 301. \n *
                                        FOUND, which corresponds to 302. \n * SEE_OTHER
                                        which corresponds to 303. \n * TEMPORARY_REDIRECT,
                                        which corresponds to 307. In this case, the
                                        request method will be retained. \n * PERMANENT_REDIRECT,
                                        which corresponds to 308. In this case, the
                                        request method will be retained. Possible
                                        values: [\"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\",
                                        \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"]"
                                      type: string
                                    stripQuery:
                                      description: If set to true, any accompanying
                                        query portion of the original URL is removed
                                        prior to redirecting the request. If set to
                                        false, the query portion of the original URL
                                        is retained. The default value is false.
                                      type: boolean
                                  type: object
                                type: array
                            required:
                            - priority
                            type: object
                          type: array
                      required:
                      - name
                      type: object
                    type: array
                  project:
                    type: string
                  region:
                    description: The Region in which the url map should reside. If
                      it is not provided, the provider region is used.
                    type: string
                  test:
                    description: The list of expected URL mappings. Requests to update
                      this UrlMap will succeed only if all of the test cases pass.
                    items:
                      properties:
                        description:
                          description: Description of this test case.
                          type: string
                        host:
                          description: Host portion of the URL.
                          type: string
                        path:
                          description: Path portion of the URL.
                          type: string
                        service:
                          description: A reference to expected RegionBackendService
                            resource the given URL should be mapped to.
                          type: string
                      required:
                      - host
                      - path
                      - service
                      type: object
                    type: array
                required:
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RegionURLMapStatus defines the observed state of RegionURLMap.
            properties:
              atProvider:
                properties:
                  creationTimestamp:
                    type: string
                  fingerprint:
                    type: string
                  id:
                    type: string
                  mapId:
                    format: int64
                    type: integer
                  selfLink:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
