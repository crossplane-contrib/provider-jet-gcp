apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: cxflows.dialogflow.gcp.jet.crossplane.io
spec:
  group: dialogflow.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: CxFlow
    listKind: CxFlowList
    plural: cxflows
    singular: cxflow
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CxFlow is the Schema for the CxFlows API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CxFlowSpec defines the desired state of CxFlow
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: The description of the flow. The maximum length is
                      500 characters. If exceeded, the request is rejected.
                    type: string
                  displayName:
                    description: The human-readable name of the flow.
                    type: string
                  eventHandlers:
                    description: 'A flow''s event handlers serve two purposes: They
                      are responsible for handling events (e.g. no match, webhook
                      errors) in the flow. They are inherited by every page''s [event
                      handlers][Page.event_handlers], which can be used to handle
                      common events regardless of the current page. Event handlers
                      defined in the page have higher priority than those defined
                      in the flow. Unlike transitionRoutes, these handlers are evaluated
                      on a first-match basis. The first one that matches the event
                      get executed, with the rest being ignored.'
                    items:
                      properties:
                        event:
                          description: The name of the event to handle.
                          type: string
                        targetFlow:
                          description: 'The target flow to transition to. Format:
                            projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/flows/<Flow ID>.'
                          type: string
                        targetPage:
                          description: 'The target page to transition to. Format:
                            projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/flows/<Flow ID>/pages/<Page ID>.'
                          type: string
                        triggerFulfillment:
                          description: The fulfillment to call when the event occurs.
                            Handling webhook errors with a fulfillment enabled with
                            webhook could cause infinite loop. It is invalid to specify
                            such fulfillment for a handler handling webhooks.
                          items:
                            properties:
                              messages:
                                description: The list of rich message responses to
                                  present to the user.
                                items:
                                  properties:
                                    text:
                                      description: The text response message.
                                      items:
                                        properties:
                                          text:
                                            description: A collection of text responses.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              returnPartialResponses:
                                description: 'Whether Dialogflow should return currently
                                  queued fulfillment response messages in streaming
                                  APIs. If a webhook is specified, it happens before
                                  Dialogflow invokes webhook. Warning: 1) This flag
                                  only affects streaming API. Responses are still
                                  queued and returned once in non-streaming API. 2)
                                  The flag can be enabled in any fulfillment but only
                                  the first 3 partial responses will be returned.
                                  You may only want to apply it to fulfillments that
                                  have slow webhooks.'
                                type: boolean
                              tag:
                                description: The tag used by the webhook to identify
                                  which fulfillment is being called. This field is
                                  required if webhook is specified.
                                type: string
                              webhook:
                                description: 'The webhook to call. Format: projects/<Project
                                  ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook
                                  ID>.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  languageCode:
                    description: 'The language of the following fields in flow: Flow.event_handlers.trigger_fulfillment.messages
                      Flow.event_handlers.trigger_fulfillment.conditional_cases Flow.transition_routes.trigger_fulfillment.messages
                      Flow.transition_routes.trigger_fulfillment.conditional_cases
                      If not specified, the agent''s default language is used. Many
                      languages are supported. Note: languages must be enabled in
                      the agent before they can be used.'
                    type: string
                  nluSettings:
                    description: NLU related settings of the flow.
                    items:
                      properties:
                        classificationThreshold:
                          description: To filter out false positive results and still
                            get variety in matched natural language inputs for your
                            agent, you can tune the machine learning classification
                            threshold. If the returned score value is less than the
                            threshold value, then a no-match event will be triggered.
                            The score values range from 0.0 (completely uncertain)
                            to 1.0 (completely certain). If set to 0.0, the default
                            of 0.3 is used.
                          type: number
                        modelTrainingMode:
                          description: 'Indicates NLU model training mode. * MODEL_TRAINING_MODE_AUTOMATIC:
                            NLU model training is automatically triggered when a flow
                            gets modified. User can also manually trigger model training
                            in this mode. * MODEL_TRAINING_MODE_MANUAL: User needs
                            to manually trigger NLU model training. Best for large
                            flows whose models take long time to train. Possible values:
                            ["MODEL_TRAINING_MODE_AUTOMATIC", "MODEL_TRAINING_MODE_MANUAL"]'
                          type: string
                        modelType:
                          description: 'Indicates the type of NLU model. * MODEL_TYPE_STANDARD:
                            Use standard NLU model. * MODEL_TYPE_ADVANCED: Use advanced
                            NLU model. Possible values: ["MODEL_TYPE_STANDARD", "MODEL_TYPE_ADVANCED"]'
                          type: string
                      type: object
                    type: array
                  parent:
                    description: 'The agent to create a flow for. Format: projects/<Project
                      ID>/locations/<Location ID>/agents/<Agent ID>.'
                    type: string
                  transitionRouteGroups:
                    description: 'A flow''s transition route group serve two purposes:
                      They are responsible for matching the user''s first utterances
                      in the flow. They are inherited by every page''s [transition
                      route groups][Page.transition_route_groups]. Transition route
                      groups defined in the page have higher priority than those defined
                      in the flow. Format:projects/<Project ID>/locations/<Location
                      ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup
                      ID>.'
                    items:
                      type: string
                    type: array
                  transitionRoutes:
                    description: "A flow's transition routes serve two purposes: They
                      are responsible for matching the user's first utterances in
                      the flow. They are inherited by every page's [transition routes][Page.transition_routes]
                      and can support use cases such as the user saying \"help\" or
                      \"can I talk to a human?\", which can be handled in a common
                      way regardless of the current page. Transition routes defined
                      in the page have higher priority than those defined in the flow.
                      \n TransitionRoutes are evalauted in the following order: TransitionRoutes
                      with intent specified. TransitionRoutes with only condition
                      specified. TransitionRoutes with intent specified are inherited
                      by pages in the flow."
                    items:
                      properties:
                        condition:
                          description: The condition to evaluate against form parameters
                            or session parameters. At least one of intent or condition
                            must be specified. When both intent and condition are
                            specified, the transition can only happen when both are
                            fulfilled.
                          type: string
                        intent:
                          description: 'The unique identifier of an Intent. Format:
                            projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/intents/<Intent ID>. Indicates that the transition
                            can only happen when the given intent is matched. At least
                            one of intent or condition must be specified. When both
                            intent and condition are specified, the transition can
                            only happen when both are fulfilled.'
                          type: string
                        targetFlow:
                          description: 'The target flow to transition to. Format:
                            projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/flows/<Flow ID>.'
                          type: string
                        targetPage:
                          description: 'The target page to transition to. Format:
                            projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/flows/<Flow ID>/pages/<Page ID>.'
                          type: string
                        triggerFulfillment:
                          description: The fulfillment to call when the condition
                            is satisfied. At least one of triggerFulfillment and target
                            must be specified. When both are defined, triggerFulfillment
                            is executed first.
                          items:
                            properties:
                              messages:
                                description: The list of rich message responses to
                                  present to the user.
                                items:
                                  properties:
                                    text:
                                      description: The text response message.
                                      items:
                                        properties:
                                          text:
                                            description: A collection of text responses.
                                            items:
                                              type: string
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              returnPartialResponses:
                                description: 'Whether Dialogflow should return currently
                                  queued fulfillment response messages in streaming
                                  APIs. If a webhook is specified, it happens before
                                  Dialogflow invokes webhook. Warning: 1) This flag
                                  only affects streaming API. Responses are still
                                  queued and returned once in non-streaming API. 2)
                                  The flag can be enabled in any fulfillment but only
                                  the first 3 partial responses will be returned.
                                  You may only want to apply it to fulfillments that
                                  have slow webhooks.'
                                type: boolean
                              tag:
                                description: The tag used by the webhook to identify
                                  which fulfillment is being called. This field is
                                  required if webhook is specified.
                                type: string
                              webhook:
                                description: 'The webhook to call. Format: projects/<Project
                                  ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook
                                  ID>.'
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                required:
                - displayName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: CxFlowStatus defines the observed state of CxFlow.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  name:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
