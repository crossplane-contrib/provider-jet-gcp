---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: routerpeers.compute.gcp.jet.crossplane.io
spec:
  group: compute.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: RouterPeer
    listKind: RouterPeerList
    plural: routerpeers
    singular: routerpeer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RouterPeer is the Schema for the RouterPeers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RouterPeerSpec defines the desired state of RouterPeer
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  advertiseMode:
                    description: 'User-specified flag to indicate which mode to use
                      for advertisement. Valid values of this enum field are: ''DEFAULT'',
                      ''CUSTOM'' Default value: "DEFAULT" Possible values: ["DEFAULT",
                      "CUSTOM"]'
                    type: string
                  advertisedGroups:
                    description: "User-specified list of prefix groups to advertise
                      in custom mode, which can take one of the following options:
                      \n * 'ALL_SUBNETS': Advertises all available subnets, including
                      peer VPC subnets. * 'ALL_VPC_SUBNETS': Advertises the router's
                      own VPC subnets. * 'ALL_PEER_VPC_SUBNETS': Advertises peer subnets
                      of the router's VPC network. \n Note that this field can only
                      be populated if advertiseMode is 'CUSTOM' and overrides the
                      list defined for the router (in the \"bgp\" message). These
                      groups are advertised in addition to any specified prefixes.
                      Leave this field blank to advertise no custom groups."
                    items:
                      type: string
                    type: array
                  advertisedIpRanges:
                    description: User-specified list of individual IP ranges to advertise
                      in custom mode. This field can only be populated if advertiseMode
                      is 'CUSTOM' and is advertised to all peers of the router. These
                      IP ranges will be advertised in addition to any specified groups.
                      Leave this field blank to advertise no custom IP ranges.
                    items:
                      properties:
                        description:
                          description: User-specified description for the IP range.
                          type: string
                        range:
                          description: The IP range to advertise. The value must be
                            a CIDR-formatted string.
                          type: string
                      required:
                      - range
                      type: object
                    type: array
                  advertisedRoutePriority:
                    description: The priority of routes advertised to this BGP peer.
                      Where there is more than one matching route of maximum length,
                      the routes with the lowest priority value win.
                    type: number
                  bfd:
                    description: BFD configuration for the BGP peering.
                    items:
                      properties:
                        minReceiveInterval:
                          description: The minimum interval, in milliseconds, between
                            BFD control packets received from the peer router. The
                            actual value is negotiated between the two routers and
                            is equal to the greater of this value and the transmit
                            interval of the other router. If set, this value must
                            be between 1000 and 30000.
                          type: number
                        minTransmitInterval:
                          description: The minimum interval, in milliseconds, between
                            BFD control packets transmitted to the peer router. The
                            actual value is negotiated between the two routers and
                            is equal to the greater of this value and the corresponding
                            receive interval of the other router. If set, this value
                            must be between 1000 and 30000.
                          type: number
                        multiplier:
                          description: The number of consecutive BFD packets that
                            must be missed before BFD declares that a peer is unavailable.
                            If set, the value must be a value between 5 and 16.
                          type: number
                        sessionInitializationMode:
                          description: 'The BFD session initialization mode for this
                            BGP peer. If set to ''ACTIVE'', the Cloud Router will
                            initiate the BFD session for this BGP peer. If set to
                            ''PASSIVE'', the Cloud Router will wait for the peer router
                            to initiate the BFD session for this BGP peer. If set
                            to ''DISABLED'', BFD is disabled for this BGP peer. Possible
                            values: ["ACTIVE", "DISABLED", "PASSIVE"]'
                          type: string
                      required:
                      - sessionInitializationMode
                      type: object
                    type: array
                  enable:
                    description: The status of the BGP peer connection. If set to
                      false, any active session with the peer is terminated and all
                      associated routing information is removed. If set to true, the
                      peer connection can be established with routing information.
                      The default is true.
                    type: boolean
                  interface:
                    description: Name of the interface the BGP peer is associated
                      with.
                    type: string
                  ipAddress:
                    description: IP address of the interface inside Google Cloud Platform.
                      Only IPv4 is supported.
                    type: string
                  name:
                    description: Name of this BGP peer. The name must be 1-63 characters
                      long, and comply with RFC1035. Specifically, the name must be
                      1-63 characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  peerAsn:
                    description: Peer BGP Autonomous System Number (ASN). Each BGP
                      interface may use a different value.
                    type: number
                  peerIpAddress:
                    description: IP address of the BGP interface outside Google Cloud
                      Platform. Only IPv4 is supported.
                    type: string
                  project:
                    type: string
                  region:
                    description: Region where the router and BgpPeer reside. If it
                      is not provided, the provider region is used.
                    type: string
                  router:
                    description: The name of the Cloud Router in which this BgpPeer
                      will be configured.
                    type: string
                required:
                - interface
                - name
                - peerAsn
                - peerIpAddress
                - router
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RouterPeerStatus defines the observed state of RouterPeer.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  managementType:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
