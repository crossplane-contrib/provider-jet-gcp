---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: instances.bigtable.gcp.jet.crossplane.io
spec:
  group: bigtable.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the Instances API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  cluster:
                    description: A block of cluster configuration options. This can
                      be specified at least once.
                    items:
                      properties:
                        autoscalingConfig:
                          description: A list of Autoscaling configurations. Only
                            one element is used and allowed.
                          items:
                            properties:
                              cpuTarget:
                                description: The target CPU utilization for autoscaling.
                                  Value must be between 10 and 80.
                                type: number
                              maxNodes:
                                description: The maximum number of nodes for autoscaling.
                                type: number
                              minNodes:
                                description: The minimum number of nodes for autoscaling.
                                type: number
                            required:
                            - cpuTarget
                            - maxNodes
                            - minNodes
                            type: object
                          type: array
                        clusterId:
                          description: The ID of the Cloud Bigtable cluster.
                          type: string
                        kmsKeyName:
                          description: 'Describes the Cloud KMS encryption key that
                            will be used to protect the destination Bigtable cluster.
                            The requirements for this key are: 1) The Cloud Bigtable
                            service account associated with the project that contains
                            this cluster must be granted the cloudkms.cryptoKeyEncrypterDecrypter
                            role on the CMEK key. 2) Only regional keys can be used
                            and the region of the CMEK key must match the region of
                            the cluster. 3) All clusters within an instance must use
                            the same CMEK key. Values are of the form projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}'
                          type: string
                        numNodes:
                          description: The number of nodes in your Cloud Bigtable
                            cluster. Required, with a minimum of 1 for a PRODUCTION
                            instance. Must be left unset for a DEVELOPMENT instance.
                          type: number
                        storageType:
                          description: The storage type to use. One of "SSD" or "HDD".
                            Defaults to "SSD".
                          type: string
                        zone:
                          description: The zone to create the Cloud Bigtable cluster
                            in. Each cluster must have a different zone in the same
                            region. Zones that support Bigtable instances are noted
                            on the Cloud Bigtable locations page.
                          type: string
                      required:
                      - clusterId
                      type: object
                    type: array
                  deletionProtection:
                    description: Whether or not to allow Terraform to destroy the
                      instance. Unless this field is set to false in Terraform state,
                      a terraform destroy or terraform apply that would delete the
                      instance will fail.
                    type: boolean
                  displayName:
                    description: The human-readable display name of the Bigtable instance.
                      Defaults to the instance name.
                    type: string
                  instanceType:
                    description: The instance type to create. One of "DEVELOPMENT"
                      or "PRODUCTION". Defaults to "PRODUCTION".
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A mapping of labels to assign to the resource.
                    type: object
                  name:
                    description: The name (also called Instance Id in the Cloud Console)
                      of the Cloud Bigtable instance.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                required:
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
