apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: metrics.logging.gcp.jet.crossplane.io
spec:
  group: logging.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Metric
    listKind: MetricList
    plural: metrics
    singular: metric
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Metric is the Schema for the Metrics API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricSpec defines the desired state of Metric
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bucketOptions:
                    description: The bucketOptions are required when the logs-based
                      metric is using a DISTRIBUTION value type and it describes the
                      bucket boundaries used to create a histogram of the extracted
                      values.
                    items:
                      properties:
                        explicitBuckets:
                          description: Specifies a set of buckets with arbitrary widths.
                          items:
                            properties:
                              bounds:
                                description: The values must be monotonically increasing.
                                items:
                                  type: number
                                type: array
                            required:
                            - bounds
                            type: object
                          type: array
                        exponentialBuckets:
                          description: Specifies an exponential sequence of buckets
                            that have a width that is proportional to the value of
                            the lower bound. Each bucket represents a constant relative
                            uncertainty on a specific value in the bucket.
                          items:
                            properties:
                              growthFactor:
                                description: Must be greater than 1.
                                type: number
                              numFiniteBuckets:
                                description: Must be greater than 0.
                                format: int64
                                type: integer
                              scale:
                                description: Must be greater than 0.
                                type: number
                            type: object
                          type: array
                        linearBuckets:
                          description: Specifies a linear sequence of buckets that
                            all have the same width (except overflow and underflow).
                            Each bucket represents a constant absolute uncertainty
                            on the specific value in the bucket.
                          items:
                            properties:
                              numFiniteBuckets:
                                description: Must be greater than 0.
                                format: int64
                                type: integer
                              offset:
                                description: Lower bound of the first bucket.
                                type: number
                              width:
                                description: Must be greater than 0.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: A description of this metric, which is used in documentation.
                      The maximum length of the description is 8000 characters.
                    type: string
                  filter:
                    description: An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-filters)
                      which is used to match log entries.
                    type: string
                  labelExtractors:
                    additionalProperties:
                      type: string
                    description: A map from a label key string to an extractor expression
                      which is used to extract data from a log entry field and assign
                      as the label value. Each label key specified in the LabelDescriptor
                      must have an associated extractor expression in this map. The
                      syntax of the extractor expression is the same as for the valueExtractor
                      field.
                    type: object
                  metricDescriptor:
                    description: The metric descriptor associated with the logs-based
                      metric.
                    items:
                      properties:
                        displayName:
                          description: A concise name for the metric, which can be
                            displayed in user interfaces. Use sentence case without
                            an ending period, for example "Request count". This field
                            is optional but it is recommended to be set for any metrics
                            associated with user-visible concepts, such as Quota.
                          type: string
                        labels:
                          description: The set of labels that can be used to describe
                            a specific instance of this metric type. For example,
                            the appengine.googleapis.com/http/server/response_latencies
                            metric type has a label for the HTTP response code, response_code,
                            so you can look at latencies for successful responses
                            or just for responses that failed.
                          items:
                            properties:
                              description:
                                description: A human-readable description for the
                                  label.
                                type: string
                              key:
                                description: The label key.
                                type: string
                              valueType:
                                description: 'The type of data that can be assigned
                                  to the label. Default value: "STRING" Possible values:
                                  ["BOOL", "INT64", "STRING"]'
                                type: string
                            required:
                            - key
                            type: object
                          type: array
                        metricKind:
                          description: 'Whether the metric records instantaneous values,
                            changes to a value, etc. Some combinations of metricKind
                            and valueType might not be supported. For counter metrics,
                            set this to DELTA. Possible values: ["DELTA", "GAUGE",
                            "CUMULATIVE"]'
                          type: string
                        unit:
                          description: The unit in which the metric value is reported.
                            It is only applicable if the valueType is 'INT64', 'DOUBLE',
                            or 'DISTRIBUTION'. The supported units are a subset of
                            [The Unified Code for Units of Measure](http://unitsofmeasure.org/ucum.html)
                            standard
                          type: string
                        valueType:
                          description: 'Whether the measurement is an integer, a floating-point
                            number, etc. Some combinations of metricKind and valueType
                            might not be supported. For counter metrics, set this
                            to INT64. Possible values: ["BOOL", "INT64", "DOUBLE",
                            "STRING", "DISTRIBUTION", "MONEY"]'
                          type: string
                      required:
                      - metricKind
                      - valueType
                      type: object
                    type: array
                  name:
                    description: The client-assigned metric identifier. Examples -
                      "error_count", "nginx/requests". Metric identifiers are limited
                      to 100 characters and can include only the following characters
                      A-Z, a-z, 0-9, and the special characters _-.,+!*',()%/. The
                      forward-slash character (/) denotes a hierarchy of name pieces,
                      and it cannot be the first character of the name.
                    type: string
                  project:
                    type: string
                  valueExtractor:
                    description: A valueExtractor is required when using a distribution
                      logs-based metric to extract the values to record from a log
                      entry. Two functions are supported for value extraction - EXTRACT(field)
                      or REGEXP_EXTRACT(field, regex). The argument are 1. field -
                      The name of the log entry field from which the value is to be
                      extracted. 2. regex - A regular expression using the Google
                      RE2 syntax (https://github.com/google/re2/wiki/Syntax) with
                      a single capture group to extract data from the specified log
                      entry field. The value of the field is converted to a string
                      before applying the regex. It is an error to specify a regex
                      that does not include exactly one capture group.
                    type: string
                required:
                - filter
                - metricDescriptor
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: MetricStatus defines the observed state of Metric.
            properties:
              atProvider:
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
