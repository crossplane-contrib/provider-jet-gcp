apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: nodegroups.compute.gcp.jet.crossplane.io
spec:
  group: compute.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: NodeGroup
    listKind: NodeGroupList
    plural: nodegroups
    singular: nodegroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodeGroup is the Schema for the NodeGroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NodeGroupSpec defines the desired state of NodeGroup
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoscalingPolicy:
                    description: If you use sole-tenant nodes for your workloads,
                      you can use the node group autoscaler to automatically manage
                      the sizes of your node groups.
                    items:
                      properties:
                        maxNodes:
                          description: Maximum size of the node group. Set to a value
                            less than or equal to 100 and greater than or equal to
                            min-nodes.
                          format: int64
                          type: integer
                        minNodes:
                          description: Minimum size of the node group. Must be less
                            than or equal to max-nodes. The default value is 0.
                          format: int64
                          type: integer
                        mode:
                          description: 'The autoscaling mode. Set to one of the following:
                            - OFF: Disables the autoscaler. - ON: Enables scaling
                            in and scaling out. - ONLY_SCALE_OUT: Enables only scaling
                            out. You must use this mode if your node groups are configured
                            to restart their hosted VMs on minimal servers. Possible
                            values: ["OFF", "ON", "ONLY_SCALE_OUT"]'
                          type: string
                      type: object
                    type: array
                  description:
                    description: An optional textual description of the resource.
                    type: string
                  initialSize:
                    description: The initial number of nodes in the node group. One
                      of 'initial_size' or 'size' must be specified.
                    format: int64
                    type: integer
                  maintenancePolicy:
                    description: 'Specifies how to handle instances when a node in
                      the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE,
                      or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT.'
                    type: string
                  maintenanceWindow:
                    description: contains properties for the timeframe of maintenance
                    items:
                      properties:
                        startTime:
                          description: instances.start time of the window. This must
                            be in UTC format that resolves to one of 00:00, 04:00,
                            08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5
                            and 08:00 are valid.
                          type: string
                      required:
                      - startTime
                      type: object
                    type: array
                  name:
                    description: Name of the resource.
                    type: string
                  nodeTemplate:
                    description: The URL of the node template to which this node group
                      belongs.
                    type: string
                  project:
                    type: string
                  size:
                    description: The total number of nodes in the node group. One
                      of 'initial_size' or 'size' must be specified.
                    format: int64
                    type: integer
                  zone:
                    description: Zone where this node group is located
                    type: string
                required:
                - nodeTemplate
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: NodeGroupStatus defines the observed state of NodeGroup.
            properties:
              atProvider:
                properties:
                  creationTimestamp:
                    type: string
                  selfLink:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
