apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: disks.compute.gcp.jet.crossplane.io
spec:
  group: compute.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Disk
    listKind: DiskList
    plural: disks
    singular: disk
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Disk is the Schema for the Disks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DiskSpec defines the desired state of Disk
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  diskEncryptionKey:
                    description: "Encrypts the disk using a customer-supplied encryption
                      key. \n After you encrypt a disk with a customer-supplied key,
                      you must provide the same key if you use the disk later (e.g.
                      to create a disk snapshot or an image, or to attach the disk
                      to a virtual machine). \n Customer-supplied encryption keys
                      do not protect access to metadata of the disk. \n If you do
                      not provide an encryption key when creating the disk, then the
                      disk will be encrypted using an automatically generated key
                      and you do not need to provide a key to use the disk later."
                    items:
                      properties:
                        kmsKeySelfLink:
                          description: The self link of the encryption key used to
                            encrypt the disk. Also called KmsKeyName in the cloud
                            console. Your project's Compute Engine System service
                            account ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
                            must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter'
                            to use this feature. See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
                          type: string
                        kmsKeyServiceAccount:
                          description: The service account used for the encryption
                            request for the given KMS key. If absent, the Compute
                            Engine Service Agent service account is used.
                          type: string
                        rawKeySecretRef:
                          description: Specifies a 256-bit customer-supplied encryption
                            key, encoded in RFC 4648 base64 to either encrypt or decrypt
                            this resource.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  image:
                    description: 'The image from which to initialize this disk. This
                      can be one of: the image''s ''self_link'', ''projects/{project}/global/images/{image}'',
                      ''projects/{project}/global/images/family/{family}'', ''global/images/{image}'',
                      ''global/images/family/{family}'', ''family/{family}'', ''{project}/{family}'',
                      ''{project}/{image}'', ''{family}'', or ''{image}''. If referred
                      by family, the images names must include the family name. If
                      they don''t, use the [google_compute_image data source](/docs/providers/google/d/compute_image.html).
                      For instance, the image ''centos-6-v20180104'' includes its
                      family name ''centos-6''. These images can be referred by family
                      name here.'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this disk.  A list of key->value
                      pairs.
                    type: object
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?'
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  physicalBlockSizeBytes:
                    description: Physical block size of the persistent disk, in bytes.
                      If not present in a request, a default value is used. Currently
                      supported sizes are 4096 and 16384, other sizes may be added
                      in the future. If an unsupported value is requested, the error
                      message will list the supported values for the caller's project.
                    format: int64
                    type: integer
                  project:
                    type: string
                  provisionedIops:
                    description: Indicates how many IOPS must be provisioned for the
                      disk.
                    format: int64
                    type: integer
                  size:
                    description: "Size of the persistent disk, specified in GB. You
                      can specify this field when creating a persistent disk using
                      the 'image' or 'snapshot' parameter, or specify it alone to
                      create an empty persistent disk. \n If you specify this field
                      along with 'image' or 'snapshot', the value must not be less
                      than the size of the image or the size of the snapshot. \n ~>**NOTE**
                      If you change the size, Terraform updates the disk size if upsizing
                      is detected but recreates the disk if downsizing is requested.
                      You can add 'lifecycle.prevent_destroy' in the config to prevent
                      destroying and recreating."
                    format: int64
                    type: integer
                  snapshot:
                    description: "The source snapshot used to create this disk. You
                      can provide this as a partial or full URL to the resource. If
                      the snapshot is in another project than this disk, you must
                      supply a full URL. For example, the following are valid values:
                      \n * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot'
                      * 'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot'
                      * 'snapshot'"
                    type: string
                  sourceImageEncryptionKey:
                    description: The customer-supplied encryption key of the source
                      image. Required if the source image is protected by a customer-supplied
                      encryption key.
                    items:
                      properties:
                        kmsKeySelfLink:
                          description: The self link of the encryption key used to
                            encrypt the disk. Also called KmsKeyName in the cloud
                            console. Your project's Compute Engine System service
                            account ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
                            must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter'
                            to use this feature. See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
                          type: string
                        kmsKeyServiceAccount:
                          description: The service account used for the encryption
                            request for the given KMS key. If absent, the Compute
                            Engine Service Agent service account is used.
                          type: string
                        rawKey:
                          description: Specifies a 256-bit customer-supplied encryption
                            key, encoded in RFC 4648 base64 to either encrypt or decrypt
                            this resource.
                          type: string
                      type: object
                    type: array
                  sourceSnapshotEncryptionKey:
                    description: The customer-supplied encryption key of the source
                      snapshot. Required if the source snapshot is protected by a
                      customer-supplied encryption key.
                    items:
                      properties:
                        kmsKeySelfLink:
                          description: The self link of the encryption key used to
                            encrypt the disk. Also called KmsKeyName in the cloud
                            console. Your project's Compute Engine System service
                            account ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
                            must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter'
                            to use this feature. See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
                          type: string
                        kmsKeyServiceAccount:
                          description: The service account used for the encryption
                            request for the given KMS key. If absent, the Compute
                            Engine Service Agent service account is used.
                          type: string
                        rawKey:
                          description: Specifies a 256-bit customer-supplied encryption
                            key, encoded in RFC 4648 base64 to either encrypt or decrypt
                            this resource.
                          type: string
                      type: object
                    type: array
                  type:
                    description: URL of the disk type resource describing which disk
                      type to use to create the disk. Provide this when creating the
                      disk.
                    type: string
                  zone:
                    description: A reference to the zone where the disk resides.
                    type: string
                required:
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DiskStatus defines the observed state of Disk.
            properties:
              atProvider:
                properties:
                  creationTimestamp:
                    type: string
                  labelFingerprint:
                    type: string
                  lastAttachTimestamp:
                    type: string
                  lastDetachTimestamp:
                    type: string
                  selfLink:
                    type: string
                  sourceImageId:
                    type: string
                  sourceSnapshotId:
                    type: string
                  users:
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
